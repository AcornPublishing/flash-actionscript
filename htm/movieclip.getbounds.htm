<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>MovieClip.getBounds</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip.getBounds( referenceClip) </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myMovieClip</span></span>is the movie clip you want to getthe bounding box size for, and these values will be with respect to the movieclip <span class=Code><span style='font-family:Courier'>referenceClip</span></span><spanclass=Code>.</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash 5 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.getBounds()</span></span>method returns the corner points of the bounding box that wouldenclose the movie clip.</p><h3>Description</h3><p class=MsoBodyText>When you select any symbol in Flash, a bounding box willappear around it:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=131 height=151src="../png/0586-dict8-54.png"> </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>movieClip.getBounds()</span></span>method gives you the two corner points of a similar box shape that wouldcompletely enclose the original movie clip. Assuming our clip above was called <spanclass=Code><span style='font-family:Courier'>bug</span></span>then:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>bugBoundingBox= bug.getBounds(_root);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… will return the corner points of the bounding box asproperties of <span class=Code><span style='font-family:Courier'>bugBoundingBox</span></span>(relative to <span class=Code><spanstyle='font-family:Courier'>_root</span></span>) as shown:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=350 height=253src="../png/0586-dict8-56.png"> <b><span style='color:red'> </span></b><img width=162 height=71src="../png/0586-dict8-55.png"><b><spanstyle='color:red'> </span></b></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>These values can be used to draw the bounding box usingvalues for the found corner points as shown:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=350 height=257src="../png/0586-dict8-57.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>(Remember that the positive <span class=Code><spanstyle='font-family:Courier'>y</span></span> direction in Flash is the print basedversion (downwards) not the Cartesian one (upwards).)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The significance of the properties returned by <spanclass=Code><span style='font-family:Courier'>clipA.getBounds(clipB)</span></span>is not immediately obvious. They give you enough information to draw a boundingbox in <span class=Code><span style='font-family:Courier'>clipB</span></span>that will enclose <span class=Code><span style='font-family:Courier'>clipA</span></span>.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=336 valign=top style='width:252.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myBounds = myMovieClip.getBounds(_root);</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myBounds</span></span> will be returned with  properties:</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myBounds.xMax</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myBounds.xMin</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myBounds.yMax</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myBounds.yMin</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr>  <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myXMax = clip1_mc.getBounds(clip2_mc).xMax;</span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>The <span class=Code><span  style='font-family:Courier'>xMax</span></span> property only is returned.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>This method can be used to dynamically create:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Abounding box that encloses a movie clip. You could use this to denote aselection. </p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Afilled square that completely covers a movie clip.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This is one of those methods that seem to have no usefulapplications until you actually find it fits the bill for something you arecurrently working on! The fact that you can use this method to dynamicallycover a movie clip whose size may be variable has applications in:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Maskingusing <span class=Code><span style='font-family:Courier'>MovieClip.setMask</span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Dynamicallycreating movie clips to act as hit areas using <span class=Code><spanstyle='font-family:Courier'>MovieClip.hitArea</span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Hidingmovie clips under dynamically created rectangles, something you may want to dofor certain puzzle and card games</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The ability to enclose a movie clip with a bounding boxallows you to denote selections or to create drag boxes.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See the example file <ahref="../fla/movieclipgetbounds.fla">movieclipgetbounds.fla</a> / <ahref="../swf/movieclipgetbounds.swf">movieclipgetbounds.swf</a>. This shows howyou can use <span class=Code><span style='font-family:Courier'>MovieClip.getBounds</span></span>to create a general set of routines that will create a bounding box for anyshaped movie clip, and this can be used as a general way of highlighting movieclips during user interaction.</p><h3>Tips and precautions</h3><p class=MsoBodyText>None.</p>