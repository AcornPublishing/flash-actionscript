<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>Sound Constructor</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySound= new Sound(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySound= new Sound(targetMovieClip); </span></span></p><h4>Syntax 1</h4><p class=MsoBodyText>Where an instance of the <span class=Code><spanstyle='font-family:Courier'>Sound </span></span>object is being defined as <spanclass=Code><span style='font-family:Courier'>mySound. </span></span></p><h4>Syntax 2</h4><p class=MsoBodyText>Where an instance of the <span class=Code><spanstyle='font-family:Courier'>Sound </span></span>object is being defined as <spanclass=Code><span style='font-family:Courier'>mySound. </span></span>Theoptional parameter <span class=Code><span style='font-family:Courier'>targetMovieClip </span></span>defines the target object of the sound.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The object is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 and above. </span></span>There are <span class=ImportantWord><span style='font-family:Helvetica'>noknown issues </span></span>with any version of Flash that supports this object.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The Sound Constructor is used to create a new instance ofthe <span class=Code><span style='font-family:Courier'>Sound </span></span>object. Using the <span class=Code><span style='font-family:Courier'>Sound </span></span>object gives you ultimate control over a particular sound in your Flash movie.If you were to simply place a sound on a timeline in authoring mode, youroptions are very limited if you want to modify or control the sound. Thereforethis object should be used to add sound to your movie if you want to manipulateit at runtime. It will ensure you have flexibility and customization optionsavailable when working with sounds.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The optional parameter <span class=Code><spanstyle='font-family:Courier'>targetMovieClip </span></span>can be used tospecify a movie clip in which to wrap the <span class=Code><spanstyle='font-family:Courier'>Sound </span></span>object. If you don’t specify atarget movie clip the sound will become a global sound. See below for moreinformation.</p><h3>Description</h3><p class=MsoBodyText>This constructor will create a new instance of the <spanclass=Code><span style='font-family:Courier'>Sound </span></span>object.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=288 valign=top style='width:216.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=264 valign=top style='width:2.75in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><br> <span class=Code><span style='font-family:Courier'>mySound = new Sound(); </span></span></p>  </td>  <td width=264 valign=top style='width:2.75in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Creating an instance of the <span  class=Code><span style='font-family:Courier'>Sound </span></span>object without a target. It is a global sound.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><br> <span class=Code><span style='font-family:Courier'>mySound = new Sound(mySoundTarget); </span></span></p>  </td>  <td width=264 valign=top style='width:2.75in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>A target is specified this time, so you can control this sound independently of the global sounds.</p>  <p class=MsoBodyText style='margin-left:0in'> </p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>There are many excellent reasons to use sound in yourFlash movies. Sound is a great way of enhancing animations; it plays a veryimportant role. Flash MX is quite capable of creating sound mixers including makingadjustments to volume, panning and even loading sound files at runtime. Theexample files <a href="../fla/sound.fla">sound.fla</a>and <a href="../swf/sound.swf">sound.swf</a>show how to use components to create a mixer which can be used quite easily toadd your own sounds.</p><h3>Tips and precautions</h3><p class=MsoBodyText>There are two types of sounds you can create, a globalsound or a target sound. A global sound exists on the <span class=Code><spanstyle='font-family:Courier'>_root </span></span>timeline. If you alter thevolume in an instance of the <span class=Code><span style='font-family:Courier'>Sound </span></span>object that is a global sound, all other global sounds will also change volume.You may want to manipulate each sound individually, for this you’ll need createa targeted sound. The following code is an example of this:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySound= new Sound(targetMovieClip); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code>… and to create a global sound you simply removethe target clip reference like so:</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySound= new Sound(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code>You can create more than one global sound andthese all take on the same properties. Take the following code for example:</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound1= new Sound(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound1.attachSound(&quot;sound1&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound1.start(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound2= new Sound(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound2.attachSound(&quot;sound2&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound2.start(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//comment this line in and out to see the difference </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//sound1.setVolume(10); </span></span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code>This code creates two instance of the </span><spanclass=Code><span style='font-family:Courier'>Sound </span></span><spanclass=Code>object and attaches two sounds from the Library. Make sure you have two soundsin your Flash movie with linkage identifier names of </span><spanclass=Code><span style='font-family:Courier'>sound1 </span></span><spanclass=Code>and </span><span class=Code><span style='font-family:Courier'>sound2 </span></span><spanclass=Code>before using this code. After you have run it once, remove the comments fromthe last line and test the movie again. You’ll notice that both sounds aren’tsofter. The following is a tweak on the code above and creates two empty movieclips, so you can alter each sound independently of the other.</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;sound1holder&quot;,1); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;sound2holder&quot;,2); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound1= new Sound(sound1holder); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound1.attachSound(&quot;sound1&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound1.start(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound2= new Sound(sound2holder); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound2.attachSound(&quot;sound2&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>sound2.start(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//comment these two lines in and out to see the difference </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//sound1.setVolume(20); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//sound2.setVolume(20); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code>When you run the above code, be sure to commentthe last two lines in and out at different times. You’ll notice that you cannow control the volume of each sound. This is because a target movie clip waspassed to the </span><span class=Code><span style='font-family:Courier'>Sound </span></span><spanclass=Code>object. For </span><span class=Code><span style='font-family:Courier'>sound1 </span></span><spanclass=Code>it was the </span><span class=Code><span style='font-family:Courier'>sound1holder </span></span><spanclass=Code>movie clip, which was dynamically created using the </span><spanclass=Code><span style='font-family:Courier'>createEmptyMovieClip </span></span><spanclass=Code>method.</span></p>