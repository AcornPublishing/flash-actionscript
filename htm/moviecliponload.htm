<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>MovieClip.onLoad</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip.onLoad</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myMovieClip</span></span>is a movie clip instance.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash 6 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.onLoad</span></span>event handler is invoked when the movie clip is instantiated.</p><h3>Description</h3><p class=MsoBodyText>The<span class=Code><span style='font-family:Courier'>MovieClip.onLoad</span></span>event handler is invoked whenthe movie clip is first loaded and appears on the timeline. The functionassociated with the <span class=Code><span style='font-family:Courier'>MovieClip.onLoad</span></span>event handler is executed when this happens.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The Flash MX <span class=Code><span style='font-family:Courier'>MovieClip.onLoad</span></span> event is different to the Flash 5 <spanclass=Code><span style='font-family:Courier'>onClipEvent(load)</span></span>event because of the order Flash processes the event model and associatedscripts (events are generated first and then the scripts on frames areexecuted). This means that the <spanclass=Code><span style='font-family:Courier'>MovieClip.onLoad</span></span> event has already occurred by the time the <spanclass=Code><span style='font-family:Courier'>onLoad</span></span> event is actually defined, and the eventhandler will not run. In most cased, you don’t need this event handler in anycase. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This script will not initialize <span class=Code><spanstyle='font-family:Courier'>myVariable</span></span>, and the <span class=Code><span style='font-family:Courier'>onEnterFrame</span></span>script will continually display <span class=Code><span style='font-family:Courier'>undefined</span></span>:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.onLoad= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.myVariable = 10;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.onEnterFrame= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    trace(myVariable);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><i>&nbsp;</i></p><p class=MsoBodyText>That’s not actually a problem once you understand howFlash MX works, because you can just as well do this:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText style='margin-left:0in;text-indent:14.2pt'><spanclass=Code><span style='font-family:Courier'>myClip.myVariable = 10;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.onEnterFrame= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    trace(myVariable);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This time you will get your <span class=Code><spanstyle='font-family:Courier'>10</span></span>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The real application for <span class=Code><spanstyle='font-family:Courier'>MovieClip.onLoad</span></span> is when creatingprototypes. The prototype definition occurs <i>before</i>the movie clip is placed on the stage, so the <span class=Code><spanstyle='font-family:Courier'>MovieClip.onLoad</span></span> will work.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myProto= function () {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.onLoad = function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        trace(&quot;I am onLoad&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    };</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.onEnterFrame = function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        trace(&quot;I am onEnterFrame&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    };</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myProto.prototype= new MovieClip();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Object.registerClass(&quot;myClip&quot;,myProto);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.attachMovie(&quot;myClip&quot;,&quot;myNewClip&quot;, 0);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>onLoad</span></span>event now occurs as expected:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=454 height=150src="../png/0586-dict8-85.png"></p><p class=Picturereference><span class=Code> </span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>There is a known ‘ feature’ of <span class=Code><spanstyle='font-family:Courier'>MovieClip.onLoad</span></span> though. If youattach <i>any </i>code to a movie clip inthe Flash 5 style (click on the movie clip itself and add an <span class=Code><spanstyle='font-family:Courier'>onClipEvent(event)</span></span> handler directlyto the instance), the Flash MX <span class=Code><span style='font-family:Courier'>MovieClip.onLoad</span></span>event now starts to work, and it does this even if you just add a single space(no code) to the movie clip. <span class=ImportantWord><span style='font-family:Helvetica'>This is an undocumented at the time of writing, and you arerecommended to not rely on it for the future.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>As we said earlier, Flash MX doesn’t really need <spanclass=Code><span style='font-family:Courier'>onLoad</span></span> outside aprototype definition anyway!</p><h3>Examples and practical uses</h3><p class=MsoBodyText><span class=Code>The </span><span class=Code><spanstyle='font-family:Courier'>MovieClip.onLoad</span></span><span class=Code> is useful inFlash MX only when creating prototypes. You are strongly advised to use the </span><spanclass=Code><span style='font-family:Courier'>onClipEvent(load)</span></span><spanclass=Code>Flash 5 movie clip event if you find you really need an </span><spanclass=Code><span style='font-family:Courier'>onLoad</span></span><spanclass=Code>event (and if you don’t want to use OOP).</span></p><h3>Tips and precautions</h3><p class=MsoBodyText>As seen above, the <span class=Code><spanstyle='font-family:Courier'>MovieClip.onLoad</span></span> event is really onlyuseful for programming with OOP.</p>