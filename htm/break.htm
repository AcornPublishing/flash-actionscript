<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12874587"><span lang=EN-US> break</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>break;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> On encounteringa </span><span class=Code><span lang=EN-US style='font-family:Courier;'>break</span></span><span lang=EN-US>  action during a looping code block (such as a </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>for</span></span><span lang=EN-US> or </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>while</span></span><span lang=EN-US> ), the rest of the code block (andany remaining loops) will be skipped, and execution will continue from the endof the block onwards.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thisaction is </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>compatible with Flash 4 or later</span></span><span lang=EN-US>. It is associated with the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>for</span></span><span class=ImportantWord><span lang=EN-USstyle='font-weight:normal'>, </span></span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>for… in</span></span><spanclass=ImportantWord><span lang=EN-US style='font-weight:normal'>, </span></span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>do…</span></span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>while</span></span><spanclass=ImportantWord><span lang=EN-US style='font-weight:normal'> and </span></span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>while</span></span><span lang=EN-US> loops, and </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>provides ameans of exiting such loops prematurely</span></span><span lang=EN-US>. It is usually combined with an </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>if</span></span><span lang=EN-US>  actionthat is used to define the premature exit conditions.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>break</span></span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>action</span></span><span lang=EN-US>  allows you to exit a loop at aspecific point. See examples below;</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=336 valign=top style='width:252.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>for (i=0; i&lt;100; i++) {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>   if  (i&gt;50) {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>       break;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>   }</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(i)</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>}</span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> The </span><span  class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>for</span></span><span lang=EN-US> loop is configured to loop 100 times (</span><span  class=Code><span lang=EN-US style='font-family:Courier;'>i = 0</span></span><span lang=EN-US>   to </span><span class=Code><span lang=EN-US style='font-family:Courier;'>99</span></span><span lang=EN-US> ). It will however only make it to 50 because the </span><span  class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>for</span></span><span lang=EN-US>   will execute the </span><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>break</span></span><span lang=EN-US>  action the first time </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>i</span></span><span lang=EN-US>  is  greater than </span><span class=Code><span lang=EN-US style='font-family:  Courier;'>50</span></span><span lang=EN-US>.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>x = 3;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>while (true) {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    x++;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(x);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>   if  (x&gt;9) {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>       break;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>   }</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>}</span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> The </span><span  class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>while</span></span><span lang=EN-US> loop will never exit on its own because its </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>while</span></span><span lang=EN-US> condition is always </span><span class=Code><span  lang=EN-US style='font-family:Courier;'>true</span></span><span lang=EN-US>. The </span><span class=Code><span  lang=EN-US style='font-family:Courier;'>break</span></span><span lang=EN-US>  causes an exit when </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>x&gt;9</span></span><span lang=EN-US>.  The loop will run for </span><span class=Code><span lang=EN-US  style='font-family:Courier;'>x = 4</span></span><span lang=EN-US>  to </span><span class=Code><span  lang=EN-US style='font-family:Courier;'>10</span></span><span lang=EN-US>.</span></p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> The codebelow uses </span><span class=Code><span lang=EN-US style='font-family:Courier;'>break</span></span><span lang=EN-US>  to finish a search through an array as soon as the required result isfound. The loop sequentially searches for a particular name </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>searchName</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> As soon asthe required name is found, there is no need to continue the search so the loopis exited. This shows the main real use of the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>break</span></span><span lang=EN-US> action: <i>when you know that a loop should run amaximum number of times, but once a certain result has been found, there is noneed to continue looping.</i></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>name = [&quot;bill&quot;, &quot;ben&quot;,&quot;joe&quot;, &quot;frank&quot;];</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>phone = [234567, 563789, 987646, 398422];</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>searchName = &quot;ben&quot;;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>for (i=0; i&lt;name.length; i++) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   if (name[i]== searchName) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      break;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   }</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>trace(phone[i]);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'><img width=156 height=99src="../png/0586-dict3-05.png"></span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span lang=EN-US> The OOP(object orientated programming) version of the same code typically uses </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>for…in</span></span><span lang=EN-US>  and wouldlook like this (and would give the same result, but has a data structure thatwould be easier to modify than arrays):</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>addressBook = {contact1:{name:&quot;bill&quot;,phone:234567}, contact2:{name:&quot;ben&quot;, phone:563789},contact3:{name:&quot;joe&quot;, phone:987646},contact4:{name:&quot;frank&quot;, phone:398422}};</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>//</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>searchName = &quot;ben&quot;;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>for (contacts in addressBook) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   if(addressBook[contacts].name == searchName) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      trace(addressBook[contacts].phone);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      break;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   }</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'><img width=155 height=158src="../png/0586-dict3-06.png"></span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> See also the example </span></span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>arguments.caller</span></span><span lang=EN-US>, <ahref="../fla/argumentscaller.fla">arguments.caller.fla</a> and <ahref="../swf/arguments.caller.swf">arguments.caller.swf</a> <spanclass=Code>. This FLA includes a collision detection routine that ensures that   a movie clip is always resting on a surface (it’s in the </span></span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>metalBall</span></span><span class=Code><span lang=EN-US>   function):</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   for (i=0;i&lt;10; i++) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      if(!ground_mc.hitTest(this._x, this._y-i, true)) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>         this._y= this._y-i;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>         break;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      } </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'><img border=0 width=324 height=162src="../png/0586-dict3-07.png"></span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p><p class=MsoBodyText><span lang=EN-US> Thiscontrols a ball shaped movie clip with its registration point at the bottom.Because of the ball’s forward velocity, it will always &quot;sink&quot; (as perthe center ball above) some way into the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>ground_mc</span></span><span lang=EN-US>  movie clip when it drops onto it.The loop raises the ball ten times and checks to see if it is now clear of theground clip, and if this is successful, the ball will end up resting on theground as shown via the rightmost ball. If this occurs before </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>10</span></span><span lang=EN-US>  loops, the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>break</span></span><span lang=EN-US>  action stops further tests (tomaintain performance). The test is limited to ten loops to maintain anacceptable frame rate; if the ball is too far sunk into the ground, it is left10 pixels above where is previously was (but still sunk into the ground), andthe loop will run ten times again next frame, and hopefully clear the ball ofthe ground this frame.</span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US> Rememberthat code placed <i>before </i>a loop willrun even during the broken loop, whereas code placed <i>after </i>the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>break</span></span><span lang=EN-US>  will not. Consider the followingcode:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>x = 0;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>while (true) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   x++;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   message =&quot;\nI am loop &quot;+x;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  trace(message);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  trace(&quot;I am before the break&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   if (x&gt;9){</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      break;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   }</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  trace(&quot;I am after the break&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Theoutput for the last three loops of this </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>while</span></span><span lang=EN-US>  will look like this:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img border=0 width=264 height=211src="../png/0586-dict3-08.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Note thatfor the last loop, the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>trace</span></span><span lang=EN-US> actionafter the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>break</span></span><span lang=EN-US>  isn’t executed.</span></p>