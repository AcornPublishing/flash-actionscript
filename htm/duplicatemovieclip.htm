<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>duplicateMovieClip</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>duplicateMovieClip(target,instanceName, depth); </span></span></p><p class=MsoBodyText><span class=Code><i><spanstyle='font-family:Courier'>&nbsp;</span></i></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>target </span></span>is the target of the movie clip thatyou want to duplicate, <span class=Code><span style='font-family:Courier'>instanceName </span></span>is the name of the copy, and <spanclass=Code><span style='font-family:Courier'>depth </span></span>is the depth of the copy. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This action is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 4 or later. </span></span>In Flash 5, you should use the <span class=ImportantWord><spanstyle='font-family:Helvetica'>MovieClip.duplicateMovieClip </span></span>action when duplicating movie clips.The <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>action has some advantages over the method-based version however, in that ithas some useful undocumented features. See the Tips and Precautions section.See also Chapter 1.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>action is the Flash 4 version of the Flash 5 <span class=Code><spanstyle='font-family:Courier'>MovieClip.duplicateMovieClip </span></span>method.The two are not identical in their operation however:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span class=ImportantWord><spanstyle='font-family:Symbol;font-weight:normal'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>They have different syntaxes. See also <spanclass=ImportantWord><span style='font-family:Helvetica'>MovieClip.duplicateMovieClip.</span></span><spanclass=ImportantWord><span style='font-weight:normal'> </span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>The<span class=Code><span style='font-family:Courier'>duplicatMovieClip </span></span>action can duplicate text fields and buttons as well as movie clips, whereasthe method-based versions cannot (there is no <span class=Code><spanstyle='font-family:Courier'>Button.duplicateMovieClip </span></span>or <spanclass=Code><span style='font-family:Courier'>TextField.duplicateMovieClip </span></span>methods, either documented or undocumented). See also Tips and Precautions.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>action allows you to make copies of a movie clip instance already on the stage.The copy will have all the properties as the original <spanclass=ImportantWord><span style='font-family:Helvetica'>except </span></span>:</p><p class=MsoBodyText style='margin-left:.5in;text-indent:-.25in;'><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Current frame number. The copies will always start atframe 1 irrespective of the current frame number of the original.</p><p class=MsoBodyText style='margin-left:.5in;text-indent:-.25in;'><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Timeline variables. The copies will not inherit thevariables/data objects on the timeline of the original, although they willinherit any embedded graphic objects (movie clips, buttons, text fields) on thetimeline of the original.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Duplicated clips will also <span class=ImportantWord><spanstyle='font-family:Helvetica'>not </span></span>have the events of the original attached.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The instance name of the copy should be unique. If youkeep the instance name the same, Flash will not be able to differentiatebetween the copy and the original, and this will cause problems. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The ordering of symbols on the stage, per timeline, isdone by looking at a property called <span class=ImportantWord><spanstyle='font-family:Helvetica'>depth.</span></span><i> </i>Flash looks at the depths of all symbols on the stage, and drawsthem in the order specified by it, lowest depth first (lowest down). This meansthat a symbol with a higher depth will be drawn over one with a lower depth. Ifany symbol has embedded symbols, Flash will look at the local depths of thattimeline, and order them in that depth order within the symbol.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=274 height=298src="../png/0586-dict5-04.png"><i> </i></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Symbols that are placed on stage manually during contentcreation have depths that are not accessible to ActionScript (or rather, theyare accessible, just not documented… the depths of such symbols are <i>negative</i>).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The depths of symbols that are placed on stage viaActionScript have the following rules:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Theymust be positive (assuming you are following the documented features).</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Ifyou place a symbol on a timeline at an already occupied depth, the previous symbolat that depth will be overwritten and effectively deleted.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>is somewhat superceded by a number of newer methods. These include:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span class=ImportantWord><spanstyle='font-family:Symbol;font-weight:normal'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span class=ImportantWord><spanstyle='font-family:Helvetica'>MovieClip.attachMovie </span></span></p><p class=Bullet-Level1><span class=ImportantWord><spanstyle='font-family:Symbol;font-weight:normal'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span class=ImportantWord><spanstyle='font-family:Helvetica'>MovieClip.createEmptyMovieClip </span></span></p><p class=MsoBodyText><b>&nbsp;</b></p><p class=MsoBodyText><b> </b>Also, to remove a duplicated movie clip,see <span class=ImportantWord><span style='font-family:Helvetica'>removeMovieClip </span></span>and <span class=ImportantWord><spanstyle='font-family:Helvetica'>MovieClip.removeMovieClip. </span></span></p><p class=MsoBodyText> </p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>duplicateMovieClip(&quot;my_mc&quot;, &quot;myOther_mc&quot;, 1); </span></span></p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Duplicates the existing movie clip <span class=Code><span  style='font-family:Courier'>my_mc </span></span>and calls the copy <span class=Code><span style='font-family:  Courier'>myOther_mc. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>for (i=0; i&lt;10; i++) { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    duplicateMovieClip(&quot;my_mc&quot;, &quot;clip&quot;+i, i); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Duplicates the existing movie clip <span class=Code><span  style='font-family:Courier'>my_mc </span></span>ten times. The copied clips will be called <span class=Code><span  style='font-family:Courier'>clip0 </span></span>to <span class=Code><span style='font-family:Courier'>clip9 </span></span>and will exist at a depth of <span  class=Code><span style='font-family:Courier'>0 </span></span>to <span  class=Code><span style='font-family:Courier'>9. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>action allows you to copy movie clips already on the stage. Where you want tobuild up effects that use a large number of identical movie clips, anActionScript based duplication solution can be much less time consuming tocreate (as well as more flexible) than having to manually place all the clipson stage yourself during content creation. An added advantage of usingscripting to generate clips at runtime is that it results in a smaller SWFbecause your keyframes will have less information in them.</p><h3>Tips and precautions</h3><p class=MsoBodyText>Unlike the <span class=Code><span style='font-family:Courier'>MovieClip.duplicateMovieClip </span></span>method, <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>also works for both text fields and buttons, which means that you can apply itto all graphic objects available to Flash MX.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you attempt to duplicate something that is not on thestage, <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>will fail silently (it will not work, but will also raise no errors either).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Although the <span class=ImportantWord><spanstyle='font-family:Helvetica'>MovieClip.attachMovie </span></span>method allows you to copy clips fromthe library, it has one obvious, and one less obvious disadvantage over the <spanclass=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>method. The obvious one is that <span class=Code><span style='font-family:Courier'>MovieClip.attachMovie </span></span>has no similar methods for the <span class=Code><span style='font-family:Courier'>Button </span></span>or <span class=Code><span style='font-family:Courier'>TextField </span></span>objects. <span class=Code><span style='font-family:Courier'>duplicateMovieClip </span></span>works for all three graphic object types.</p><p class=MsoBodyText>The less obvious disadvantage is that all the clips thatyou want to use <span class=Code><span style='font-family:Courier'>MovieClip.attachMovie </span></span>with have to be in the library when you attempt to copy them. That means youhave to export them for ActionScript. This makes Flash load them up on frame 1of your SWF, and effectively stops you being able to stream the clips in (theonly option you have is a potentially long preload at frame 1, and this meansthat you <i>have </i>to use a preloader orsplash screen – something that web audiences seem to particularly dislike aboutFlash). If you use <span class=Code><span style='font-family:Courier'>duplicateMovieClip, </span></span>the clips only have to be on stage at the frame you start using <spanclass=Code><span style='font-family:Courier'>duplicateMovieClip, </span></span>and this allows you to consider a streaming strategy.</p>