<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>set variable</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>set(variable,expression); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where a new variable will be created with the name of <spanclass=Code><span style='font-family:Courier'>variable </span></span>and itsvalue will be <span class=Code><span style='font-family:Courier'>expression. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This function is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 4 and above. </span></span>There are <span class=ImportantWord><span style='font-family:Helvetica'>noknown issues </span></span>with any version of Flash that supports this object.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The set function is used to assign a value, <spanclass=Code><span style='font-family:Courier'>expression, </span></span>to avariable, <span class=Code><span style='font-family:Courier'>variable. </span></span>You can use the set function regardless of <span class=Code><spanstyle='font-family:Courier'>expression </span></span>’s data type (<spanclass=Code><span style='font-family:Courier'>String, </span></span><spanclass=Code><span style='font-family:Courier'>Number, </span></span><spanclass=Code><span style='font-family:Courier'>Boolean, </span></span>etc.). Thedata type of the new variable will be established at runtime (when the code isexecuted, not compiled) and can be modified. See also the <spanclass=ImportantWord><span style='font-family:Helvetica'>var </span></span>operator.</p><h3>Description</h3><p class=MsoBodyText>Use this function to assign a value to a variable.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=193 valign=top style='width:144.75pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=190 valign=top style='width:142.15pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Additional explanation </span></span></p>  </td>  <td width=189 valign=top style='width:141.7pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=193 valign=top style='width:144.75pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>set(“myVariable”, “foobar”); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=190 valign=top style='width:142.15pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Returns a variable, <span  class=Code><span style='font-family:Courier'>myVariable, </span></span>with a value of <span class=Code><span style='font-family:Courier'>“foobar”. </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=189 valign=top style='width:141.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=193 valign=top style='width:144.75pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>set(“myObject”, new Object()); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=190 valign=top style='width:142.15pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Returns an object named <span  class=Code><span style='font-family:Courier'>myObject. </span></span></p>  </td>  <td width=189 valign=top style='width:141.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'> </p>  </td> </tr> <tr> <td width=193 valign=top style='width:144.75pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>set(“person”, {name: “foobar”, age: 21}); </span></span></p>  </td>  <td width=190 valign=top style='width:142.15pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Returns an object named <span  class=Code><span style='font-family:Courier'>person. </span></span></p>  </td>  <td width=189 valign=top style='width:141.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>The <span class=Code><span  style='font-family:Courier'>person </span></span>object will contain two properties, <span class=Code><span style='font-family:Courier'>name </span></span> and <span class=Code><span style='font-family:Courier'>age, </span></span> with the values <span class=Code><span style='font-family:Courier'>“foobar” </span></span> and <span class=Code><span style='font-family:Courier'>21. </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=193 valign=top style='width:144.75pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>extension = &quot;bar&quot;; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>set(&quot;foo&quot;+extension, &quot;string&quot;); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=190 valign=top style='width:142.15pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Returns a variable, <span  class=Code><span style='font-family:Courier'>foobar, </span></span>with a value of <span class=Code><span style='font-family:Courier'>“string”. </span></span></p>  </td>  <td width=189 valign=top style='width:141.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>This example uses the <span  class=ImportantWord><span style='font-family:Helvetica'>+ (addition operator) </span></span> to concatenate two strings to form the name of a variable.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=193 valign=top style='width:144.75pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>set(myVariable, “string”); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=190 valign=top style='width:142.15pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Returns nothing.</p>  </td>  <td width=189 valign=top style='width:141.7pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>The first parameter of the set function must be a String.</p>  </td> </tr></table><h3>Examples and practical uses</h3><h4>General</h4><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>set </span></span>function can be used to do many things including create a variable or aninstance of a particular object. The example files, <ahref="../fla/set.fla">set.fla</a>/ <a href="../swf/set.swf">set.swf</a>,show an example of using the <span class=Code><span style='font-family:Courier'>set </span></span>function to create instances of many types of objects.</p><h3>Tips and precautions</h3><h4>Alternative syntax</h4><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>set </span></span>function was first released in version 4 of Flash and there has since beenimprovements in the way you can define variables and objects. Take for examplethe following code, which creates a variable named <span class=Code><spanstyle='font-family:Courier'>person </span></span>with a string value of <spanclass=Code><span style='font-family:Courier'>foobar, </span></span>and anobject named <span class=Code><span style='font-family:Courier'>person </span></span>with two properties using the <span class=Code><span style='font-family:Courier'>set </span></span>function:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>set(“person”,“foobar”); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>set(“person”,{name: “foobar”, age:21}); </span></span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code>The following code is preferred using the </span><spanclass=ImportantWord><span style='font-family:Helvetica'>var </span></span><spanclass=Code>operator:</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>varperson = “foobar”; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>varperson = {name: “foobar”, age:21}; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This syntax is more intuitive and easier to read. </p>