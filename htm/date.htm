<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-US> Date</span></h1><p class=MsoBodyText><span lang=EN-US> This object is addressed more fully in <i>Chapter 13</i>.</span></p><h3><span lang=EN-US> Definitions</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><span class=Code><span style='font-family:Courier'>Date</span></span><span lang=EN-US>  object allows you to track the date andtime. It uses two time measurement systems:</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>The local time as specified by your operatingsystem</span></span><span lang=EN-US> : this is the time held by the userscomputer, and this will differ between two users in different time zones.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>UTC (coordinated universal time, also known asUniversal time and World time)</span></span><span lang=EN-US> :Greenwich meantime was based around astronomical measurements, but UTC supercedes it, andclosely follows International Atomic Time (TAI), given that the standardmeasurement of 1 second is now defined in terms of the atomic frequencies ofcesium.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>NB–</span></span><span lang=EN-US>  For anyone wondering why the abbreviations UTC/TAIdon't seem to match the full terms, think French!</span></p><h3><span lang=EN-US> Using the date object in practice</span></h3><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Accuracy</span></span>:w<span lang=EN-US> hen using the Date object, the fact that UTC uses atomic clocks reallymeans nothing when it comes to accuracy, because Flash will still use the localtime held by your computer as its base. When expressing UTC, it will simplyadd/subtract the number of hours required to convert the local time to UTCtime. Bottom line: if the local time held by a users computer is incorrect, sowill the UTC time as well.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Daylight saving times are handled differentlydepending on which operating system your user is on, and whether they are usingthe Flash 5 or 6 players. Unfortunately, the </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>System.capabilities.os</span></span> <span lang=EN-US> doesn'tdifferentiate finely enough between operating systems for you to identify howdaylight saving is being handled. In any case, it also depends on whether theuser actually has daylight saving hours enabled in their operating system andhas set it up correctly!</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Our advice with daylight saving is forget it. You willget it wrong some of the time if you try to second guess, and if the user isn'tbothered with the fact that his computer isn't handling it properly, thenthat's something you have to live with. The only real option if it reallybothers you is to ask the user the correct time. Given that the novelty hasworn off and folks don't even bother entering the correct time into themicrowave oven anymore, don't expect them to do the same for a transientwebsite visit!</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Practicalusage</span></span>: if<span lang=EN-US>  you want to create time sorted content for a globalaudience, then you should consider using UTC time. This means for example, thatany posts made from international sources to a guest-book or web-log will beconsistent in their time ordering, give or take the minor errors in the localtimes and daylight saving offsets held on the user computers. That's goodenough for all Flash applications, but if your application depends on the true,internationally legally recognized and scientifically validated <i>true </i>UTC,then you really need to think about using something other than the Flashplayer!</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Many site visitors don't understand what UTC is well enoughto trust it if it appears on a site, and many sites end up using the local timeof their largest user area. This is particularly true because not only thetime, <i>but the date also follows UTC</i></span>,<span lang=EN-US>  and notthe local user date<i>. </i>Users can get really panicky if the date is&quot;wrong&quot; on a website that they are expected to enter data into, andyou will find that their credit cards will stay firmly in pockets. If you'redoing an e-commerce front end, then </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>don't show the time and date</span></span> i<span lang=EN-US> fthere's a chance it may not match to a time that the user understands. Theanswer to this is always &quot;yes there is a chance with the Flashplayer&quot;, because:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> It relies on the time on the users computer beingcorrect.</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> The time-zone being correctly set up in the usersoperating system.</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Daylight saving hours being enabled in the usersoperating system.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If you are simply displaying a time or date stamp thatonly a single user will see, then you don't need to bother with UTC at all, andcan just use the local time on the users computer.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Finally, if you want to create a <i>timer </i>ratherthan <i>the time</i></span>,<span lang=EN-US> the easier to handle </span><spanclass=ImportantWord><span style='font-family:Helvetica'>getTimer()</span></span><span lang=EN-US> action may be more suitable. Also worth considering is the </span><spanclass=ImportantWord><span style='font-family:Helvetica'>setInterval</span></span><span lang=EN-US> timer event if you are after a periodic time based event.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code</span></span>:<span lang=EN-US> unfortunately, the </span><span class=Code><span style='font-family:Courier'>Date</span></span><span lang=EN-US>  object does not have a quick and easy&quot;give me the clock time&quot; and &quot;give me the calendar date&quot;method in a variable format; you have to build up both of them by usingseparate methods that return the year, month, day, hour, minutes, seconds, andmilliseconds, unless you are happy with the standard format. To set up a </span><spanclass=Code><span style='font-family:Courier'>Date</span></span><span lang=EN-US> object driven time requires you to:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Construct a </span><span class=Code><spanlang=EN-US style='font-family:Courier'>Date</span></span><span lang=EN-US> object.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If you are happy with the standarddisplay format, use the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>Date.toString()</span></span><span lang=EN-US> method and display the result.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If you want a custom calendar dateformat, add the results from the separate date, day and year methods to buildit up using string concatenation.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If you want a custom time format, addthe results from the separate hours, minutes, and seconds methods to build itup using string concatenation.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The following code will give you the standard FlashDate format:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(newDate().toString());</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'><img width=338 height=114src="../png/0586_dict4_45.png"></span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span lang=EN-US> Alternatively, if you want a custom format <i>based</i>on the default, you can use the methods of the </span><spanclass=ImportantWord><span style='font-family:Helvetica'>String</span></span> <span lang=EN-US> objectto edit this default text string.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>NB–</span></span><span lang=EN-US>  Note that although the scripting (and Macromediadocumentation) refers to UTC time, the default string labels it as GMT!</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The following code will give you the local date heldon your computer in US format (month/date/year):</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>my_date= new Date();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myDateUSA=(my_date.getMonth()+1)+&quot;/&quot;+my_date.getDate()+&quot;/&quot;+my_date.getFullYear();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(myDateUSA);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>NB–</span></span><span lang=EN-US>  The month returned via </span><span class=Code><spanstyle='font-family:Courier'>getMonth()</span></span><span lang=EN-US>  is aninteger 0-11 rather than 1-12, hence the</span><spanclass=Code><span style='font-family:Courier'>my_date.getMonth()+1</span></span><spanclass=Code><span lang=EN-US style='font-size:8.0pt;'>.</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=338 height=114src="../png/0586_dict4_46.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The following code will give you the local date in UKformat (date/month/year):</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>my_date= new Date();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myDateUK=my_date.getDate()+&quot;/&quot;+(my_date.getMonth()+1)+&quot;/&quot;+my_date.getFullYear();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(myDateUK);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=338 height=114src="../png/0586_dict4_47.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The following code will output a time stampcorresponding to the local time when in 24 hour format (</span>hours:minutes:seconds<span lang=EN-US> ):</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>my_date= new Date();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTime=my_date.getHours()+&quot;:&quot;+my_date.getMinutes()+&quot;:&quot;+my_date.getSeconds();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(myTime);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=338 height=114src="../png/0586_dict4_48.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thefollowing code will output a live (continually updating) time to a text fieldcalled </span><span class=Code><span style='font-family:Courier'>time_txt</span></span><span lang=EN-US>, and this will be in the sameformat as the time shown above:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.onEnterFrame= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   my_date = new Date();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   time_txt.text =my_date.getHours()+&quot;:&quot;+my_date.getMinutes()+&quot;:&quot;+my_date.getSeconds();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> See also the example </span><span class=FileName><spanstyle='font-family:Courier'><a href="../fla/date1.fla">date1.fla</a></span></span> and <spanclass=FileName><span style='font-family:Courier'><a href="../swf/date1.swf">date1.swf</a></span></span>,<span lang=EN-US> which shows the creation of a Flash clock and </span><spanclass=FileName><span style='font-family:Courier'><a href="../fla/date2.fla">date2.fla</a></span></span>and <span class=FileName><span style='font-family:Courier'><ahref="../swf/date2.swf">date2.swf</a></span></span><span lang=EN-US>, which shows the creation of a calendar.</span></p>