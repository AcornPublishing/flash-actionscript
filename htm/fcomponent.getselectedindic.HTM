<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>FComponent.getSelectedIndices</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier;'>FListBox.getSelectedIndices. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a =myComponent.getSelectedIndex(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>a </span></span>is equated to the selected index(es) of the component instance <spanclass=Code><span style='font-family:Courier'>myComponent. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>A list box allows the user to make multiple selections ifthey make additional selections whilst pressing down the <span class=Keyboard><spanstyle='font-family:"New York"'>Control </span></span>or <span class=Keyboard><spanstyle='font-family:"New York"'>Shift </span></span>keys.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=128 height=122src="../png/0586-dict5-27.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>To enable this feature (it is disabled by default) you caneither use the <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.setSelectMultiple </span></span>method, or set the <spanclass=ScreenText><span style='font-family:Optima'>Select Multiple </span></span>field of the list box to <spanclass=Code><span style='font-family:Courier'>true. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=358 height=110src="../png/0586-dict5-28.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method will then return an array containing thecurrently selected indices in the list box instance, or <span class=Code><spanstyle='font-family:Courier'>undefined </span></span>if no selection has yetbeen made. If the first label in the component is selected, then <spanclass=Code><span style='font-family:Courier'>0 </span></span>is returned, <spanclass=Code><span style='font-family:Courier'>1 </span></span>for the second,and do on. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>It is standard practice to use the <span class=Code><spanstyle='font-family:Courier'>getSelectedIndices </span></span>method within thechange handler to retrieve the newly selected choice via the <span class=Code><spanstyle='font-family:Courier'>onChange </span></span>event.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you want the component to instead return the selectedlabel or the data associated with it, you should use the <spanclass=ImportantWord><span style='font-family:Helvetica'>FComponent.getSelectedItems </span></span>method.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=372 valign=top style='width:279.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=168 valign=top style='width:1.75in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Notes</p>  </td> </tr> <tr> <td width=372 valign=top style='width:279.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = myCombo.getSelectedIndices(); </span></span></p>  </td>  <td width=168 valign=top style='width:1.75in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a </span></span> will be equated to the currently selected index of the component instance <span  class=Code><span style='font-family:Courier'>myCombo. </span></span><span  class=Code><span style='font-family:Courier'>a </span></span>will be in the form of an array. The elements will be arranged most recently selected first (<span class=Code><span  style='font-family:Courier'>a[0] </span></span>will be the most recently selected index).</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=372 valign=top style='width:279.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>lastSelected = myCombo.getSelectedIndices()[1]; </span></span></p>  </td>  <td width=168 valign=top style='width:1.75in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>lastSelected </span></span> will be returned as the last selected index in the group selection (and the currently selected item will be available via <span class=Code><span  style='font-family:Courier'>getSelectedIndices[0]. </span></span>If only one item has been selected so far, <span class=Code><span style='font-family:  Courier'>lastSelected </span></span>will be <span class=Code><span  style='font-family:Courier'>undefined. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getSelectedIndices </span></span>method is often used as the means toretrieve the selection in a list box. The standard way to do this is within the<span class=Code><span style='font-family:Courier'>onChange </span></span>handler. To set this up you would:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Definethe <span class=ScreenText><span style='font-family:Optima'>Change Handler </span></span>field in the Property inspector withthe name of a function. In our example, we have called it <span class=Code><spanstyle='font-family:Courier'>change. </span></span>This function will run everytime the user changes the currently selected item in the combo box or list box.To enable multiple selections, you should also set <span class=ScreenText><spanstyle='font-family:Optima'>Select Multiple </span></span>to <span class=Code><span style='font-family:Courier'>true. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=456 height=117src="../png/0586-dict5-29.png"></p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Definethe function itself. In this listing (below), we are simply displaying theselected indexes array (<span class=Code><span style='font-family:Courier'>selectionArray </span></span>)in a text field, but the function can also (and usually does) include the codethat actually responds to the change. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functionchange(component) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    selectionArray =component.getSelectedIndices(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    option_txt.text = selectionArray; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Note that when you use an array in this way (we haveequated our array <span class=Code><span style='font-family:Courier'>selectionArray </span></span>to another array that is returned by the method) you do not have to define <spanclass=Code><span style='font-family:Courier'>selectionArray </span></span>as anew array via the <span class=ImportantWord><span style='font-family:Helvetica'>ArrayConstructor. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See also the example files <ahref="../fla/fcmptgetselectedindices.fla"><spanstyle='font-family:Optima'>fcomponentgetselectedindices.fla</span></a> and <ahref="../swf/fcmptgetselectedindices.swf"><spanstyle='font-family:Optima'>fcomponentgetselectedindices.swf</span></a>.</p><h3>Tips and precautions</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getSelectedIndices </span></span>method will simply return an array of 1 or more numbers between <spanclass=Code><span style='font-family:Courier'>0 </span></span>(if you select thetop label in the list) and the maximum number of labels minus 1. If you want toreturn a user defined value (such as a non sequential number value per label,or the label string values themselves) the <span class=ImportantWord><spanstyle='font-family:Helvetica'>FComponent.getSelectedItems </span></span>methodis the better choice over <span class=Code><span style='font-family:Courier'>getSelectedIndices. </span></span></p>