<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>F<i>Component</i>.getLength</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier;'>FComboBox.getLength </span></span>and <span class=Code><span style='font-family:Courier;'>FListBox.getLength. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a =myComponent.getLength(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText>Where the value of variable <span class=Code><spanstyle='font-family:Courier'>a </span></span>is returned as the number of labelsdisplayed in the component instance <span class=Code><span style='font-family:Courier'>myComponent. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>Both the list box and combo box allow you to select from alist of available options. The <span class=Code><span style='font-family:Courier'>getLength </span></span>method allows you to retrieve the number of these options. Both the combo boxand list box shown below have a length of 5 (labels 0 to 4).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=263 height=140src="../png/0586-dict5-17.png"></p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = myComponent.getLength(); </span></span></p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a </span></span> will equate to the length (number of labels) that exist in <span class=Code><span  style='font-family:Courier'>myComponent. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getLength </span></span>property is used in conjunction with <span class=ImportantWord><spanstyle='font-family:Helvetica'>FComponent.addItem </span></span>and <span class=ImportantWord><spanstyle='font-family:Helvetica'>FComponent.addItemAt. </span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>You can add labels after content creation, and the <spanclass=ImportantWord><span style='font-family:Helvetica'>FComponent.addItemAt </span></span>method allows you to add new labels at a defined position within the existinglabel list. Taking the examples shown above, suppose we added a new label,“label 5” at position 7:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myCombo.addItemAt(7,&quot;label 5&quot;); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText> This would producethe combo drop-down menu as shown below:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=119 height=164src="../png/0586-dict5-18.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>We have 2 undefined positions where the combo shows twospaces. You would do this when your drop-down menu contained options thatrelated to different subject areas, and you wanted to separate the availableoptions with some white space. (For example, the label 5 position may be thequit option, whereas the labels 0 to 4 would be the ‘do something’ options).These spaces are un-selectable, although the <span class=Code><spanstyle='font-family:Courier'>getLength </span></span>method will still countthem in the length value, something that you should be aware of. </p>