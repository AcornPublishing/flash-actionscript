<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-GB>Number (used as a function)</span></h1><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(expression) </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Where </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>expression </span></span><spanlang=EN-GB>is an expression to be converted to a number.</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-GBstyle='font-weight:normal'>This function is compatible with </span></span><spanclass=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>Flash 4 andlater.</span></span><span class=ImportantWord><span lang=EN-GB style='font-weight:normal'> </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function converts an expression into a number. It is used primarily for deprecatingFlash 4 operators in movies played on Player 5 or above.</span></p><h3><span lang=EN-GB>Description</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function converts the expression provided as an argument into a number, andreturns a value based on these values for the expression:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>Boolean </span></span>–returns <span class=Code><span style='font-family:Courier'>1 </span></span>if <spanclass=Code><span style='font-family:Courier'>true, </span></span><spanclass=Code><span style='font-family:Courier'>0 </span></span>if <spanclass=Code><span style='font-family:Courier'>false </span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>Number </span></span>–returns the number</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>String </span></span>–attempts to parse the string as a number (returns a number if successful, <spanclass=Code><span style='font-family:Courier'>NaN </span></span>if not; see <spanclass=ImportantWord><span style='font-family:Helvetica'>NaN </span></span>formore information on this value) </p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span class=ImportantWord><spanstyle='font-family:Helvetica'>Undefined </span></span>– returns <spanclass=Code><span style='font-family:Courier'>0 </span></span>if the expressionis an undefined variable or a method with an undefined result</p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function should not be confused with the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number </span></span><span lang=EN-GB>object, which is a wrapper for the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>Number </span></span><span lang=EN-GB>data type.</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=204 valign=top style='width:153.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Additional explanation </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=204 valign=top style='width:153.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>MyBool = true; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myVal = Number(myBool); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:  Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns a </span><span  class=Code><span lang=EN-GB style='font-family:Courier'>1 </span></span><span  lang=EN-GB>as the argument if a Boolean and is </span><span class=Code><span  lang=EN-GB style='font-family:Courier'>true.</span></span><span lang=EN-GB></span></p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>Booleans values are either </span><span class=Code><span lang=EN-GB style='font-family:  Courier'>0 </span></span><span lang=EN-GB>(</span><span class=Code><span  lang=EN-GB style='font-family:Courier'>false </span></span><span lang=EN-GB>) or </span><span class=Code><span lang=EN-GB style='font-family:Courier'>1 </span></span><span  lang=EN-GB>(</span><span class=Code><span lang=EN-GB style='font-family:  Courier'>true </span></span><span lang=EN-GB>).</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=204 valign=top style='width:153.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>MyNum = 45; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myVal = Number(myNum); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns the value </span><span class=Code><span lang=EN-GB style='font-family:Courier'>45.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>Numbers are returned as numbers.</span></p>  <p class=MsoBodyText style='margin-left:.9pt'>&nbsp;</p>  </td> </tr> <tr> <td width=204 valign=top style='width:153.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>MyNum = ”3.4E5”; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myVal = Number(myNum); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns the value </span><span class=Code><span lang=EN-GB style='font-family:Courier'>340000.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>Strings are parsed as exponential numbers.</span></p>  <p class=MsoBodyText style='margin-left:.9pt'>&nbsp;</p>  </td> </tr> <tr> <td width=204 valign=top style='width:153.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>MyNum = null; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myVal = Number(myNum); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns a value of </span><span class=Code><span lang=EN-GB style='font-family:Courier'>0.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:.9pt'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:.9pt'><span class=Code><span  lang=EN-GB style='font-family:Courier'>undefined </span></span><span  lang=EN-GB>and </span><span class=Code><span lang=EN-GB style='font-family:  Courier'>null </span></span><span lang=EN-GB>values are returned as </span><span  class=Code><span lang=EN-GB style='font-family:Courier'>0.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText style='margin-left:.9pt'>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-GB>Examples and practical uses</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function is used to convert an expression (which can be numbers, strings, orBooleans) into a number. The rules for converting are mentioned above. Forexample:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(true); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will return a value of </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>1.</span></span><spanlang=EN-GB></span></p><p class=MsoBodyText><span lang=EN-GB> </span></p><p class=MsoBodyText><span lang=EN-GB>If a string to be converted by the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>Number() </span></span><spanlang=EN-GB>function cannot be parsed as either an exponential or normal formatnumber, the conversion fails. For example:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(“3762”); </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(“3.14159”); </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(“2.07e-19”); </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(“0.635”) </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>All these will convert properly tonumbers, but the code:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>Number(“3.14*10^5”) </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will all cause errors because theparser cannot determine the meaning of the string. See also the </span><spanclass=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>NaN </span></span><spanlang=EN-GB>value entry, which is associated with the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function.</span></p><h3><span lang=EN-GB>Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function is used primarily to convert deprecated operators from Flash 4 moviesfor playback in Flash 5 or later players. You can use the</span><spanclass=Code><span lang=EN-GB style='font-family:Courier'> Number() </span></span><spanlang=EN-GB>function to manipulate values stored in variables that are not purenumbers. For example, the code:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myStr= “100”; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myVal= Number(myStr) + 100; </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will result in the value </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>200 </span></span><spanlang=EN-GB>stored to </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>myVal.</span></span><span lang=EN-GB> If you didnot convert the string to a number, string concatenation would be performedresulting in </span><span class=Code><span lang=EN-GB style='font-family:Courier'>“100100”.</span></span><spanlang=EN-GB> </span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Confusion often arises with developersbetween the </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Number() </span></span><spanlang=EN-GB>function and the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>Number </span></span><span lang=EN-GB>object. Itcan get even more confusing in that the code:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>newNumber(); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… creates an instance of the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>Number() </span></span><spanlang=EN-GB>object, which is nothing to do with the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Number() </span></span><span lang=EN-GB>function.</span></p>