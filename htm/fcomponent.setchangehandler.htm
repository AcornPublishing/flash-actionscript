<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>F<i>Component</i>.setChangeHandler</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier'>FCheckBox.setChangehandler, </span></span><spanclass=Code><span style='font-family:Courier'>FComboBox.setChangeHandler, </span></span><span class=Code><span style='font-family:Courier'>FListBox.setChangeHandler, </span></span><span class=Code><span style='font-family:Courier'>FRadioButton.setChangeHandler, </span></span>and <span class=Code><span style='font-family:Courier'>FScrollBar.setChangeHandler. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myComponent.setChangeHandler(functionName); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Component.setChangeHandler(functionName,location); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myComponent </span></span>is a component instance. When achange is detected associated with the component, the function <spanclass=Code><span style='font-family:Courier'>functionName </span></span>is run. The function will be assumedto be defined on the current timeline. If it is not, you can add a secondoptional argument <span class=Code><span style='font-family:Courier'>location, </span></span>and this should point to the location of the function.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>When a check box, combo box, list box or scrollbar has itsvalue changed, you can set up a function that will be run on every frame that anew change is detected. This function can be configured to accept a singleargument that identifies the component that has invoked it. This function iscalled the <span class=ImportantWord><span style='font-family:Helvetica'>changeHandler, </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>onChange Handler </span></span>or <span class=ImportantWord><spanstyle='font-family:Helvetica'>call back. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The situation for a radio button is the same, except thatthe process works per radio button group rather than per radio button instance.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=336 valign=top style='width:252.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myComponent.setChangeHandler(&quot;myFunction&quot;); </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The function <span class=Code><span style='font-family:  Courier'>myFunction </span></span>is assigned as the change handler for the component instance <span class=Code><span  style='font-family:Courier'>myComponent. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myComponent.setChangeHandler(&quot;myFunction&quot;, _root); </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The function <span class=Code><span style='font-family:  Courier'>myFunction </span></span>is assigned as the change handler for the component instance <span class=Code><span  style='font-family:Courier'>myComponent. </span></span>The function <span class=Code><span style='font-family:Courier'>myFunction </span></span>is on the timeline <span  class=Code><span style='font-family:Courier'>_root. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myPushButton.setChangeHandler( </span></span><span  class=Code-NEW><span style='font-family:"Optima Bold";border:none;font-weight:  normal;'><span style='border:none'>“ </span></span></span><span  class=Code><span style='font-family:Courier'>myFunction </span></span><span  class=Code-NEW><span style='font-family:"Optima Bold";border:none;font-weight:  normal;'><span style='border:none'>” </span></span></span><span  class=Code><span style='font-family:Courier'>); </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The push button does not have a permanent change of state or value because its change is fleeting. It instead has a <span  class=ImportantWord><span style='font-family:Helvetica'>click handler, </span></span>and you can set this via the <span class=ImportantWord><span  style='font-family:Helvetica'>FComponent.setClickHandler </span></span>method.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>You should note that you can also define the changehandler manually via the Property inspector. This is actually the preferredroute if you are unlikely to change the identity of the change handlerdynamically (something that is a rare thing to need to do).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=429 height=119src="../png/0586-dict5-65.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The change handler is crucial in the operation ofcomponents. Without it, it is very difficult to create responsive interfacesthat use components. Almost all the example files for the other <spanclass=Code><span style='font-family:Courier'>FComponent </span></span>examplesdefine one, and you should refer to them for further guidance.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The change handler is always called with one argument, andthis holds the instance name and path (the <i>target</i>)to the component that has invoked the function. If you want to use it, youshould define a corresponding argument in your change handler. The followingchange handler will send this argument to the Output window:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functiontest(component) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    trace(component); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This feature is useful for writing general changehandlers.</p><h3>Tips and precautions</h3><p class=MsoBodyText>None.</p>