<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-US> System</span></h1><p class=MsoBodyText><span lang=EN-US> Previous to Flash MX, the only way to take a peek atthe set-up of the machine the user was seeing your content on, was viaJavaScript objects (such as </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>window.screen</span></span><span lang=EN-US>,</span><span class=Code><span lang=EN-US style='font-family:Courier;'>window.navigator</span></span><span lang=EN-US>, etc), which you would have to access viathe </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>fsCommand</span></span><span lang=EN-US> action and a JavaScript function embeddedwithin the HTML of your web page. Although workable, experience shows that assoon as you start using more than one language to build your application, youbecome more prone to errors. In particular:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Most software errors in well-writtensoftware occur at interfaces.</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Using more than one language(ActionScript and JavaScript) makes you more vulnerable to change; you are nowcounting on both languages staying the same in their next release for yourapplication to continue working. In the fast moving world of the web, it iswiser not to have to make such assumptions!</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Although the difference betweenJavaScript and ActionScript is not that much, it would be nicer to be able tostay in one environment, and the graphic authoring environment of Flash looksmore inviting than JavaScript for all but the hardcore scripter!</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Most mobile devices do not supportJavaScript because they use proprietary or cut down browsers, so it becomesimpossible to write truly cross platform SWFs if you rely on it.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>NB –</span></span><span lang=EN-US>  It can be seen from the abovediscussion that one of the main uses of the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>System.capabilities</span></span><span lang=EN-US>  object in the near future will bewith dealing with non standard configurations, such as wireless/mobile/pocketdevices.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>System</span></span><span lang=EN-US> object fixes the need to have to look to external scripting and interrogatingthe browser directly to get attributes of the target machine by either:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Numbered-Level1><i><span lang=EN-US> 1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></i><span lang=EN-US> Doing this itself.</span></p><p class=Numbered-Level1><i><span lang=EN-US> 2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span></i><span lang=EN-US> Holding a set of generic constants within the Flash player itself,which can be used to find out information about the typicalplatformthat the version of the Flash player you are accessing, would be expected to berunning on.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>NB –</span></span><span lang=EN-US>  It is important to note that thetwo bullet points above mean that the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>System.capabilities</span></span><span lang=EN-US>  properties fall into two types ofvalue; those that are <i>specific to the current user, </i>and those that are <i>specificto the current Flash player version and the platform it would run on. </i>Thelatter relates to non-standard systems only, and trying to derive informationvia this type of property for a standard PC/Mac user may give you inaccurateinformation. This is discussed further in the entries.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>System capabilities</span></span><span lang=EN-US> object can be used to gain important information about the user, and if usedproperly, can be used to dynamically alter your content to suit a wideaudience, rather than having to create a separate SWF for each of them. Inparticular:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can identify users with specialneeds by whether or not the machine has accessibility applications installed.</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can detect the users screenresolution and other attributes, and from this infer whether the user's machineis a desktop or mobile device. You can further fine-tune the identification ofmobile devices by looking at their media support facilities. You can still dothis if the users machine does not support JavaScript.</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can send the string value in the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>System.capabilities.serverString</span></span><span lang=EN-US>  property to a server. This allows the server to dynamically decidewhich Flash content to send to the client machine. This is an important featurein the building of Flash based dynamic content with universal devicecompatibility (PC, Mac, wireless device).</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can find out the language used bythe computer. This may also give you some idea about the location of the user.</span></p><p class=Bullet-Level1 style='margin-left:36.0pt;text-indent:-18.0pt;'><span lang=EN-USstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Although you cannot directly find theperformance attributes of the user's machine, if the machine has particularlyhigh screen attributes, you can infer a high performance processor.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>System.security</span></span><span lang=EN-US> object isused for assigning file security. It defines whether other domains are allowedaccess to your content. It has only one method. Refer to the entry for </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>System.allowDomain</span></span><span lang=EN-US> for further details.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Related objects include:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> The </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica'>Screen</span></span><span lang=EN-US> object (which tells you the size of the browser window).</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> The </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica'>Accessibility</span></span><span lang=EN-US>  object (which tells you whether the machine has accessibilityoptions).</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>System.capabilities</span></span><span lang=EN-US> object has a very simple structure. It is an object with only properties. Youcan treat it as an object containing a set of values that are effectivelyconstant per execution, since each time your SWF runs, the system capabilitiesof the machine it will be running on will remain constant.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> You can quickly find out what the values are for thefull set of </span><span class=Code><span lang=EN-US style='font-family:Courier;'>System.capabilities</span></span><span lang=EN-US>  propertieson your machine by running the example </span><span class=Code><spanlang=EN-US style='font-family:Courier;'><ahref="../fla/system.capabilities.fla">system.capabilities.fla</a></span></span>and <span class=Code><span lang=EN-US style='font-family:Courier;'><a href="../swf/system.capabilities.swf">system.capabilities.swf</a></span></span>.<span lang=EN-US></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The output will be something like this (modelsauthor's Windows laptop):</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>LANGUAGEon this machine is a string value equal to: en</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>OS onthis machine is a string value equal to: Windows 98/ME</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>INPUT onthis machine is a string value equal to: point</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>MANUFACTURERon this machine is a string value equal to: Macromedia Windows</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>SERVERSTRINGon this machine is a string value equal to: A=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;DEB=t&amp;V=WIN%206%2C0%2C21%2C0&amp;M=MacromediaWindows&amp;R=1024x768&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;I=point&amp;OS=Windows98/ME&amp;L=en-UK</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>ISDEBUGGERon this machine is a boolean value equal to: true</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>VERSIONon this machine is a string value equal to: WIN 6,0,21,0</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>HASAUDIOon this machine is a boolean value equal to: true</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>HASMP3on this machine is a boolean value equal to: true</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>HASAUDIOENCODERon this machine is a boolean value equal to: true</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>HASVIDEOENCODERon this machine is a boolean value equal to: true</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>SCREENRESOLUTIONXon this machine is a number value equal to: 1024</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>SCREENRESOLUTIONYon this machine is a number value equal to: 768</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>SCREENDPIon this machine is a number value equal to: 72</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>SCREENCOLORon this machine is a string value equal to: color</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>PIXELASPECTRATIOon this machine is a number value equal to: 1</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;font-family:Courier;'>HASACCESSIBILITYon this machine is a boolean value equal to: false</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> It also gives something very similar on a Mac.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This FLA consists of the simple </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>for...in</span></span><span lang=EN-US> loop shown below:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>for (prop in System.capabilities) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>     message =prop.toUpperCase()+&quot; on this machine is a &quot;+typeof</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>    (System.capabilities[prop])+&quot; value equal to: </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>    &quot;+System.capabilities[prop]+&quot;\n\n&quot;;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  output_txt.text += message;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Some of the properties shown by this code areundocumented. They are </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>isDebugger</span></span><span lang=EN-US> and </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Input</span></span><span lang=EN-US>. R</span><span lang=EN-US> efer to the next section for more details.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><h3><span lang=EN-US> Undocumented features</span></h3><p class=MsoBodyText><span lang=EN-US> There are two areas of additional hidden features inthe </span><span class=Code><span lang=EN-US style='font-family:Courier;'>System</span></span><span lang=EN-US>  object:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Additional properties of the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>System.capabilities</span></span><span lang=EN-US>  object.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Additional objects of </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>System</span></span><span lang=EN-US>.</span></p><h4><span lang=EN-US> Undocumented properties of System.capabilities</span></h4><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>input</span></span><span lang=EN-US> : Thisusually sends back the string &quot;point&quot;. It is inferred that thisproperty would be useful only in wireless or other portable devices. It willmost likely become a standard property once wireless devices that are able torun the Flash player, but have a range of non-standard (i.e. non pointer based)input schemes, start to appear. See also </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica'>System.capabilities.hasAudioEncoder</span></span><span lang=EN-US>  and </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>System.capabilities.hasVideoEncoder</span></span><span lang=EN-US>. Between these three properties, it is foreseen that it will bepossible to recognize the multimedia abilities of all non-standard machinesthat can run Flash content.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>isDebugger</span></span><span lang=EN-US> : Thisrefers to the ability of the Flash player to debug. It returns a Boolean thatis </span><span class=Code><span lang=EN-US style='font-family:Courier'>true</span></span><span lang=EN-US>  for the standalone player, and </span><span class=Code><spanlang=EN-US style='font-family:Courier'>false</span></span><span lang=EN-US>  forthe browser.</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>version</span></span><span lang=EN-US> : Thisproperty returns the version number of the Flash player. On the author'sWindows machine, it returns a value of “</span><span class=Code><spanlang=EN-US style='font-family:Courier'>WIN 6,0,21,0</span></span><span lang=EN-US> ”. In general, this property returns the same value as the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>$version</span></span><span lang=EN-US>  variable (it is the variable that is always shown in </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>_root</span></span><span lang=EN-US>  when you look at a running SWFs via the debugger). To read theversion number of a Flash 4 or 5 player, you can actually look at </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>$version</span></span><span lang=EN-US>  directly:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier'>trace($version);<br><br></span></span><span lang=EN-US> This will give the same value as:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier'>trace(System.capabilities.version);</span></span></p><h4><span lang=EN-US> Additional objects of System</span></h4><p class=MsoBodyText><span lang=EN-US> The System object already contains one otherdocumented object other than capabilities (</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>System.security</span></span><span lang=EN-US> ).Changing the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>for...in</span></span><span lang=EN-US>  loop in </span><spanclass=FileName><span lang=EN-US style='font-family:Courier;'><a href="../fla/system.capabilities.fla">system.capabilities.fla</a></span></span><span lang=EN-US> to the one below will show you additional <i>undocumented </i>objects:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>for (prop in System) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   message =prop+&quot;\n\n&quot;;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   output_txt.text+= message;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Theyare discussed below:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>System.showsettings</span></span><span lang=EN-US> : This allows you to bring up the Flash player dialog under thecontrol of ActionScript. It may be useful in some designs to bring this up atthe beginning of a site, rather than the Flash player showing it on demand orthe user deciding to make changes unilaterally (which they can do via </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>right-click&gt; Settings...</span></span><span lang=EN-US>  from a running SWF).<br><br>This object has one method, </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>showsettings</span></span><span lang=EN-US>.<br><br>The method takes a number </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>n</span></span><span lang=EN-US>,which is </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>0</span></span><span lang=EN-US>  to </span><span class=Code><span lang=EN-US style='font-family:Courier'>3</span></span><span lang=EN-US>, and represents the tab (Privacy,Local Storage, Microphone, and Camera) that will be active when the settingsappear:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier;'>System.showsettings(n);<br><br>  </span></span><span lang=EN-US> <img border=0 width=226 height=150src="../png/0586_dict4_04.png"><br><br>It should of course be noted that this object is undocumented, and thereforepotentially open to change between point and version releases of the Flashplayer.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>System.product</span></span><span lang=EN-US> :This is an object that manages downloads from the Macromedia site. You wouldmost likely never need to use it (its functionality suggests it to be a privateobject to be used by Macromedia only), but it is included here forcompleteness, given that it might conceivably be made available to third partydevelopers in association with Macromedia.<br><br>You need to construct a new object before the methods of this object becomeavailable:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier;'>mySysProduct = new System.product('myProductName');<br><br></span></span><span lang=EN-US> The most important method for this object is:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier;'>mySysProduct.Download();<br><br></span></span><span lang=EN-US> This will attempt to download a file identifiedas &quot;</span><span class=Code><span lang=EN-US style='font-family:Courier'>myProductName</span></span><span lang=EN-US> &quot; from the Macromedia site, and will send the full </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>System.serverString</span></span><span lang=EN-US>  property so the target machine can be recognized, and theappropriate file sent. A typical URL created by this method (using the samecomputer used to run the script above) above is shown:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier;'>&quot;http://www.macromedia.com/bin/flashdownload.cgi?product=mydownload&amp;A=t&amp;MP3=t&amp;AE=t&amp;VE=t&amp;ACC=f&amp;DEB=t&amp;V=WIN%206%2C0%2C21%2C0&amp;M=MacromediaWindows&amp;R=1024x768&amp;DP=72&amp;COL=color&amp;AR=1.0&amp;I=point&amp;OS=Windows98/ME&amp;L=en-UK&quot;<br><br></span></span><span lang=EN-US> Although this looks very similar to the processof updating the Macromedia Flash player itself, the following window suggeststhat there may be planned changes in this or future releases:<br><br>  <img border=0 width=228 height=151src="../png/0586_dict4_05.png"><br><br>Because this method loads from </span><span class=MsoHyperlink><spanlang=EN-US style='font-family:Optima;color:blue'>www.macromedia.com</span></span><span lang=EN-US>, its usefulness to the Flash designer is obviously currentlyextremely limited.<br><br>The remaining methods appear to relate to the downloaded file and the processof download itself, and they are:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier;'>mySysProduct.launch();<br>mysysProduct.IsInstalled();<br>mySysProduct.isRunning();</span></span><span lang=EN-US> <br><br></span></p>