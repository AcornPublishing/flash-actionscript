<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12874611"><span lang=EN-US> Button.onKillFocus</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>instanceName.onKillFocus = functionName;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>instanceName</span></span><span lang=EN-US> is theinstance name of a </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Button</span></span><span lang=EN-US>, and </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>functionName</span></span><span lang=EN-US> is afunction containing the code you wish to execute every time the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKillFocus</span></span><span lang=EN-US> buttonevent occurs. You can also capture the target path to the instance that nowholds the input focus by defining a function that includes the argument </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>newFocus</span></span><span lang=EN-US> as shown:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_btn.onKillFocus = function(newFocus) {…};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>event handler</span></span><span lang=EN-US> is </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>compatiblewith Flash 6 or later</span></span><span lang=EN-US>. Previous versions of Flash did not support the use of functionreferences as call-backs, so this form of event handler script was notsupported. For adding button events to buttons in Flash 5 and previousversions, see the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>on</span></span><span lang=EN-US>  action. This event is only everused when building forms.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> Flashbuttons generate <i>events </i>every time amouse interaction occurs with respect to a button. For something to happen whenan event occurs, you must define a script that you want to execute in responseto the event, and this script is called the <i>eventhandler. </i>To understand the operation of </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Button.onKillFocus</span></span><span lang=EN-US>  requires two things: anunderstanding of the <i>event </i>and how toset up the <i>event handler.</i></span></p><h4><span lang=EN-US> The event</span></h4><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKillFocus</span></span><span lang=EN-US> event willbe invoked when the button has lost input focus. This can occur for a number ofreasons such as:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You have cycled through the objects onscreen that can have focus using the </span><span class=Keyboard><spanlang=EN-US style='font-family:"New York"'>TAB</span></span><span lang=EN-US> key. Having given the button input focus (when this happens the button willgain a yellow bounding box, assuming you have not changed the defaults), thenhit the TAB key again to force the button to lose focus.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You have selected a text input field,having previously had the input focus on the button. This causes the button tolose focus.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If thebutton is the only thing on the stage that can get/lose focus, there will neverbe a change in input focus, and this event will never occur.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If thebutton is configured to exclude itself from input focus (i.e. </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Button.tabEnabled</span></span><span class=Code><span lang=EN-USstyle='font-family:Courier;'> = false</span></span><span lang=EN-US> ), this event will never occur.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onSetFocus</span></span><span lang=EN-US> event willalso occur during the process that causes the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>onKillFocus</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> It willoccur when the button first gets focus, assuming it hasn’t had focus all thetime<i>. </i>See also </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Button.onSetFocus</span></span><span lang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> NB – Alsoworth noting is that once the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Button</span></span><span lang=EN-US>  has got input focus, it willrespond to two other events:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If the </span><span class=Keyboard><spanlang=EN-US style='font-family:"New York"'>ENTER</span></span><span lang=EN-US> key is pressed the </span><span class=Code><span lang=EN-US style='font-family:Courier'>Button</span></span><span lang=EN-US>  will see the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>onPress</span></span><span lang=EN-US> event. See also </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>Button.onPress</span></span><span lang=EN-US>.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Immediately after the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>onPress</span></span><i><span lang=EN-US>, </span></i><span lang=EN-US> the button will see the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>onRelease</span></span><span lang=EN-US> event. See also </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>Button.onRelease</span></span><span lang=EN-US>. The </span><span class=Code><span lang=EN-US style='font-family:Courier'>onRelease</span></span><span lang=EN-US> is usually the event you will look atwhilst the button has input focus.</span></p><h4><span lang=EN-US> The event handler</span></h4><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Button.onKillFocus</span></span><span lang=EN-US> eventhandler definition is used to identify the code that will act as the eventhandler when the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>onKillFocus</span></span><span lang=EN-US> event occurs. This code is definedas a function. When a function is used as an event handler, it is known as a <i>call-back</i>, a term inherited fromJavaScript.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If no call-back is defined, the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>onKillFocus</span></span><span lang=EN-US> event will do nothing.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If a call-back is defined, thefunction will run once every time the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>onKillFocus</span></span><span lang=EN-US> event occurs.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If youwant to use the optional argument </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>newFocus</span></span><span lang=EN-US> (which willbe a string containing the target path of the instance that now has focus), youshould use an anonymous call-back. An example of this is shown in the followingexamples.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>function myFunction() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(&quot;I have lost focus&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>}</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKillFocus = myFunction;</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines a function </span><span class=Code><span lang=EN-US  style='font-family:Courier;'>myFunction()</span></span><span lang=EN-US> as the  call-back for this event.</span></p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKillFocus = function() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(&quot;I have lost focus&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>};</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines an anonymous function as the call-back.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKillFocus = function(newFocus) {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    message = &quot;I have lost focus to &quot;+newFocus;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(message)</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>};</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines an anonymous function as the call-back, and this function uses  the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>newFocus</span></span><span lang=EN-US> argument to capture the name of  the object that now has input focus.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKillFocus = undefined;</span></span></p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script un-defines a previously defined call-back. You can also set it to </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>null</span></span><span lang=EN-US>  to  achieve the same effect.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>function myFunction() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(&quot;I have lost focus&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>}</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKillFocus = myFunction;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.tabEnabled = false;</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> The  call-back will never occur because </span><span class=Code><span lang=EN-US  style='font-family:Courier;'>my_btn</span></span><span lang=EN-US> is  excluded from getting input focus via the last line in this script. See also </span><span  class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Button.tabEnabled</span></span><span lang=EN-US>.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> The eventis associated with forms, and this is the only time you would normally ever useit. It allows the user to move through the elements of a form (usually textfields and associated &quot;enter&quot; buttons) via the </span><spanclass=Keyboard><span lang=EN-US style='font-family:"New York";'>TAB</span></span><span lang=EN-US>  key</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> See theexample </span><span class=FileName><span lang=EN-US style='font-family:Courier;'><a href="../fla/button.onkillfocus.fla">button.onkillfocus.fla</a></span></span>and <span class=FileName><span lang=EN-US style='font-family:Courier;'><a href="../swf/button.onkillfocus.swf">button.onkillfocus.swf</a></span></span>.<span lang=EN-US> This shows buttonsused within a simple form.</span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US> You canhave only one call-back defined for each button event. The call-back will betaken as the most recent one defined. This is different to the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>on(mouseEvent)</span></span><span lang=EN-US>  action, where you can define multiple event handlers, and these willrun in the order they were attached to the button.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thecall-back does, however allow you some advantages:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can change the button eventhandler dynamically simply by defining it again, this time with a newcall-back.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can remove an event handlerdynamically simply by equating it to </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>undefined</span></span><span lang=EN-US>.</span></p>