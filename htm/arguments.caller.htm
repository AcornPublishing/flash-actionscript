<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>arguments.caller </h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>arguments.caller(); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where the <span class=Code><span style='font-family:Courier'>caller </span></span>property is a reference to the functionthat called the currently running function.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This property of the <span class=Code><spanstyle='font-family:Courier'>arguments </span></span>object is <spanclass=ImportantWord><span style='font-family:Helvetica'>compatible with Flash 5or later. </span></span>It will only exist within the scope of the currentlyrunning function, and will cease to exist as soon as program execution returnsto the code that called the function.</p><p class=MsoBodyText>&nbsp;</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>caller </span></span>property becomes defined when onefunction calls another. The <span class=Code><span style='font-family:Courier'>caller </span></span>function allows the second and subsequent functions to know the name of thefunction that called them:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=539 height=104src="../png/0586-dict2-07.png"> </p><p class=MsoBodyText><b></b></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If <span class=Code><span style='font-family:Courier'>function1 </span></span>calls <span class=Code><spanstyle='font-family:Courier'>function2, </span></span>and <span class=Code><spanstyle='font-family:Courier'>function2 </span></span>calls <span class=Code><span style='font-family:Courier'>function3, </span></span>then:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span class=Code><span style='font-family:Courier'>function2 </span></span>is the caller of <span class=Code><span style='font-family:Courier'>function3 </span></span></p><p class=Bullet-Level1><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span class=Code><span style='font-family:Courier'>function1 </span></span>is the caller of <span class=Code><span style='font-family:Courier'>function2 </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You may recognize this as the call scope chain, and the <spanclass=Code><span style='font-family:Courier'>caller </span></span>propertyrefers to the previous nested function level in this chain.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Because in Flash MX, functions can be <spanclass=ImportantWord><span style='font-family:Helvetica'>event handlers, </span></span>the ability to know the calling eventcan be very useful in building complex event handling systems for advancedActionScript applications.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:5.4pt; border-collapse:collapse;border:none;'> <tr> <td width=348 valign=top style='width:261.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>function myCaller01() { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    mainfunction(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>function mycaller02() { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    mainfunction(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>function mainfunction() { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    if (arguments.caller == myCaller01) { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>          trace(&quot;I was called by myCaller01()&quot;); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    } else { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>          trace(&quot;I was called by myCaller02()&quot;); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    } </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myCaller01(); </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The function <span class=Code><span style='font-family:  Courier'>myCaller01 </span></span>calls <span class=Code><span style='font-family:Courier'>mainfunction(), </span></span>and the trace text <span class=Code><span  style='font-family:Courier'>“I was called by myCaller01()” </span></span>will appear in the Output window if you run this.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>You can change the last line in this listing to:</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myCaller02(); </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>… to see that <span class=Code><span style='font-family:  Courier'>mainfunction() </span></span>will recognize the change in calling function.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Note that the code refers to the calling functions as <span  class=Code><span style='font-family:Courier'>myCaller01 </span></span>and <span class=Code><span  style='font-family:Courier'>myCaller02 </span></span>rather than <span class=Code><span style='font-family:Courier'>myCaller01() </span></span>and <span class=Code><span  style='font-family:Courier'>myCaller02().</span></span><i> </i>This is to denote that we are referring to the functions as objects rather than calling them.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>function myCaller01() { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    mainfunction(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>function mycaller02() { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    mainfunction(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>function mainfunction() { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    diagnostic = &quot;I was called by &quot;+arguments.caller; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    trace(diagnostic); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myCaller01(); </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>You cannot treat <span class=Code><span  style='font-family:Courier'>arguments.caller </span></span>as a string because it is a <i>reference </i>and not a literal. You cannot print it to screen as this code tries to do. Rather than see the function name <span class=Code><span style='font-family:Courier'>myCaller01 </span></span>or <span class=Code><span  style='font-family:Courier'>myCaller02, </span></span>you will see the message</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>“I was called by [type Function]” </span></span></p>  <p class=MsoBodyText> </p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>caller </span></span>property is very useful if you want towrite centralized but general function routines. See <ahref="../fla/argumentscaller.fla">argumentscaller.fla</a>and <a href="../swf/argumentscaller.swf">argumentscaller.swf</a>.This models the elasticity of two different materials (rubber and steel) bylooking at the name of the calling function that models movement (<spanclass=Code><span style='font-family:Courier'>rubberBall() </span></span>and <spanclass=Code><span style='font-family:Courier'>metalBall() </span></span>).</p><h3>Tips and precautions</h3><p class=MsoBodyText>As used in the example above, notice that you can use the <spanclass=Code><span style='font-family:Courier'>[] </span></span>bracketsto create the <span class=Code><span style='font-family:Courier'>caller </span></span>reference dynamically. Even though thereference is fixed and cannot be a variable, you can still refer to itdynamically! </p>