<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12874593"><span lang=EN-US> Button._parent</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>instanceName._parent;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>instanceName</span></span><span lang=EN-US> is theinstance name of a button. The </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>instanceName._parent</span></span><span lang=EN-US> combinationforms a relative path to the parent object of </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>instanceName</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thisproperty is </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>compatible with Flash 6 or later</span></span><span lang=EN-US>. Previous versions of Flash do nottreat buttons as objects, and buttons do not therefore have this property. Thisproperty is </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>read only</span></span><span lang=EN-US>. Because a button event script usually scopesthe button’s parent timeline if you use Flash MX style event scripts, and <i>always </i>scopes the button’s parenttimeline in Flash 5, you will rarely have to refer to this property.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  of a button instance returns thename of the timeline the button is embedded on (NB – although you <i>can</i> embed buttons into other buttons,the practice has no merits and you should not do this). The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  timeline is usually a movie Clip(in which case the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  will be an instance name corresponding to thisMovie Clip) or the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>_root</span></span><span lang=EN-US>  timeline of the current level (inwhich case </span><span class=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  will be </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>_leveln</span></span><span lang=EN-US> where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>n</span></span><span lang=EN-US> is thelevel number). You can refer to the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>_parent</span></span><span lang=EN-US>  property more than once to see the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_parent._parent</span></span><span lang=EN-US>, and so on:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_btn._parent</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> refers tothe timeline the button </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>my_btn</span></span><span lang=EN-US> is on.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_btn._parent.parent</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> refers tothe parent of the timeline the button is on</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:5.4pt; border-collapse:collapse;border:none;'> <tr>  <td width=276 valign=top style='width:207.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=264 valign=top style='width:198.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onRelease = function() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    _x++;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>};</span></span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onRelease = function() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    this._x++;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>};</span></span></p>  </td>  <td width=264 valign=top style='width:198.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> The  first script accesses the </span><span class=Code><span lang=EN-US  style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  timelines </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_x</span></span><span lang=EN-US>   property, and will move it one pixel to the right every time you press the  button </span><span class=Code><span lang=EN-US style='font-family:Courier;'>my_btn</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> The second script is actually  identical because of the implied scope of the event script, it doesn’t need  to refer to the </span><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn._parent</span></span><span lang=EN-US>  path (because the event script is  already scoping it). This is the normal situation, and there are therefore  few reasons you ever need to use </span><span class=Code><span lang=EN-US  style='font-family:Courier;'>Button._parent</span></span><span lang=EN-US>.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> Becausethe </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Button._parent</span></span><span lang=EN-US>  path refers to the same scope that buttonevent scripts scope by default, there is actually no reason you need to use it.This is shown by the example above, where </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>my_btn._parent._x</span></span><span lang=EN-US>  points to the same place as themuch simpler path </span><span class=Code><span lang=EN-US style='font-family:Courier;'>_x</span></span><span class=Code><spanlang=EN-US style='font-size:8.0pt;'>.</span></span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>NB – The following pointis for Advanced Flash coders. Beginners and intermediate coders will notnormally have to consider it</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Animportant point to realize for advanced Flash MX coders (who have also usedFlash 5) is that when you use the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>_parent</span></span><span lang=EN-US>  path in a Flash MX style buttonscript, the timeline that will be returned as &quot;the parent&quot; will notnecessarily be the parent of the button.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> In Flash5, <i>all </i>actions within a button eventscript have an implied </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>_parent</span></span><span lang=EN-US>  path in front of them, and this iscaused by scope. Consider the Flash 5 style button script below:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>on (release) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  gotoAndStop(15);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thescript does not scope the button timeline (the button doesn’t have a timeline),but instead scopes the timeline the button is on, and this timeline is the sametimeline as the Flash MX button’s </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>_parent</span></span><span lang=EN-US>  property. This always happened inFlash 5, because the button script was always defined in the same placerelative to the button.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> In FlashMX, the situation is slightly more complicated if you chose to use the MX styleof writing button event handlers, because the button script is not alwaysdefined in the same place relative to the button.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Considerthe following script:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_btn.onRelease = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  gotoAndStop(15);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thisscript can only be defined on the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>_parent</span></span><span lang=EN-US>  timeline if it is to work (becauseit refers to the instance </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>my_btn</span></span><span lang=EN-US> ), and so the script must be on the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  timeline, as occurs in Flash 5. Sothe scope is the same as the equivalent Flash 5 script seen earlier.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This istrue for almost all buttons, <i>except </i>whenyou define the button event script from a place other than the button </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>, as occurs in the followingexample:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_mc.my_btn.onRelease = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  gotoAndStop(15);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thistime, the button is on the timeline of the movie clip </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>my_mc</span></span><i><span lang=EN-US>, </span></i><span lang=EN-US> but theevent script is on the timeline </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>my_btn._parent._parent</span></span><span lang=EN-US>  and not </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>my_btn._parent</span></span><span lang=EN-US>. This means that if you use the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>  path within this button script, </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>you will be referring to a different timeline than my_btn._parent</span></span><span lang=EN-US>. This is a subtle situation that <i>never </i>occurs in Flash 5, but can easilyoccur in advanced ActionScript based Flash MX sites.</span></p>