<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12874584"><span lang=EN-US> Boolean(as a Constructor and Initializer)</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>a = new Boolean();</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>or</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>b = new Boolean(c);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>a</span></span><span lang=EN-US> and </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>b</span></span><span lang=EN-US>  are new Boolean objects. </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>c</span></span><span lang=EN-US> is anargument that may be used to set the new Booleans initial value. It shouldequate to either </span><span class=Code><span lang=EN-US style='font-family:Courier;'>true</span></span><span lang=EN-US>  or </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>false</span></span><span lang=EN-US>. Note that the rules used to derivethe value of </span><span class=Code><span lang=EN-US style='font-family:Courier;'>c</span></span><span lang=EN-US> if it is an expressionmay produce unexpected results (if </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>c =&quot;true&quot;</span></span><span lang=EN-US>,</span><span class=Code><span lang=EN-US style='font-family:Courier;'>b</span></span><span lang=EN-US>  is </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>false</span></span><span lang=EN-US>  for example), so you are bestadvised to keep the argument to either </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>true</span></span><span lang=EN-US> or </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>false</span></span><span lang=EN-US> if you useit.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thisconstructor is </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>compatible with Flash 5or later. There are generally no advantages in creating Boolean objects overcreating Boolean variables, and you are very unlikely to ever need to use thisconstructor.</span></span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> TheBoolean </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>constructor</span></span><span lang=EN-US>  is used to construct (and optionally set theinitial value of) a new </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Boolean</span></span><span lang=EN-US>  object. There is, however noadvantage of doing this over simply using Boolean variables, not least becauseall the methods of the Boolean object can be applied to a Boolean variable:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Forexample, to define a </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Boolean</span></span><span lang=EN-US>  object called </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>myBool</span></span><span lang=EN-US>  and set it to </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>true</span></span><span lang=EN-US>, you would use the following code:</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = new Boolean(true);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;'>&nbsp;</span></span></p><p class=MsoBodyText><span lang=EN-US> To createwhat is to all intents and purposes the same thing, you could simply treat </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>myBool</span></span><span lang=EN-US>  as a variable thus:</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = true;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=324 valign=top style='width:243.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=216 valign=top style='width:162.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>x = new Boolean(true);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>y = new Boolean();</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>trace(x);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>trace(y);</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=216 valign=top style='width:162.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>x = true</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>y = false</span></span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> NB – There is no point using </span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>new Boolean(false); </span></span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> because  </span><span class=Code><span lang=EN-US style='font-family:Courier;'>false</span></span><span lang=EN-US>  is the default value.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>a = new Boolean(&quot;true&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>trace(a);</span></span></p>  </td>  <td width=216 valign=top style='width:162.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>a = false</span></span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> See the  dictionary entry for </span><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Boolean (as a function)</span></span><span lang=EN-US>  for an explanation of this.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> There areno advantages in treating the Boolean as an object over simply treating it as avariable (since Flash will convert all Boolean variables to Boolean objects asrequired anyway, and you don’t have to worry about it). There are therefore nopractical uses. Sorry!</span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US> Setting aBoolean initial value via the Boolean constructor way may result in the valueof </span><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool</span></span><span lang=EN-US>  not showing up in the debugger window. Use </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>trace()</span></span><span lang=EN-US>, which will show the valuecorrectly. The code:</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-size:8.0pt;'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = newBoolean(true);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Willproduce the following output in the debugger:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=180 height=165src="../png/0586-dict3-01.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This doesnot show the value of </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>myBool</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> However,if you simply add a trace action to find the value that way, you will see theexpected result:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = new Boolean(true);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>trace(myBool);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=180 height=98src="../png/0586-dict3-02.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> You willnot see this problem if you simply treat all Booleans as variables, and defineyour Boolean like this:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = true;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Which isanother good reason for using Boolean variables all the time!</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thereason this &quot;feature&quot; occurs is probably down to the fact that aBoolean object’s internal value is inaccessible directly, whereas it isaccessible for a Boolean variable. This difference is somewhat blurred by thefact as soon as you set your Boolean object explicitly with a value, it seemsto revert to behaving like a Boolean variable (probably because that is what ithas now become), and is now accessible! The following code will show the valueof </span><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool</span></span><span lang=EN-US> in the debugger:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = new Boolean(true);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myBool = 3&lt;4;</span></span></p>