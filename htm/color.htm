<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-US> Color</span></h1><p class=MsoBodyText><span lang=EN-US> This object is more fully addressed in <i>Chapter 6</i>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Color</span></span><span lang=EN-US> object is used to change the color of a graphic object. You can use the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US> object with the following:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 width=550 style='width:412.2pt; margin-left:14.2pt;border-collapse:collapse;border:none;'> <tr>  <td width=275 valign=top style='width:206.1pt;border:solid windowtext .5pt;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US style='font-size:10.0pt;'>&nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Object</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=275 valign=top style='width:206.1pt;border:solid windowtext .5pt;  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US style='font-size:10.0pt;'>&nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Compatibility</span></span></p>  </td> </tr> <tr>  <td width=275 valign=top style='width:206.1pt;border:solid windowtext .5pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>movieClip</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=275 valign=top style='width:206.1pt;border-top:none;border-left:  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> Flash 5</span></p>  <p class=MsoBodyText><span lang=EN-US> Flash 6</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=275 valign=top style='width:206.1pt;border:solid windowtext .5pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Button</span></span></p>  </td>  <td width=275 valign=top style='width:206.1pt;border-top:none;border-left:  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> Flash 6  </span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=275 valign=top style='width:206.1pt;border:solid windowtext .5pt;  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>textField</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=275 valign=top style='width:206.1pt;border-top:none;border-left:  none;border-bottom:solid windowtext .5pt;border-right:solid windowtext .5pt;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> Flash 6</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If you wish to use the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US> object with buttons or text fields in Flash 5, an easy workaround is to placethe button/text inside a movie clip and then target the movie clip in your </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US> object. The programming term for this is called &quot;<i>creating a wrapper</i></span><span lang=EN-US> &quot;;</span><span lang=EN-US> youcontrol something that would be otherwise inaccessible to your code by wrappingit in something that is accessible, making the thing you want to control appearas if it were the wrapper object itself.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>NB –</span></span><span lang=EN-US>  A major new use of the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US>  object in Flash 6 is that if youembed a video object inside a movie clip, you can apply color effects to thevideo clip (effectively using the movie clip as a wrapper again). This featurecan be used to great effect when you control the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US>  object with the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Color.setTransform</span></span><span lang=EN-US>  method to create color fades andtints. More usefully, the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>setTransform</span></span><span lang=EN-US>  method also supports alphavariations, and this allows you to use it for true fades and cross fades. Thisfeature is not discussed further, because the theory to use the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US>  object with video is the same asthe theory you would use to apply it to a still or animating standard movieclip.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The following background information is presented as auseful starting point in understanding the color object:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> RGB color and Hexadecimalrepresentation. This relates to the numbers that are used in the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>Color</span></span><span lang=EN-US>  object. Because of the way digital systems relate color valuesdirectly to memory, colors are held in values that are in multiples of powersof 2. This type of number is best represented in <i>hexadecimal, </i>and wewill briefly explore this.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Practical digital color theory. We usethe term <i>practical </i>color theory here, because we have omitted all theobsolete (web safe colors) and useless (color models and RGB as an additivemodel) information that does not relate directly to the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>Color</span></span><span lang=EN-US>  object and how you would actually use it within Flash.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><h3><span lang=EN-US> RGB color and hexadecimalrepresentation</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Color</span></span><span lang=EN-US> object expresses and controls color using the RGB model. This consists of threecolor components, red, green, and blue. Each component is represented by anumber 0–255, which defines the red, green, or blue color intensity (0 = nocolor, 255 = full color). When represented in hexadecimal, any color within the24-bit color space that Flash uses can be described via a value of the form:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>0xRRGGBB</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>0x</span></span><span lang=EN-US>  tells Flash the following number ishexadecimal.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>RR</span></span><span lang=EN-US>  is the red color component inhexadecimal 00 to FF (which is equal to 0–255 decimal)</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>GG</span></span><span lang=EN-US>  is the green color component inhexadecimal.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>BB</span></span><span lang=EN-US>  is the blue color component inhexadecimal.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>NB –</span></span><span lang=EN-US> A base 10 number is referred to as a denary number in math terminology. Thisterm is not widely recognized outside this field, so this discussion uses theterm &quot;decimal&quot; to represent a normal base 10 number. This is strictlyincorrect, but widely recognized as meaning &quot;a normal base 10 number&quot;in the design community, and who are we to argue!</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> See also entries for </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>| (bitwise OR)</span></span><span lang=EN-US> and </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>&lt;&lt; (bitwise left shift)</span></span><span lang=EN-US> for furtherdetails on the relationship between decimal, hexadecimal, and the underlyingbinary digital representation. In most cases though, you don't need to worryabout this, as long as you have a feel for hexadecimal numbers between 00 andFF.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> One thing worth remembering is that designers andprogrammers specify hexadecimal in different ways. Programmers tend to use the&quot;</span><span class=Code><span lang=EN-US style='font-family:Courier;'>0x</span></span><span lang=EN-US> &quot; prefix because that is theirstandard (it is used in a number of different languages, from basic scriptinglanguages such as JavaScript all the way up to the military grade languageADA). Traditional web designers use the &quot;</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>#</span></span><span lang=EN-US> &quot;(hash) symbol because that is how hexadecimal is represented in HTML. To meetboth of these conventions, Flash uses the programming representation, </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>0x</span></span><span lang=EN-US>,</span><span lang=EN-US>  in theprogrammers environment (i.e. wherever ActionScript is used) and the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>#</span></span><span lang=EN-US> symbol in the asset creation environment (and in particular, the color mixerpanel and the color picker. Both these representations are the <i>same </i>HEXvalue, although you should note that ActionScript will not recognize a HEXnumber expressed with a </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>#</span></span><span lang=EN-US> :</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>trace(#FFFFFF);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>trace(0xFFFFFF);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The first line will not be accepted (it actuallyraises a syntax error), whereas the second line will give the correct answer (</span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>0xFFFFFF</span></span><span lang=EN-US> is equal to </span><span class=Code><span lang=EN-US style='font-family:Courier;'>16777215</span></span><span lang=EN-US>  decimal).</span></p><h3><span lang=EN-US> Using the Color object</span></h3><p class=MsoBodyText><span lang=EN-US> There are various methods that allow you to change thecolor of an object in a number of ways:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can change the absolute color ofan object. See </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>Color.setRGB</span></span><span lang=EN-US>.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can tint the color of an object.See </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica'>Color.setTransform</span></span><span lang=EN-US>.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can add a color to the currentcolor of an object. See </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>Color.setTransform</span></span><span lang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText>You can read the current color and color transform valuesof an object, see <span class=ImportantWord><span style='font-family:Helvetica'>Color.getRGB</span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>Color.getTransform</span></span>.</p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> To use the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Color</span></span><span lang=EN-US> object effectively, you should realize the differences between <i>coloring,mixing</i></span><span lang=EN-US>, </span><i><span lang=EN-US> filtering</span></i><span lang=EN-US>,</span><span lang=EN-US> and<i>tinting. </i>The movie clip we have used is included in </span><spanclass=FileName><a href="../fla/color.fla">color.fla</a></span></span> and <ahref="../swf/color.swf">color.swf</a> ,<span lang=EN-US> ifyou want to follow the examples.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>NB –</span></span><span lang=EN-US> The </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US>  object allows you to alter alpha as wellas color. We have ignored alpha to concentrate on the underlying color valuesand what they actually represent in real terms.</span></p><h4><span lang=EN-US> Coloring</span></h4><p class=MsoBodyText><span lang=EN-US> When a child uses crayons to color a line drawing, thechild is said to be <i>coloring </i>the picture. The same thing applies inFlash when we change the color of a movie clip to a new color. The effects ofcoloring can be seen in non-programming terms if you open the color mixer. Thebottom left mixer shows a color made up of the RGB value </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>F9340B</span></span><span lang=EN-US> or </span><span class=Code><span lang=EN-US style='font-family:Courier;'>R=249</span></span><span lang=EN-US>, </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>G = 53</span></span><span lang=EN-US>,</span><span class=Code><span lang=EN-US style='font-family:Courier;'>B = 11</span></span><span lang=EN-US>. By changing the RGB value, you canchange this color (a red) to something else, as shown in the right image, wherethe RGB value has been changed to make a green. </span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img border=0 width=241 height=282src="../png/0586_dict4_09.png">    <img border=0 width=241 height=282src="../png/0586_dict4_10.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If you apply this technique to a movie clip, youeffectively overwrite the color information with a single new color. The effectis as if you took a tin of paint and colored the whole object, leaving it as asingle solid color.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Consider the movie clip below left. This has a largenumber of colors. If we color it red by changing its color object's RGB valueto red (</span><span class=Code><span lang=EN-US style='font-family:Courier;'>0xFF0000</span></span><span lang=EN-US> ) we end upwith the image to the right. In programming terms, this is an <i>absolute </i>colorchange. When Flash changes the movie clip to red, it ignores the colorinformation that the movie clip has before the color change, and one aspect ofthis will be that <i>all the original color information is lost.</i></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img border=0 width=245 height=187src="../png/0586_dict4_11.png">    <img border=0 width=250 height=191src="../png/0586_dict4_12.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> As can be seen, this effect is rather unsubtle to saythe least! This is what the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Color.setRGB</span></span><span lang=EN-US> method will do. Assuming the movie clip is called </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>my_mc</span></span><span lang=EN-US>,</span><span lang=EN-US> thecode to make this change is:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color = new Color(my_mc);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color.setRGB(0xFF0000);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> See also the entry for </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Color.setRGB</span></span><span lang=EN-US> and </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>Color.getRGB</span></span><span lang=EN-US>.</span></p><h4><span lang=EN-US> Mixing</span></h4><p class=MsoBodyText><span lang=EN-US> If our same child puts away the crayons and brings outpaints, the use of color can become more complex. Assume that the child has aset of paints that are not absorbed by the paper, and that they take a longtime to dry. The child can thus:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Paint an area in red.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Add some green paint over the top tocreate yellow.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This process is called color mixing. Obviously, in thereal world, we would do our mixing in a saucer or palette before we put paintonto the paper, but in the digital world our colors are modeled as paints thatare never absorbed and never dry, so like our child, we don't have to botherwith reality; all our colors will mix perfectly on the paper.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> We can perform mixing in non-programming terms by:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Selecting our movie clip.</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> In the properties inspector, select the </span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima;'>Color</span></span><span lang=EN-US> drop-downmenu and change it to </span><span class=ScreenText><span lang=EN-USstyle='font-family:Optima;'>Advanced</span></span><span lang=EN-US>.<br><br><img border=0 width=204 height=137src="../png/0586_dict4_13.png"> <br></span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Thiswill bring up a </span><span class=ScreenText><span lang=EN-USstyle='font-family:Optima;'>Settings...</span></span><span lang=EN-US>  button next to the </span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima;'>Color</span></span><span lang=EN-US> dropdown. Click it to open the </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>AdvancedEffect</span></span><span lang=EN-US>  window.To mix a new color into the existing colors, enter the value of the color youwant to mix in the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>right hand</span></span><span lang=EN-US>  set of numbers for red, blue and green.For example, the following images show the process of mixing in yellow onto ourmovie clip. The image to the left is the original, and the image to the rightis what we will see after mixing in a dark yellow (</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>R=100</span></span><span lang=EN-US>, </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>G=100</span></span><span lang=EN-US>, </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>B = 0</span></span><span lang=EN-US> ).<br><br><img border=0 width=264 height=203src="../png/0586_dict4_11.png">    <img border=0 width=492 height=205src="../png/0586_dict4_15.png"><br><span lang=EN-US> <br>Note that we can also mix <i>negative </i>colors, so we can for example mix–yellow by entering </span><span class=Code><span lang=EN-US style='font-family:Courier;'>R = -100</span></span><span lang=EN-US>, </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>G= -100</span></span><span lang=EN-US>, </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>B= 0</span></span><span lang=EN-US>.Why would you want to do this? Well, it actually has a very big advantage.Adding positive colors can tend to leave a cast over the dark areas, and thisis very noticeable in our image (which is dark). Adding &quot;–Blue&quot;rather than &quot;+yellow&quot; removes this cast (but still results in&quot;+yellow&quot;) because removing a color from black still leaves you withblack:<br><br><img border=0 width=504 height=211src="../png/0586_dict4_14.png"><br></span><b><br></span></b><span lang=EN-US> As a general rule, if the clip is predominantly darkand you want to color the lighter parts, use negative colors to avoid a colorcast on the dark areas. The inverse is also true. If the clip is predominantlylight or neutral, add positive colors whilst mixing.<br><br></span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>NB –</span></span><span lang=EN-US>  Advanced users may wish to remember this via the real reason castingoccurs in the first place; a negative color is subtracted during mixing, andtherefore affects lighter colors the most, whereas a positive color affects lowvalue colors (i.e. the dark ones) the most because it is an <i>added</i> value;even adding small increments to a value near zero can create a very large %change. </span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> In programming terms, mixing a color is the same asadding an absolute color to the per pixel color already on the movie clip. Thisis different from coloring because although it still adds an absolute valueacross the object,<i> it takes into account what is already there, so you losefar less (if any) information.</i></span></p><p class=MsoBodyText><i><span lang=EN-US> &nbsp;</span></i></p><p class=MsoBodyText><span lang=EN-US> The following code will mix the color </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>R=0</span></span><span lang=EN-US>,</span><span class=Code><span lang=EN-US style='font-family:Courier;'>G=0</span></span><span lang=EN-US>, </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>B=-200</span></span><span lang=EN-US> into the existing colors in movie clip </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>myColor</span></span><i><span lang=EN-US>.</span></i><span lang=EN-US> See also </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>Color.setTransform</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color = new Color(my_mc);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myColorTrans = {ra:100, rb:0, ga:100, gb:0, ba:100,bb:-200, aa:100, ab:0};</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color.setTransform(myColorTrans);</span></span></p><h4><span lang=EN-US> Filtering</span></h4><p class=MsoBodyText><span lang=EN-US> Supposing our child now shows daddy the painting andgets a sweet for creating such a great likeness. Once the sweet is eaten, onething you can do is throw the semi transparent wrapper away, but children thatwill one day become designers do anything <i>but</i>. They will use the wrapperto do stuff, and one thing they can do is use the wrapper as a <i>filter. </i>Bylooking through it you see the world as if it were color filtered. Rather thanadding color, the sweet wrapper only allows certain colors through. A red wrappermakes the world look reddish because it filters out green and blue.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Lets see how we would create the &quot;world seenthrough a red sweet wrapper&quot; effect in Flash. Cancel any effects you haveon the movie clip (you can do this by selecting </span><span class=ScreenText><spanlang=EN-US style='font-family:Optima;'>none</span></span><span lang=EN-US> from the </span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima;'>Color</span></span><span lang=EN-US> dropdown).A red filter effect would act on the green and blue components, and would tendto reduce their prominence. To model this, we use the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Red</span></span><span lang=EN-US>, </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Green</span></span><span lang=EN-US>, </span><span lang=EN-US> and</span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Blue</span></span><span lang=EN-US> percentagevalues to the left of the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>Advanced Effect</span></span><span lang=EN-US> window. Weneed to reduce their values from 100% down to a lower value, effectivelyblocking (filtering) a proportion of their color value. If you reduce the Greenand Blue down to 30%, you will find the movie clip takes on a pinky reddishglow that our red sweet wrapper might cause.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img border=0 width=533 height=221src="../png/0586_dict4_15a.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> You should note that filtering is different frommixing, because it works by taking color <i>away </i>from the original.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The method that would create this effect is the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>setTransform</span></span><span lang=EN-US> method again</span><span lang=EN-US>. </span><span lang=EN-US> The following code will give us our red sweet wrappereffect:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color = new Color(my_mc);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myColorTrans = {ra:100, rb:0, ga:30, gb:0, ba:30,bb:0, aa:100, ab:0};</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color.setTransform(myColorTrans);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Although the effects of mixing and filtering are bothincluded together in the </span><span class=ScreenText><span lang=EN-USstyle='font-family:Optima;'>Advanced Effect</span></span><span lang=EN-US> window,using them together can cause confusion, because you don't know what control iscausing which effect! In practice, it is better to either use one or the other,<i>or </i>work out how much of each you want separately before creating thefinal effect by combining the two.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> There is, however, one final effect that relies onmixing <i>and </i>filtering used together. This is the most complex colortransformation, and setting it up is non-trivial unless you have a game plan; <i>tinting.</i></span></p><h4><span lang=EN-US> Tinting</span></h4><p class=MsoBodyText><span lang=EN-US> A related color transformation to filtering is <i>tinting.</i>This works in an inverse way to filtering. It <i>adds </i>color rather thantake it away. To filter, you would look through the red sweet wrapper. To tintthe world the same red color as the sweet wrapper, you would place the wrapper overa light and shine it at something. You can perform tinting by applying a filter<i>and </i>a mix at the same time. The mix models the lighting (additive)effect of the red light, and the filter models the way this red light changesthe natural colors in the scene you are illuminating (subtractive effect).</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>The game plan</span></span><span lang=EN-US> : t</span><span lang=EN-US> o tint ourmovie clip by 30% yellow we do the following:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Select </span><span class=ScreenText><span lang=EN-USstyle='font-family:Optima;'>Tint</span></span><span lang=EN-US> via thecolor dropdown. Set the RGB values to </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>R:255</span></span><span lang=EN-US>,</span><span class=Code><span lang=EN-US style='font-family:Courier;'>G:255</span></span><span lang=EN-US>, </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>B:0</span></span><span lang=EN-US>,and the </span><span class=ScreenText><span lang=EN-US style='font-family:Optima;'>%</span></span><span lang=EN-US>  slider to </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>30</span></span><span lang=EN-US>.You will see the movie clip develop a light yellow hue, as if a yellowish lightwas illuminating it.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img border=0 width=301 height=316src="../png/0586_dict4_16.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The problem now is that we have no direct way ofmodeling tinting in ActionScript; we have to turn this into the correspondingmix and filter effects. This is actually very easy; simply select </span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima;'>Advanced</span></span><span lang=EN-US> onthe color dropdown and then bring up the </span><span class=ScreenText><spanlang=EN-US style='font-family:Optima;'>Advanced Settings</span></span><span lang=EN-US> once more:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img border=0 width=257 height=219src="../png/0586_dict4_17.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This gives you the mix and filter effects you need tocreate the yellow tint. The code to create this same effect would be:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color = newColor(my_mc);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myColorTrans ={ra:70, rb:77, ga:70, gb:77, ba:70, bb:0, aa:100, ab:0};</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>my_color.setTransform(myColorTrans);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The tint effect is useful when you want to add a hintof another known color. It can produce very subtle color effects.</span></p><h4><span lang=EN-US> Finally...</span></h4><p class=MsoBodyText><span lang=EN-US> It should be stressed that the best way of finding outthe effects of the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US>  object isto try them out manually first. This should now be easier to do, now that youknow which parts of the Flash environment performs the same color effects asthe corresponding </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Color</span></span><span lang=EN-US>  objecttransitions.</span></p>