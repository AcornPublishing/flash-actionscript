<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12169684"><span lang=EN-US> % </span></a><span lang=EN-US> Modulo</span></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>a = b % c;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>b</span></span><span lang=EN-US>  and </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>c</span></span><span lang=EN-US>  are variables, properties, orexpressions that resolve to numbers. </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>a</span></span><span lang=EN-US>  is the remainder of the division </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>b/c</span></span><span lang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Compatiblewith </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Flash 4 or later</span></span><span lang=EN-US>, although Flash 4 uses an approximate method.This action allows you to tell if one number is divisible exactly by another.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> Themodulo division arithmetic </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>operator</span></span><span lang=EN-US> calculatesa number corresponding to the &quot;remainder&quot; of a hand calculated longdivision sum. For example, recall the junior math sum below:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=185 height=50src="../png/0586_dict1_02.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> 5 into292 is calculated as follows;</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 2doesn’t go, so try 5 into 29</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 29is 5 carry 4. Write the 5 and carry the 4.</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 42is 8 carry 2. Write the 8 and carry the 2.</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 20is 4. Write the 4. Because there is no carry, the division is complete, and theanswer is 58.4.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thatdivision assumes knowledge of decimals, but most kids are taught divisionbefore decimal notation, and the division then becomes;</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 2doesn’t go, so try 5 into 29</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 29is 5 with carry 4. Write the 5 and carry the 4.</span></p><p class=MsoBodyText><span lang=EN-US> 5 into 42is 8 with carry 2. Because we don’t know about decimals, we can’t carry the 2anywhere, so we express is as a <i>remainder,</i>and at my school, we expressed this as 58 r2.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The&quot;r2&quot; or <i>remainder 2 </i>is thevalue modulo returns; 292 % 5 is 2.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=204 valign=top style='width:153.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Results</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=204 valign=top style='width:153.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>x = 292%5;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>y =  &quot;292&quot;%5;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>z =  292.11%5.2;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>a = 292;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>b = 5;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>c = a%b;</span></span></p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>x = 2</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>y = 2</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>z =  0.910000000000004</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>c = 2</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> Modulo will turn all arguments to numbers before  performing the modulo division.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> Although modulo division is normally carried out  between integers, using floating-point arguments is acceptable. The value  returned, however, is less useful. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=204 valign=top style='width:153.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>// a is  undefined</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>x = a%5;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>y = 292%a; </span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>z = 292%0</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> x = 0</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> y = NaN</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> z = NaN</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.7pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> An undefined argument is treated as zero.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> The usesof the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>%</span></span><span lang=EN-US>  operator are described as follows.</span></p><h4><span lang=EN-US> Motion Graphics</span></h4><p class=MsoBodyText><span lang=EN-US> Thisoperator allows you to limit (or &quot;clamp&quot;) an increasing positivevalue so that it never exceeds a maximum value. The following code:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>ball.onEnterFrame = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   this._x =(this._x+1)%400;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> willprevent instance </span><span class=Code><span lang=EN-US style='font-family:Courier;'>ball</span></span><span lang=EN-US> from going off the screen. As soonas </span><span class=Code><span lang=EN-US style='font-family:Courier;'>ball._x</span></span><span lang=EN-US>  exceeds </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>400</span></span><span lang=EN-US>, it will go back to 1, or moregenerally:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>a = a%b;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> will limit </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>a</span></span><span lang=EN-US>  between 0 and </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>b</span></span><span lang=EN-US>  if </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>a</span></span><span lang=EN-US>  is positive and rising.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Note thatthe above event script is a much more efficient way of writing the following:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>ball.onEnterFrame = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   this._x++</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   if(this._x&gt;400){</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      this._x =this._x-400</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   }</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Anexample using this event script is included  as </span><spanclass=FileName><span lang=EN-US style='font-family:Courier;'><a href="../fla/(modulo).fla">(modulo).fla</a></span></span><span lang=EN-US>  and </span><span class=FileName><spanlang=EN-US style='font-family:Courier;'><ahref="../swf/(modulo).swf">(modulo).swf</a></span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Modulo is also a very quick way ofimplementing a snap function. The following code will cause the position of instanceball to jump to the nearest 10 pixel snap position:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>ballXPos = 0;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>pixelSnap = 10;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>ball.onEnterFrame = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   ballXPos++;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   ball._x =ballXPos-ballXPos%pixelSnap;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The useof modulo along with the drawing API would allow the creation of a Flash baseddraw program with an auto-snap feature.</span></p><h4><span lang=EN-US> Programming</span></h4><p class=MsoBodyText><span lang=EN-US> Themodulo operator is useful when calculating values that can be integers only.For example, the following code would solve this problem:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><i><span lang=EN-US> If I have boxes that can hold 6 bottles each,how many boxes do I need to pack 20 bottles?</span></i></p><p class=MsoBodyText><i><span lang=EN-US> &nbsp;</span></i></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>bottles = 20;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>bottlesPerBox = 6;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>boxes =Math.round(bottles/bottlesPerBox)+(bottles%bottlesPerBox != 0);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>Math.round(bottles/bottlesPerBox) </span></span><spanclass=Code><span lang=EN-US> gives us the number of full boxes. If there is aremainder, then </span></span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>(bottles%bottlesPerBox !=0) </span></span><span class=Code><span lang=EN-US> will be 1 (true), or0 (false) if there is no remainder. Adding this second term tells us whether weneed an additional part filled box.</span></span></p>