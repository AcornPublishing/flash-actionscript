<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc13656397">Function.apply</a></h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a.apply(b,c)</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>a</span></span> isthe name of the function, <span class=Code><span style='font-family:Courier'>b</span></span>is the object <span class=Code><span style='font-family:Courier'>a</span></span> is being applied to, and <spanclass=Code><span style='font-family:Courier'>c</span></span> is an array ofelements being passed to <span class=Code><span style='font-family:Courier'>a</span></span>as parameters.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash MX</span></span>. This method is used when you want to attach afunction to an object. Also refer to the related entry on <spanclass=ImportantWord><span style='font-family:Helvetica'>Function.call</span></span><b>.</b></p><h3>Description</h3><p class=MsoBodyText>This <span class=ImportantWord><span style='font-family:Helvetica'>method</span></span> allows ActionScript to call a function. Itreturns the value specified by the function.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=240 valign=top style='width:180.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=156 valign=top style='width:117.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Returned values</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=175 valign=top style='width:131.4pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=240 valign=top style='width:180.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>function moveTo(x) {</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>    this._x = x;</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>}</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span class=Code><span  style='font-family:Courier'>moveTo.apply(_root.myMC, [35]);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=156 valign=top style='width:117.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>nothing</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=175 valign=top style='width:131.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'>This will attach the <span  class=Code><span style='font-family:Courier'>moveTo </span></span>function to  the <span class=Code><span style='font-family:Courier'>_root.myMC</span></span>  movie clip</p>  </td> </tr> <tr>  <td width=240 valign=top style='width:180.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>function moveTo(x,y) {</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>    this._x = x;</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>    this._y = y;</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span style='font-family:"Courier New";'>}</span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:3.8pt'><span class=Code><span  style='font-family:Courier'>moveTo.apply(_root.myMC, [35,20]);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=156 valign=top style='width:117.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>nothing</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=175 valign=top style='width:131.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'>This will attach the <span  class=Code><span style='font-family:Courier'>moveTo</span></span> function to  the <span class=Code><span style='font-family:Courier'>_root.myMC</span></span>  movie clip and passes a new <span class=Code><span style='font-family:Courier'>_x</span></span>  and <span class=Code><span style='font-family:Courier'>_y</span></span>  position.</p>  </td> </tr> <tr>  <td width=240 valign=top style='width:180.2pt;border:none;border-bottom:solid windowtext .5pt;background:#CCCCCC;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>myFunction.apply(_root.myMC, 35,20,12,12);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=156 valign=top style='width:117.0pt;border:none;border-bottom:solid windowtext .5pt;background:#CCCCCC;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>nothing</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=175 valign=top style='width:131.4pt;border:none;border-bottom:solid windowtext .5pt;background:#CCCCCC;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'>This won't work because the  parameters are not being passed as an array.</p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses </h3><p class=MsoBodyText>Parameters in this method are written as an <spanclass=Code><span style='font-family:Courier'>Array</span></span> object. Thisis desirable, especially when you do not know a specific number of parametersyou need to pass until the functions are passed. </p><h4><span lang=EN-US> Motion Graphics</span></h4><p class=MsoBodyText>In the example <span class=FileName><spanstyle='font-family:Courier'><a href="../fla/function.apply.fla">function.apply.fla</a></span></span>and <span class=FileName><span style='font-family:Courier'><ahref="../swf/function.apply.swf">function.apply.swf</a></span></span> , a function is created to change the alpha of a movie clip instance. Thecode in this section performs the following steps. First, the <span class=Code><spanstyle='font-family:Courier'>changeAlpha</span></span> function below changesthe <span class=Code><span style='font-family:Courier'>_alpha</span></span> ofan object to the value of the passed parameter. Next an inline function iscreated, which is executed when a user clicks on the &quot;update&quot; button.The function first gets the value of the textbox <span class=Code><spanstyle='font-family:Courier'>_root.alpha</span></span><i>,</i> and checks that it is a number between <span class=Code><spanstyle='font-family:Courier'>0</span></span> and <span class=Code><spanstyle='font-family:Courier'>100</span></span>. Then it rounds the number to theclosest integer and applies the <span class=Code><span style='font-family:Courier'>changeAlpha</span></span>function to the <span class=Code><span style='font-family:Courier'>_root.circle</span></span>movie clip. The user's alpha value is finally passed as a parameter. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span style='font-family:"Courier New";'>function changeAlpha(x) {</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>   this._alpha = x;</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>}</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>_root.updateButton.onRelease = function() {</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>      var myVal =Number(_root.alpha.text);</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>      if (myVal&lt;0){</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>      myVal = 0;</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>         } else if(myVal&gt;100) {</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>      myVal = 100;</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>   }</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>   _root.alpha.text =Math.round(myVal);</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>  changeAlpha.apply(_root.circle, [myVal]);</span></p><p class=MsoBodyText><span style='font-family:"Courier New";'>};</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>changeAlpha.apply(_root.circle,[myVal]);</span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>When parameters are passed to the function, they must bespecified as an <span class=Code><span style='font-family:Courier'>Array</span></span>object.</p>