<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>Array.length</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myArrayLength= myArray.length; </span></span></p><p class=MsoBodyText><i>&nbsp;</i></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myArray.length </span></span>returns the current length of the array<span class=Code><span style='font-family:Courier'>myArray.</span></span><i></i></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This property is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 or later. </span></span></p><h3>Description</h3><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myArray.length </span></span>is equal to the length of the array <spanclass=Code><span style='font-family:Courier'>myArray. </span></span>This value is a positive integer. Thisproperty is perhaps one of the most useful things to know about an array. Inmany cases, you <i>have </i>to know itbefore you can do anything useful with the array. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Knowing the length of an array is useful because you thenknow that the array has elements <span class=Code><span style='font-family:Courier'>0 </span></span>to <span class=Code><span style='font-family:Courier'>length, </span></span>and can use this fact to sequentiallyaccess all the elements in the array. This property is not available in theother complex data structure, the <span class=Code><span style='font-family:Courier'>Object </span></span>object, and this fact makes the array more usefulin a number of applications where you need to handle basic lists of data.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=336 valign=top style='width:252.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>list = [23,”pies”, “cakes”, false, 40, “beer”]; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace (list.length); </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=134 height=113  src="../png/0586-dict2-21.png"></p>    <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Notice that the last element in <span class=Code><span  style='font-family:Courier'>list </span></span>is <span class=Code><span style='font-family:Courier'>list.length-1, </span></span> because arrays start at element <span class=Code><span style='font-family:  Courier'>0. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>spectrum = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;]; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>spectrum[spectrum.length] = “indigo”; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>spectrum[spectrum.length] = &quot;violet&quot;; </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Adding an element at position <span class=Code><span  style='font-family:Courier'>[array.length] </span></span>of an array has the effect of appending the element at the end of the array. Because you have now added one to the length, the length is also updated by one, so this value always points to the first free element at the end of the array.</p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=135 height=113  src="../png/0586-dict2-22.png"> </p>    <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>If you want to add a number of elements to the end of an array (as we have done here) you will find the <span class=ImportantWord><span  style='font-family:Helvetica'>Array.push </span></span>method more useful than the technique shown here.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myArray = [&quot;John&quot;, &quot;Paul&quot;, &quot;Ringo&quot;, &quot;George&quot;]; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>for (i=0; i&lt;myArray.length; i++) { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      trace(myArray[i]); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Using a <span class=ImportantWord><span  style='font-family:Helvetica'>for </span></span>loop that cycles between <span class=Code><span  style='font-family:Courier'>0 </span></span>and <span class=Code><span  style='font-family:Courier'>myArray.length-1 </span></span>is the quickest way to sequentially read through an array. The code shown would produce the following output:</p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=142 height=150  src="../png/0586-dict2-24.png"></p>    <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myArray = new Array(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myArray[12] = “23”; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myArray[myArray.length] = “damn”; </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The array <span class=Code><span style='font-family:  Courier'>myArray </span></span>has only one defined element <span class=Code><span style='font-family:Courier'>myArray[12]. </span></span> If you use <span class=Code><span style='font-family:Courier'>myArray.length </span></span> to add a new element to the end of <span class=Code><span style='font-family:  Courier'>myArray, </span></span>the new element will go into a <i>new </i>element, although there are plenty of free elements already. </p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=136 height=43  src="../png/0586-dict2-23.png"></p>    <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>By simply adding elements to the end of an array without managing the existing array elements can make your array grow in size very quickly, and this may slow your application down.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>You can remove the last element in an array with <span  class=ImportantWord><span style='font-family:Helvetica'>array.pop. </span></span> See also Tips and Precautions section for this entry.</p>  <p class=MsoBodyText> </p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>As noted above, the fact that an array has a <spanclass=Code><span style='font-family:Courier'>length </span></span>property is one of its major features,because this ensures that you always know what size it is. This is important,because without this piece of information, you cannot easily read an arraybecause you do not know when you have read the last element it contains. <spanclass=Code><span style='font-family:Courier'>Array.length </span></span>isgenerally used with the <span class=ImportantWord><span style='font-family:Helvetica'>for </span></span>action to loop through all the elements in anarray, as seen in the examples above. See also the example files <ahref="../fla/arraylength.fla">arraylength.fla</a>and <a href="../swf/arraylength.swf">arraylength.swf</a>.See also the FLA entries for <span class=ImportantWord><span style='font-family:Helvetica'>Array.pop. </span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>As seen in the examples above, you cannot always assumethat all array elements from <span class=Code><span style='font-family:Courier'>0 </span></span>to <span class=Code><span style='font-family:Courier'>array.length-1 </span></span>are defined, unless you have taken steps to ensure this. If you have notensured this, or if your array is coming from a remote location and you did notcreate it, you must always assume that some elements may be undefined, and yourcode should be able to handle this.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Also, when you are handling large amounts of data, beaware that growing a list by continuously adding elements to the end of it maymake your data grow very quickly. Consider using <span class=ImportantWord><spanstyle='font-family:Helvetica'>Array.pop, </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>Array.shift, </span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>Array.slice </span></span>to manage your array.</p>