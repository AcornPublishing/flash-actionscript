<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>delete</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>b =delete a; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>a </span></span>is a variable, object or property. <spanclass=Code><span style='font-family:Courier'>b </span></span>will be returned as <span class=Code><spanstyle='font-family:Courier'>true </span></span>if <span class=Code><spanstyle='font-family:Courier'>a </span></span>was successfully deleted, and <span class=Code><span style='font-family:Courier'>false </span></span>if it wasn’t. It is more usual to use thefollowing syntax:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>deletea; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This operator is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 and later. </span></span>It allows you to delete variables and objects that you have previously defined.</p><h3>Description</h3><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Thisoperator allows you to delete a variable or object. </span></span>It also hasan undocumented feature; it allows you to delete <span class=ImportantWord><spanstyle='font-family:Helvetica'>functions, </span></span>and this has some useful implications for Flash MX. See Tips andPrecautions section for more details.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The usefulness of <span class=Code><span style='font-family:Courier'>delete </span></span>is that it removes variables or objects <i>completely</i>, and this means somethingdifferent from simply equating the object or variable to <span class=Code><spanstyle='font-family:Courier'>undefined. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Supposing you have an array, <span class=Code><spanstyle='font-family:Courier'>x. </span></span>Once you have finished with it, itis a good idea to clear it from memory for the sake of efficiency, and alsoperformance if <span class=Code><span style='font-family:Courier'>x </span></span>is very large.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you delete it as follows:</p><p class=MsoBodyText> </p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>x =[20, 30, 50, 50]; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>x =undefined; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… you will find that the elements of <span class=Code><spanstyle='font-family:Courier'>x </span></span>disappear, but <span class=Code><spanstyle='font-family:Courier'>x </span></span>itself still exists, albeit <spanclass=Code><span style='font-family:Courier'>undefined. </span></span>To clear <spanclass=Code><span style='font-family:Courier'>x </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>completely, </span></span>you need to do the following:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>x =[20, 30, 50, 50]; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>deletex; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This will remove <span class=Code><span style='font-family:Courier'>x </span></span>completely, and you can confirm this by running thisscript in debug mode. <span class=Code><span style='font-family:Courier'>x </span></span>will no longer exist if you look on the <span class=Code><spanstyle='font-family:Courier'>_root </span></span>timeline.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = 10; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(a); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>b = delete a; </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>If you debug this script, you will see that <span  class=Code><span style='font-family:Courier'>b = true </span></span>and <span  class=Code><span style='font-family:Courier'>a </span></span>no longer exists; <span class=Code><span style='font-family:Courier'>a </span></span>has been deleted.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myObject = {p1:10, p2:30, p3:2.3, p4:6}; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>delete myObject.p3; </span></span></p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>After line 1, the object <span class=Code><span  style='font-family:Courier'>myObject </span></span>is equal to:</p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=115 height=71  src="../png/0586-dict5-01.png"></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>After line 2 it becomes:</p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=110 height=57  src="../png/0586-dict5-02.png"></p>      <p class=MsoBodyText><b></b></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Property <span class=Code><span style='font-family:Courier'>p3 </span></span> of <span class=Code><span style='font-family:Courier'>myObject </span></span>is deleted.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>delete Math.abs; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>delete my_mc; </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>You cannot delete variables, objects or properties that you have not previously defined.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>You cannot delete graphic objects (movie clips, buttons or text fields).</p>  <p class=MsoBodyText> </p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>Continually creating objects and arrays that are notpruned of no longer needed properties or elements can lead to eventual slowdownof the Flash player. Correctly cleaning up old data via the delete operatormitigates against this.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The examples in the table above show typical standard waysof using delete. The example files, <ahref="../fla/delete.fla">delete.fla</a>and <a href="../swf/delete.swf">delete.swf</a>,show a rather macabre use of delete for motion graphics.</p><h3>Tips and precautions</h3><p class=MsoBodyText>As well as variables and objects, delete can remove otheruseful things, the most useful being <span class=ImportantWord><spanstyle='font-family:Helvetica'>functions. </span></span>In particular, Flash MXallows you to define event handlers as functions.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Consider the following Flash MX script:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.onEnterFrame= function() { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.onEnterFrame = undefined; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This script defines an <span class=Code><spanstyle='font-family:Courier'>onEnterFrame </span></span>for <span class=Code><span style='font-family:Courier'>_root, </span></span>and the event un-defines itself on running. If you debug a FLA with this scripton frame 1, you will see the following output:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>&nbsp;</p><p class=Picturereference><img src="../png/0586-dict5-99.png" width="281" height="236"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you now change the script to read as follows:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.onEnterFrame= function() { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    delete this.onEnterFrame </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… this time, the <span class=Code><span style='font-family:Courier'>onEnterFrame </span></span>will disappear completely from the Debugger.When you are writing advanced scripts, particularly for motion graphics, whereyou are continually creating events and media objects (<span class=Code><spanstyle='font-family:Courier'>Sound, </span></span><span class=Code><spanstyle='font-family:Courier'>Color </span></span>) that you only use for a shorttime, the ability to delete them completely rather than just undefine them canmake your code much more efficient, and may also unclutter the Debugger window.</p>