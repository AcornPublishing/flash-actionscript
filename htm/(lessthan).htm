<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>&lt; less than</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = a&lt; b; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>a </span></span>and <span class=Code><spanstyle='font-family:Courier'>b </span></span>are number or string literal values, or any data element holding number orstring values. <span class=Code><span style='font-family:Courier'>c </span></span>will be true if <span class=Code><spanstyle='font-family:Courier'>a </span></span>is less than <span class=Code><span style='font-family:Courier'>b. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This operator is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 or later. </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>Flash 4 supportsnumeric comparisons, but not string comparisons, </span></span>so be aware thatthis operator may give you different results with the Flash 4 player if you areperforming string comparisons. This operator will also happily work with Booleans,but the results of such comparisons are not usually meaningful.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>&lt; </span></span>operator is most usually used with <span class=ImportantWord><spanstyle='font-family:Helvetica'>if </span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>for. </span></span></p><h3>Description</h3><p class=MsoBodyText>The process of evaluating <span class=Code><spanstyle='font-family:Courier'>c </span></span>is as follows:</p><p class=MsoBodyText>&nbsp;</p><p class=Numbered-Level1 style='margin-left:.5in;text-indent:-.25in;'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>If <span class=Code><span style='font-family:Courier'>a </span></span>and <span class=Code><spanstyle='font-family:Courier'>b </span></span>are number values, then <span class=Code><span style='font-family:Courier'>c </span></span>is true if <span class=Code><spanstyle='font-family:Courier'>a </span></span>is less than <span class=Code><span style='font-family:Courier'>b, </span></span>otherwise it is false.</p><p class=Numbered-Level1 style='margin-left:.5in;text-indent:-.25in;'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>If <span class=Code><span style='font-family:Courier'>a </span></span>or <span class=Code><spanstyle='font-family:Courier'>b </span></span>are strings (such as <span class=Code><span style='font-family:Courier'>“3” </span></span>or <span class=Code><span style='font-family:Courier'>“ 6” </span></span>) thatcan be directly converted to numbers, then they are converted into numbers andcomparison occurs as per 1 above.</p><p class=Numbered-Level1 style='margin-left:.5in;text-indent:-.25in;'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>If <span class=Code><span style='font-family:Courier'>a </span></span>and <span class=Code><spanstyle='font-family:Courier'>b </span></span>are string values that cannot be directly converted to numbers, then thestrings are converted to their ASCII character code numbers and the comparisonproceeds based on that. To find the character code, <span class=Code><spanstyle='font-family:Courier'>myCode </span></span>of a string, <span class=Code><span style='font-family:Courier'>myString </span></span>foryourselfuse:</p><p class=MsoBodyText style='margin-left:.25in'> </p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myCode= myString.charCodeAt(0); </span></span></p><p class=MsoBodyText style='margin-left:.25in;text-indent:.25in'>&nbsp;</p><p class=MsoBodyText style='margin-left:.5in'>… or look up the value of eachcharacter using an ASCII table (search the web for ‘ASCII character table’ orfor the purists, ‘ISO 8859’).</p><p class=MsoBodyText style='margin-left:.5in'>&nbsp;</p><p class=MsoBodyText style='margin-left:.5in'><span class=ImportantWord><spanstyle='font-family:Helvetica'>Note </span></span></p><p class=MsoBodyText style='margin-left:.5in'>ASCII  is an acronym for  <spanclass=ImportantWord><span style='font-family:Helvetica'>American Standard Codefor Information InterChange. </span></span>All files, whatever they are, aremerely a formatted collection of numbers. This means that:</p><p class=MsoBodyText style='margin-left:.5in'>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Atext file that includes characters is really just a pattern of numbers that thecomputer has parsed into a pattern of text characters and control codes.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Whenyou hit a key on a keyboard, the computer sees a number corresponding to theletter you just pressed, and not the letter itself.  It only converts the number back to a character when you want tosee your input again (such as on the screen).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText style='margin-left:.5in'>The fundamental reason for allthis is that computers only see binary, and ways of representing anything on acomputer (text, pictures, sound) must be based on a way of representing theformat via raw binary numbers </p><p class=MsoBodyText style='margin-left:.5in'>&nbsp;</p><p class=MsoBodyText style='margin-left:.5in'>One of the oldest systems ofconverting raw numbers to/from text characters is ASCII.  It was widely used for communications betweena keyboard and a computer, and a way of representing raw text files (.TXT filesare simply a series of ASCII encoded numbers that are parsed into thecorresponding ASCII defined characters when you view them on the screen). Laterstandards (such as ISO 8859) are either simply re-iterations of ASCII that aredefined as part of a bigger international standard, or an extension of ASCII tocater for additional characters or slight modern differences.</p><p class=MsoBodyText style='margin-left:.5in'>&nbsp;</p><p class=MsoBodyText style='margin-left:.5in;'>Itis important to have an appreciation of ASCII because almost all stringmanipulations that a computer does to a string are based on it, or a derivativeof it </p><p class=MsoBodyText style='margin-left:.5in'>&nbsp;</p><p class=MsoBodyText style='margin-left:.5in'><span class=ImportantWord><spanstyle='font-family:Helvetica'>The table below assumes Flash 5 and above. Seethe Tips and Precautions section for Flash 4. </span></span></p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=288 valign=top style='width:216.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=252 valign=top style='width:189.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a=10, b=8; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>c = a &lt; b; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>d = b &lt; a; </span></span></p>  <p class=MsoPlainText>&nbsp;</p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = false </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>d = true </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = 5 &lt; 5; </span></span></p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = false; </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>If you want to detect ‘less than or equal’ (<span  class=Code><span style='font-family:Courier'>a = true </span></span>for this sort of condition), use <span class=ImportantWord><span style='font-family:  Helvetica'>&lt;= </span></span>instead. See the entry for the <span class=ImportantWord><span style='font-family:  Helvetica'>&lt;= </span></span>operator.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText>a = “10”, b = 8;</p>  <p class=MsoPlainText>c = a &lt; b;</p>  <p class=MsoPlainText>d = b &lt; a;</p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>c = false</p>  <p class=MsoBodyText>d = true</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>“10” </span></span> is converted to <span class=Code><span style='font-family:Courier'>10 </span></span> before the comparison is made.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a=&quot;cat&quot;, b=&quot;dog&quot;; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>c = a &lt; b; </span></span></p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = true </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>‘<span class=Code><span style='font-family:Courier'>c </span></span>’ is before ‘<span class=Code><span style='font-family:Courier'>d </span></span>’ in the alphabet.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText>a=&quot;anteater&quot;, b=&quot;aardvark&quot;;</p>  <p class=MsoPlainText>c = a &lt; b;</p>  <p class=MsoPlainText>d = b &lt; a;</p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = false </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>d = true </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Flash is clever enough to look further along the string if the first two letters are the same.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText style='margin-left:-5.2pt;text-indent:5.2pt'><span  class=Code><span style='font-family:Courier'>a=&quot;Cat&quot;, b=&quot;cat&quot;; </span></span></p>  <p class=MsoBodyText style='margin-left:-5.2pt;text-indent:5.2pt'><span  class=Code><span style='font-family:Courier'>c = a &lt; b; </span></span></p>  <p class=MsoBodyText style='margin-left:-5.2pt;text-indent:5.2pt'><span  class=Code><span style='font-family:Courier'>d = b &lt; a; </span></span></p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = true </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>d = false </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>ASCII has A-Z before a-z. If you want to make your alphabetic string comparisons case insensitive, consider converting all text to the same case via the <span class=ImportantWord><span style='font-family:  Helvetica'>toLowerCase </span></span>or the <span class=ImportantWord><span style='font-family:Helvetica'>toUpperCase </span></span>methods of the <span  class=ImportantWord><span style='font-family:Helvetica'>String </span></span> object before making your comparison.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a=&quot;cat&quot;, b=&quot; dog&quot;; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>c = a &lt; b; </span></span></p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = false </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Although ‘<span class=Code><span style='font-family:  Courier'>c </span></span>’ is before ‘<span class=Code><span style='font-family:  Courier'>d </span></span>’, the string <span class=Code><span  style='font-family:Courier'>“ dog” </span></span>has a space before the ‘<span  class=Code><span style='font-family:Courier'>d </span></span>’, so the comparison is ‘<span class=Code><span style='font-family:Courier'>c </span></span>’ and ‘‘ (<span  class=Keyboard><span style='font-family:"New York"'>Space </span></span>). Note that ASCII contains spaces, punctuation, brackets, control codes and other stuff, not just letters, and you need to strip your strings of these if you want to make a proper alphabetical string comparison.</p>  <p class=MsoBodyText> </p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = true; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>b = false; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>c = b &lt; a; </span></span></p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = true </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>true </span></span>will be converted to <span  class=Code><span style='font-family:Courier'>1 </span></span>and <span  class=Code><span style='font-family:Courier'>false </span></span>will be converted to <span class=Code><span style='font-family:Courier'>0 </span></span> before the comparison takes place. Numeric comparisons applied to Booleans are not normally useful.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=288 valign=top style='width:216.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = undefined &lt; 3; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>b = 3 &lt; undefined; </span></span></p>  </td>  <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = true </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>b = false </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&lt; </span></span> returns odd values if either or both of the operators cannot be evaluated to a string or number. Be wary of making comparisons based on raw user text input without first checking the validity of those inputs.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>&lt; </span></span>operator is typically used as part of the <span class=ImportantWord><spanstyle='font-family:Helvetica'>if </span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>for </span></span>actions. See those entries forexamples.</p><h3>Tips and precautions</h3><p class=MsoBodyText>As you will by now have gathered, alphabetical sorting isnot really alphabetical at all, but rather, is based on the position of eachcharacter in the ASCII table. Be aware that you may have to therefore pass youroperands through <span class=ImportantWord><span style='font-family:Helvetica'>String.toLowerCase </span></span>or <span class=ImportantWord><span style='font-family:Helvetica'>String.toUpperCase </span></span>to make sure there are no leading spaces in either string, remove any nonalphabetical characters, and other manipulations before a true alphabeticalcomparison will result.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you open a Flash 4 file into Flash 5 or above, you willsee that the code is changed such that all statements of the form:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = a&lt; b; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… will be converted to:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c =Number(a) &lt; Number(b); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This is the only way that Flash can make sure that the newfeatures of <span class=ImportantWord><span style='font-family:Helvetica'>+ </span></span>in Flash 5 or MX do not affect the way the original Flash 4 code operated.</p>