<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-GB>parseFloat</span></h1><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>parseFloat(string) </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Where </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>string </span></span><span lang=EN-GB>isthe string to convert to a floating point number.</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB>&nbsp; </span></span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-GBstyle='font-weight:normal'>This method is </span></span><span class=ImportantWord><spanlang=EN-GB style='font-family:Helvetica'>compatible with Flash 5 and later.</span></span><spanclass=ImportantWord><span lang=EN-GB style='font-weight:normal'> See also the entry for </span></span><spanclass=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>parseInt.</span></span><spanclass=Code><span lang=EN-GB> </span></span></p><h3><span lang=EN-GB>Description</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>parseFloat() </span></span><span class=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>method </span></span><span lang=EN-GB>is used to convert a stringinto a floating point number and return the result. The numbers in the stringare parsed prior to conversion. If the parse operation reaches a non-numericvalue parsing stops at that point. If no numbers are in the string, </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>NaN </span></span><spanlang=EN-GB>is returned. Whitespace is ignored in the string.</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=252 valign=top style='width:189.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=312 valign=top style='width:3.25in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=252 valign=top style='width:189.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myNum = parseFloat(&quot;23h8&quot;); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myNum = parseFloat(&quot;2.6325Z&quot;); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=312 valign=top style='width:3.25in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns the value </span><span class=Code><span lang=EN-GB style='font-family:Courier'>23.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns the value </span><span class=Code><span lang=EN-GB style='font-family:Courier'>2.6325.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=252 valign=top style='width:189.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myNum = parseFloat(&quot;a23h8&quot;); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myNum = parseFloat(&quot;63a764&quot;); </span></span></p>  </td>  <td width=312 valign=top style='width:3.25in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns </span><span  class=Code><span lang=EN-GB style='font-family:Courier'>NaN.</span></span><span  lang=EN-GB></span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns </span><span  class=Code><span lang=EN-GB style='font-family:Courier'>63 </span></span><span  lang=EN-GB>(it stops parsing at the first non-numeric value).</span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=252 valign=top style='width:189.2pt;border:none;border-bottom:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myNum = parseFloat(&quot;2+2&quot;); </span></span></p>  </td>  <td width=312 valign=top style='width:3.25in;border:none;border-bottom:solid windowtext .5pt;background:#CCCCCC;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Returns the value 2</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>The </span><span  class=Code><span lang=EN-GB style='font-family:Courier'>parseFloat() </span></span><span  lang=EN-GB>method cannot be used to evaluate expressions, since the operators are treated as non-numeric characters.</span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-GB>Examples and practical uses</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>method provides a way to convert a string into a floating pointnumber. The </span><span class=Code><span lang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>method parser reads from left to right in the string. If there areno numbers starting the string, </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>NaN </span></span><span lang=EN-GB>is returnedimmediately. If there are numbers, they are read until a non-number is reached,at which point the parsing stops and the numbers read to that point arereturned. For example:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>str1= &quot;645GH756&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>num1= parseFloat(str1); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will return the number </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>645.</span></span><spanlang=EN-GB> Decimal points are significant, so:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>str1= &quot;3.14159pi&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>num1= parseFloat(str1); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will return </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>3.14159.</span></span><span lang=EN-GB></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Expressions cannot be evaluated with the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>method because the operator will be treated as a non-numeric valueinstead of a mathematical operator. For example:</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>num1= parseFloat(“34*2”); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will result in a value of </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>34.</span></span><spanlang=EN-GB> The multiplication sign has no mathematical meaning to the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>method in this expression. See <ahref="../fla/parse.fla">parse.fla</a>/ <a href="../swf/parse.swf">parse.swf</a>for examples of the results of </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>parseInt() </span></span><span lang=EN-GB>and </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>operations.</span></p><h3><span lang=EN-GB>Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>method and the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>parseInt() </span></span><span lang=EN-GB>methodprovide two ways of converting strings to numbers, ignoring non-numeric values.Both the </span><span class=Code><span lang=EN-GB style='font-family:Courier'>parseFloat() </span></span><spanlang=EN-GB>and </span><span class=Code><span lang=EN-GB style='font-family:Courier'>parseInt() </span></span><span lang=EN-GB>methods differ from the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>Number() </span></span><spanlang=EN-GB>function because the parse methods ignore non-numeric characters,while the </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Number() </span></span><spanlang=EN-GB>function returns a value of </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>NaN.</span></span><span lang=EN-GB> So,the code:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>A= “123.456”; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>B= Number(A); </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>C= parseFloat(A); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will all result in the same result for </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>B </span></span><spanlang=EN-GB>and </span><span class=Code><span lang=EN-GB style='font-family:Courier'>C </span></span><span lang=EN-GB>(</span><span class=Code><spanlang=EN-GB style='font-family:Courier'>123.456 </span></span><span lang=EN-GB>)but the code:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>A= “123-456”; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>B= Number(A); </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>C= parseFloat(A); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… will result in a value of </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>NaN </span></span><spanlang=EN-GB>for </span><span class=Code><span lang=EN-GB style='font-family:Courier'>B </span></span><span lang=EN-GB>but the value of </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>123 </span></span><spanlang=EN-GB>for </span><span class=Code><span lang=EN-GB style='font-family:Courier'>C.</span></span><span lang=EN-GB></span></p>