<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"><h1><a name="_Toc15970095">XML.nodeName</a></h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXMLNode.nodeName</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myXMLNode</span></span>is an instance of the <span class=Code><span style='font-family:Courier'>XML</span></span>object.</p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code>It is </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 Player and later</span></span><spanclass=Code>.</span>The <span class=Code><span style='font-family:Courier'>XML.nodeName</span></span>property <span class=ImportantWord><span style='font-family:Helvetica'>returnsthe node name</span></span> of the specified node in an XML object instance.Refer to related entries on <span class=ImportantWord><span style='font-family:Helvetica'>XML.childNodes</span></span>, <span class=ImportantWord><spanstyle='font-family:Helvetica'>XML.nodeType</span></span>, and <spanclass=ImportantWord><span style='font-family:Helvetica'>XML.nodeValue</span></span>.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.nodeName</span></span><span class=ImportantWord><span style='font-family:Helvetica'>property</span></span>is used to return the node name of a node, which you specify in the <spanclass=Code><span style='font-family:Courier'>XML</span></span> object instancehierarchy. If the object is an XML element the name of the tag representing thenode is returned. If the object is a text node, <span class=Code><spanstyle='font-family:Courier'>null</span></span> is returned. </p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=276 valign=top style='width:207.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=132 valign=top style='width:99.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Returned values</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=163 valign=top style='width:122.4pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'><span  class=BodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></span><span  class=BodyText><span class=Code><span style='font-family:Courier'>myXML_xml =  new  XML(&quot;&lt;cat&gt;&lt;name&gt;whiskers&lt;/name&gt;&lt;age&gt;5&lt;/age&gt;&lt;/cat&gt;&quot;);</span></span></span><span  class=BodyText><span class=Code><span style='font-family:Courier'>trace(myXML_xml.firstChild.nodeName);</span></span></span>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=132 valign=top style='width:99.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'>cat</p>  </td>  <td width=163 valign=top style='width:122.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>cat</span></span><span class=Code> is returned  because the first child is the </span><span class=Code><span  style='font-family:Courier'>&lt;cat&gt;</span></span><span class=Code> element, and  it is an element node, not a text node.</span></p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'><span class=BodyText><span  class=Code><span style='font-family:Courier'>&nbsp;</span></span></span><span  class=BodyText><span class=Code><span style='font-family:Courier'>myXML_xml =  new  XML(&quot;&lt;cat&gt;&lt;name&gt;whiskers&lt;/name&gt;&lt;age&gt;5&lt;/age&gt;&lt;/cat&gt;&quot;);</span></span></span><span  class=BodyText><span class=Code><span style='font-family:Courier'>trace(myXML_xml.firstChild.childNodes[0].childNodes[0]);</span></span></span><span  class=BodyText><span class=Code><b><span  style='font-family:Courier'>trace(myXML_xml.firstChild.childNodes[0].childNodes[0].nodeName);</span></b></span></span>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=132 valign=top style='width:99.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>whiskers</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>null</span></span></p>  </td>  <td width=163 valign=top style='width:122.4pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code>Since we are  trying to access a text node</span><span class=Code><span  style='font-family:Courier'> (whiskers</span></span><span class=Code>), we are  returned a </span><span class=Code><span style='font-family:Courier'>null</span></span><span  class=Code> for the second trace because it is a type </span><span  class=Code><span style='font-family:Courier'>3</span></span><span class=Code> node.</span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.nodeName</span></span>property holds the name of a type <span class=Code><span style='font-family:Courier'>1</span></span> element node. Therefore, if the node is a text node(the <span class=Code><span style='font-family:Courier'>nodeType</span></span>is <span class=Code><span style='font-family:Courier'>3</span></span>), a <spanclass=Code><span style='font-family:Courier'>null</span></span> is returned forthe <span class=Code><span style='font-family:Courier'>XML.nodeName</span></span>property. If the property’s object is an XML element (the <span class=Code><spanstyle='font-family:Courier'>nodeType</span></span> is 1), the name of the tagrepresenting the node is returned. For example, commanding the following XMLdata fragment:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&lt;song-title&gt;whois the muffin man&lt;/song-title&gt;</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>&lt;song-title&gt;</span></span>is a type <span class=Code><span style='font-family:Courier'>1</span></span>element node, with a <span class=Code><span style='font-family:Courier'>nodeName</span></span>of <span class=Code><span style='font-family:Courier'>song-title</span></span>.However, the text data <span class=Code><span style='font-family:Courier'>whois the muffin man</span></span> is type <span class=Code><spanstyle='font-family:Courier'>3</span></span> text node data. It would beaccessed not by <span class=Code><span style='font-family:Courier'>nodeName</span></span>,but instead <span class=Code><span style='font-family:Courier'>nodeValue</span></span>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>So this is how we would extract this data:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml= new XML(&quot;&lt;badmusic&gt;&lt;song-title&gt;who is the muffinman&lt;/song-title&gt;&lt;/badmusic&gt;&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace<b>(myXML_xml.firstChild.childNodes[0].nodeName)</b>;</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This would return <span class=Code><span style='font-family:Courier'>song-title</span></span>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This property is commonly used to extract data from an XMLhierarchy. You might want to check for the type of the node prior to yourattempt to extract either the <span class=Code><span style='font-family:Courier'>nodeName</span></span>or the <span class=Code><span style='font-family:Courier'>nodeValue </span></span><spanclass=Code>data</span>.In the following entry on <span class=Code><span style='font-family:Courier'>nodeType</span></span>,we cycle through XML data, and return the <span class=Code><spanstyle='font-family:Courier'>nodeType</span></span> alongside the <spanclass=Code><span style='font-family:Courier'>nodeName</span></span>. Refer tothe example <a href="../fla/xml.nodename.fla">xml.nodename.fla</a> and <ahref="../swf/xml.nodename.swf">xml.nodename.swf</a>  for aworking example of these concepts.</p><h3>Tips and precautions</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.nodeName</span></span>property is useful for checking a node’s name for elements, and as a check thata node references a text node. The <span class=Code><span style='font-family:Courier'>XML.nodeName</span></span> property is sometimes used withconditionals. XML elements are the only node type, which are accessible andwill return a node name. You have to use the <span class=Code><spanstyle='font-family:Courier'>nodeValue</span></span> property to access textnode (type <span class=Code><span style='font-family:Courier'>3</span></span>)node data.</p>