<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>FComponent.getSelectedIndex</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier;'>FComboBox.getSelectedIndex </span></span>and <span class=Code><span style='font-family:Courier;'>FListBox.getSelectedIndex. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a =myComponent.getSelectedIndex(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText>Where the variable <span class=Code><spanstyle='font-family:Courier'>a </span></span>is equated to the selected index ofthe component instance <span class=Code><span style='font-family:Courier'>myComponent. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>This method will return the currently selected index in acombo box or list box, or <span class=Code><span style='font-family:Courier'>undefined </span></span>if no selection has yet been made. If the first label in the component isselected, then <span class=Code><span style='font-family:Courier'>0 </span></span>is returned, <span class=Code><span style='font-family:Courier'>1 </span></span>for the second, and so on. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>It is standard practice to use the <span class=Code><spanstyle='font-family:Courier'>getSelectedIndex </span></span>method within thechange handler to retrieve the newly selected choice via the <span class=Code><spanstyle='font-family:Courier'>onChange </span></span>event.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you want the component to instead return the selectedlabel or the data associated with it, you should use the <spanclass=ImportantWord><span style='font-family:Helvetica'>FComponent.getSelectedItem. </span></span></p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = myCombo.getSelectedIndex(); </span></span></p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>a will be equated to the currently selected index of the component instance <span class=Code><span style='font-family:Courier'>myCombo. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getSelectedIndex </span></span>method is often used as the means toretrieve the selected item in a combo box or list box. It is the standard wayto do this is within the <span class=Code><span style='font-family:Courier'>onChange </span></span>handler. To set this up you would:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Definethe <span class=ScreenText><span style='font-family:Optima'>Change Handler </span></span>field in the Property inspector withthe name of a function. In our case we have called it <span class=Code><spanstyle='font-family:Courier'>change. </span></span>This function will run everytime the user changes the currently selected item in the combo box or list box.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=457 height=112src="../png/0586-dict5-26.png"></p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Definethe function itself. In this listing, we are simply displaying the selectedindex in a text field, but the function can also (and usually does) include thecode that actually responds to the change. For example, if you were using acombo box as a means of providing navigation, you would include the relevant <spanclass=Code><span style='font-family:Courier'>goto </span></span>actions to jump to the required framefollowing a selection.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functionchange(component) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    option_txt.text =component.getSelectedIndex(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See also the example files <ahref="../fla/fcomponentgetselectedindex.fla"><spanstyle='font-family:Optima'>fcomponentgetselectedindex.fla</span></a> and <ahref="../swf/fcomponentgetselectedindex.swf"><spanstyle='font-family:Optima'>fcomponentgetselectedindex.swf</span></a>.</p><h3>Tips and precautions</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getSelectedIndex </span></span>method will simply return a number between <span class=Code><spanstyle='font-family:Courier'>0 </span></span>(if you select the top label in thelist) and the maximum number of labels minus 1. If you want to return a userdefined value (such as a non sequential number value per label, or the labelsthemselves) the <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.getSelectedItem </span></span>method is the better choice over <span class=Code><span style='font-family:Courier'>getSelectedIndex. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>A list box can be configured to accept multipleselections. See also <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.getSelectedIndices </span></span>for more information on how to dothis.</p>