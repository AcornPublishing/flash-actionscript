<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>F<i>Component</i>.getSelectedItems</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier;'>FListBox.getSelectedItems. </span></span>)</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a =myComponent.getSelectedItems(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText>Where the variable <span class=Code><spanstyle='font-family:Courier'>a </span></span>is equated to an array, each element of which is an object that contains:</p><p class=MsoBodyText> </p><p class=Numbered-Level1 style='margin-left:.75in;text-indent:-.25in;'><i>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></i>The string value of the selected label</p><p class=Numbered-Level1 style='margin-left:.75in;text-indent:-.25in;'>2.<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Thedata value of the selected label </p><p class=MsoBodyText><i>&nbsp;</i></p><p class=MsoBodyText>… of the list box instance <span class=Code><spanstyle='font-family:Courier'>myComponent. </span></span>If no selections haveyet been made, the method will return <span class=Code><span style='font-family:Courier'>undefined. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>A list box allows the user to make multiple selections ifthey make additional selections whilst pressing down the <span class=Keyboard><spanstyle='font-family:"New York"'>Control </span></span>or <span class=Keyboard><spanstyle='font-family:"New York"'>Shift </span></span>keys.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=128 height=122src="../png/0586-dict5-27.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>To enable this feature (it is disabled by default) you caneither use the <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.setSelectMultiple </span></span>method, or set the <spanclass=ScreenText><span style='font-family:Optima'>Select Multiple </span></span>field of the Property inspector to <spanclass=Code><span style='font-family:Courier'>true. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=358 height=110src="../png/0586-dict5-28.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You also have to define a data value for each label, andyou can do this by entering them in the <span class=ScreenText><spanstyle='font-family:Optima'>Data </span></span>field in the Property inspector. Although this is optional, youwill gain no real advantage over using the simpler <span class=ImportantWord><spanstyle='font-family:Helvetica'>FComponent.getSelectedIndexes </span></span>if you don’t.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>It is standard practice to use the <span class=Code><spanstyle='font-family:Courier'>getSelectedItems </span></span>method within thechange handler to retrieve the newly selected choices via the <span class=Code><spanstyle='font-family:Courier'>onChange </span></span>event.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:2.0in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySelection = myListBox.getSelectedItems(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>      <p class=MsoBodyText><span class=Code><span style='font-family:Courier'><img width=279 height=104  src="../png/0586-dict5-31.png"> </span></span></p>      <p class=Picturereference><span class=Code></span></p>  </td>  <td width=192 valign=top style='width:2.0in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a </span></span> will be equated to an array of objects each with properties <span class=Code><span  style='font-family:Courier'>label </span></span>and <span class=Code><span style='font-family:Courier'>data. </span></span><span class=ImportantWord><span  style='font-family:Helvetica'>Note </span></span>that there is also an undocumented property called <span class=Code><span style='font-family:Courier'>__ID__, </span></span> and this is discussed in the Tips and precautions section.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>A typical object structure is shown in the diagram. For simplicity, we have only selected 1 item (the label “<span class=Code><span  style='font-family:Courier'>option 3 </span></span>”, which has a data value of <span class=Code><span style='font-family:Courier'>3 </span></span>).</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getSelectedItems </span></span>method is often used as the means toretrieve the selection in a list box. The standard way to do this is within the<span class=Code><span style='font-family:Courier'>onChange </span></span>handler.To set this up you would:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Definethe <span class=ScreenText><span style='font-family:Optima'>Change Handler </span></span>field in the Property inspector withthe name of a function. In our example, we have called it <span class=Code><spanstyle='font-family:Courier'>change. </span></span>This function will run everytime the user changes the currently selected item in the list box. To enablemultiple selections, you should also set <span class=ScreenText><spanstyle='font-family:Optima'>Select Multiple </span></span>to <span class=Code><span style='font-family:Courier'>true. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=456 height=117src="../png/0586-dict5-29.png"></p><p class=MsoBodyText><b></b></p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Definethe function itself. In this listing (below), we are simply displaying theselected indexes array (<span class=Code><span style='font-family:Courier'>selectionArray </span></span>)in a text field, but the function can also (and usually does) include the codethat actually responds to the change. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functionchange(component) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    selectionArray =component.getSelectedItems(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    option_txt.text = selectionArray; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Note that when you use an array in this way (we haveequated <span class=Code><span style='font-family:Courier'>selectionArray </span></span>to another array that is returned bythe method) you do not have to define <span class=Code><span style='font-family:Courier'>selectionArray </span></span>asa new array via the <span class=ImportantWord><span style='font-family:Helvetica'>ArrayConstructor. </span></span>Neither do we have to define a separate <spanclass=Code><span style='font-family:Courier'>Object </span></span>object foreach index array element.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The following function <span class=Code><spanstyle='font-family:Courier'>change </span></span>will display the full selection array in a text field called <spanclass=Code><span style='font-family:Courier'>option_txt. </span></span>You can also see this code working in the example file.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functionchange(component) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    option_txt.text = &quot;&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    selectionArray =component.getSelectedItems(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    for(arrayElement=0; arrayElement&lt;selectionArray.length; arrayElement++) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        option_txt.text += &quot;\nElement&quot;+arrayElement+&quot;\n&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        for (property inselectionArray[arrayElement]) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>            option_txt.text +=property+&quot;: &quot;+selectionArray[arrayElement][property]+&quot;\n&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        } </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    } </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See also the example file <ahref="../fla/fcomponentgetselecteditems.fla">fcomponentgetselecteditems.fla</a>/ <ahref="../swf/fcomponentgetselecteditems.swf">fcomponentgetselecteditems.swf</a>.</p><h3>Tips and precautions</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>getSelectedItems </span></span>method returns an extra property called <span class=Code><spanstyle='font-family:Courier'>__ID__. </span></span>This property isundocumented. It holds the <span class=Code><span style='font-family:Courier'>index </span></span>of the items, and is the same valuethat is returned by <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.getSelectedIndices. </span></span></p>