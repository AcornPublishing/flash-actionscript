<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>&gt;&gt;&gt; bitwise unsigned right shift</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>c = a&gt;&gt;&gt; b; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where a and <span class=Code><span style='font-family:Courier'>b </span></span>are literal numbers or data elements holding numbervalues, or string values that can be directly converted to a number value (suchas <span class=Code><span style='font-family:Courier'>“5” </span></span>). <spanclass=Code><span style='font-family:Courier'>b </span></span>must be a positive integer. <spanclass=Code><span style='font-family:Courier'>c </span></span>will be returned as the integer part of<span class=Code><span style='font-family:Courier'>a / 2 </span></span><sup>b</sup>.The sign of the result will always be positive, although it will give incorrectanswers if you use a negative value for <span class=Code><spanstyle='font-family:Courier'>a, </span></span>because the conversion processuses unsigned binary and this is unable to handle negative numbers.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This operator is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 or later. </span></span>It works by:</p><p class=MsoBodyText>&nbsp;</p><p class=Numbered-Level1 style='margin-left:.5in;text-indent:-.25in;'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Converting <span class=Code><span style='font-family:Courier'>a </span></span>and <span class=Code><spanstyle='font-family:Courier'>b </span></span>to unsigned 32 bit binary. If <span class=Code><span style='font-family:Courier'>a </span></span>or <spanclass=Code><span style='font-family:Courier'>b </span></span>are floating point numbers, they willbe converted integers, so any decimal paces will be ignored. If <spanclass=Code><span style='font-family:Courier'>a </span></span>or <span class=Code><spanstyle='font-family:Courier'>b </span></span>are strings that can be directly converted to integer numbers (such as <spanclass=Code><span style='font-family:Courier'>“2.3” </span></span>) then theprocess will occur (to give <span class=Code><span style='font-family:Courier'>2 </span></span>).</p><p class=Numbered-Level1 style='margin-left:146.25pt;text-indent:-128.25pt;'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Shifting the bit pattern of <span class=Code><spanstyle='font-family:Courier'>a </span></span>to the right <span class=Code><span style='font-family:Courier'>b </span></span>times.</p><h3>Description</h3><p class=MsoBodyText>Shifting a bit pattern to the right each time is the sameas dividing the number it represents by 2 and then truncating the result todiscard the integer part. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>For example, bit shifting the value 7:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>7 in 32 bit binary is: <span class=Code><spanstyle='font-family:Courier'>00000000000000000000000000000111 </span></span></p><p class=MsoBodyText>Bit shifting 1 gives: <span class=Code><span style='font-family:Courier'>00000000000000000000000000000011 </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>11 </span></span>binary is <span class=Code><span style='font-family:Courier'>3, </span></span>or the integer part of <span class=Code><span style='font-family:Courier'>7/2, </span></span>or the integer part of <span class=Code-NEW><span style='font-family:"Optima Bold";border:none'><span style='border:none'>7 / 2 </span></span></span><b><sup>1</sup></b> </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Bit shifting again gives: 00000000000000000000000000000001</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>1 </span></span>is the integer part of <span class=Code><span style='font-family:Courier'>7 /(2 * 2), </span></span>or the integer part of <span class=Code-NEW><spanstyle='font-family:"Optima Bold";border:none'><span style='border:none'>7 / 2 </span></span></span><b><sup>2</sup></b> </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you used -7, then the conversion process will do thefollowing:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>-7 in 32 signed binary is: <span class=Code><spanstyle='font-family:Courier'>11111111111111111111111111111000 </span></span></p><p class=MsoBodyText>Assume this is <span class=ImportantWord><spanstyle='font-family:Helvetica'>unsigned </span></span>or <span class=Code><span style='font-family:Courier'>2 </span></span><sup>32</sup><spanclass=Code><span style='font-family:Courier'>-2 </span></span><sup>2</sup><spanclass=Code><span style='font-family:Courier'>-2 </span></span><sup>1</sup><spanclass=Code><span style='font-family:Courier'>-2 </span></span><sup>0</sup>  <span class=Code><span style='font-family:Courier'>= 4294967295 </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Because binary shifting is less processor intensive thandivision and <i>much </i>less processorintensive than working out <span class=Code><span style='font-family:Courier'>2 </span></span><sup>n</sup>by any other means, it can be useful in optimizing certain algorithms.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See also <span class=ImportantWord><span style='font-family:Helvetica'>&gt;&gt;&gt;=. </span></span></p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=184 valign=top style='width:137.95pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Bit shifted calculation </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.95pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Equivalent arithmetic calculation </span></span></p>  </td>  <td width=182 valign=top style='width:136.3pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=184 valign=top style='width:137.95pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = 8 &gt;&gt;&gt; 2; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>b = 20; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>b = b &gt;&gt;&gt; 1; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>c = &quot;50&quot; &gt;&gt;&gt; 3; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>d = -8 &gt;&gt;&gt; 2; </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=184 valign=top style='width:137.95pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = 8/2 </span></span><sup>2</sup><span  class=Code><span style='font-size:9.5pt;font-family:  Courier'> = 2 </span></span></p>  <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>b = 20/2 = 10 </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>c = 50/2 </span></span><sup>3</sup><span  class=Code><span style='font-size:9.5pt;font-family:  Courier'> = 50/8 = 6 </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>d = (2 </span></span><sup>32</sup><span  class=Code><span style='font-size:9.5pt;font-family:  Courier'>-8)/2 </span></span><sup>2 </sup></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  = 1073741822 </span></span></p>  </td>  <td width=182 valign=top style='width:136.3pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The use of a negative <span class=Code><span  style='font-family:Courier'>a </span></span>is not usually useful in Flash programming, unless you want to try your hand at creating encryption routines!</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=184 valign=top style='width:137.95pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = “cat” &gt;&gt;&gt; 2 </span></span></p>  </td>  <td width=184 valign=top style='width:137.95pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = 0 &gt;&gt; 2 </span></span></p>  </td>  <td width=182 valign=top style='width:136.3pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = 0 </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText> </p>  </td> </tr> <tr> <td width=184 valign=top style='width:137.95pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>a = 4 &gt;&gt;&gt; -2 </span></span></p>  </td>  <td width=184 valign=top style='width:137.95pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  </td>  <td width=182 valign=top style='width:136.3pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a = 0 </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The number of shifts must be positive. To shift in the other direction, use the <span class=Code><span style='font-family:Courier'>&lt;&lt;&lt; </span></span> operator.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>Bit shifting was a popular optimization trick used bygames programmers in the days when processors were very slow (typically 8 bit,1Mhz). The use of bit shifting instead of using base 10 arithmetic routines wasconsiderably faster. Such games are back in vogue, not only because retro is‘in’, but because Flash can emulate many of the old classic games (given somecareful ActionScript programming). One of the things to consider if you embarkon writing web based video games via ActionScript is using the same programmingshortcuts used the first time around, and bit shifting is one of them… thespirit of 1982 lives on.</p><h3>Tips and precautions</h3><p class=MsoBodyText>This form of the bitshift operator is much less usefulthan the signed bit shift operator, <span class=ImportantWord><spanstyle='font-family:Helvetica'>&gt;&gt;. </span></span>You are recommended touse that in preference because it can handle negative numbers. </p>