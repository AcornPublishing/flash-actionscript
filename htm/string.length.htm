<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>String.length</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>length= myString.length(); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>length </span></span>will have a number value representing the number of characters in the specifiedstring.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The object is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 and above. </span></span>There are <span class=ImportantWord><span style='font-family:Helvetica'>noknown issues </span></span>with any version of Flash that supports this object.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The read-only <span class=Code><span style='font-family:Courier'>length </span></span>property of the <span class=Code><spanstyle='font-family:Courier'>String </span></span>object returns the number ofcharacters in the specified string. If there are no characters the propertywill return <span class=Code><span style='font-family:Courier'>0. </span></span>This property applies not only to <span class=Code><span style='font-family:Courier'>String </span></span>object strings but to string literal values also.For example, the following code is an example using the <span class=Code><spanstyle='font-family:Courier'>length </span></span>property on a <spanclass=Code><span style='font-family:Courier'>String </span></span>object:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>str =new String(&quot;foobar&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(str.length);// sends 6 to the Output window </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… whereas this code will have the same result as above,but even though it is being used on a string literal:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>str =&quot;foobar&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(str.length);// sends 6 to the Output window </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This is because the <span class=Code><spanstyle='font-family:Courier'>length </span></span>property is generic. If youspecify a string literal on any generic method or property of the <spanclass=Code><span style='font-family:Courier'>String </span></span>object, theActionScript interpreter will automatically convert it to a temporary <spanclass=Code><span style='font-family:Courier'>String </span></span>object. Onceit has finished it will discard the temporary <span class=Code><spanstyle='font-family:Courier'>String </span></span>object and return the result.</p><h3>Description</h3><p class=MsoBodyText>This property returns the number of characters in thespecified string.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=336 valign=top style='width:252.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=228 valign=top style='width:171.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>if (userMessage.text.length &gt; 250) { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // alert user, the message is too long </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>} </span></span></p>  </td>  <td width=228 valign=top style='width:171.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>This code evaluates if the <span  class=Code><span style='font-family:Courier'>userMessage </span></span> instance of a text field has more than 250 characters. If it does the user should be alerted and asked to cull some characters until the message fits within the limits. Notice the <span class=Code><span style='font-family:Courier'>length </span></span> property is being used directly on a text field.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>In conjunction with other actions you could develop thismethod to be a typing tutor, providing you with information such as words typedper minute.</p><h3>Tips and precautions</h3><p class=MsoBodyText>None. </p>