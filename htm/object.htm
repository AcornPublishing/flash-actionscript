<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-GB>Object</span></h1><p class=MsoBodyText><span class=ImportantWord><span lang=EN-GBstyle='font-weight:normal'>This action is </span></span><span class=ImportantWord><spanlang=EN-GB style='font-family:Helvetica'>compatible with Flash 5 and later.</span></span><spanclass=ImportantWord><span lang=EN-GB style='font-weight:normal'> </span></span><spanclass=Code><span lang=EN-GB>With Flash MX and later releases, the </span></span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object </span></span><span class=Code><spanlang=EN-GB>object is the basic object type used to build other objects in Flash. </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object </span></span><span lang=EN-GB>object is a generic </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Object </span></span><span lang=EN-GB>data type.</span></p><h3><span lang=EN-GB>Description</span></h3><p class=MsoBodyText><span lang=EN-GB>Using the term “object” can get confusingbecause Flash uses the term in two ways. The first refers to anything on thestage that can be selected and which has a line and fill style associated withit. For example, a shape you draw on the stage is an object that can be selected.The second use of the term “object” is in the object-oriented programming sense(the same usage employed by ActionScript). Here, an object is a specific symbolor data type that has methods and properties that are unique. For example, amovie clip is an object because it has properties and methods, but a graphic isnot an object (it doesn’t have movies or methods unless you explicitly create anew object type for the graphic). </span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>There are several predefined objects inFlash (and you can always create your own objects). The well-known predefinedobjects Flash provides are <b>Key</b>, <b>Math</b>, <b>Mouse</b>, <b>MovieClip</b>,and <b>Selection</b>. In addition there are other objects that are created frompredefined classes. These use a constructor function. These objects are <b>Array</b>,<b>Boolean</b>, <b>Color</b>, <b>Date</b>, <b>Number</b>, <b>Object</b>, <b>Sound</b>,<b>String</b>, <b>XML</b>, and <b>XMLSocket</b>. </span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object </span></span><span lang=EN-GB>object is a generic object class used as the root class for ActionScript. Thismeans that all the other objects are built from the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object </span></span><span lang=EN-GB>object, adding more methods and properties to provide specific functionality.The </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Object </span></span><spanlang=EN-GB>object itself contains several methods, all of which are inheritedby other objects created from the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>Object </span></span><span lang=EN-GB>object:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object.addProperty </span></span>–adds a property to the object</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object.registerClass </span></span>– assigns a class to a movie clip</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object.toString </span></span>–returns the object value as a string</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object.unwatch </span></span>–removes the registration created by the <span class=Code><spanstyle='font-family:Courier'>watch() </span></span>method</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object.valueOf </span></span>–returns the object value</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object.watch </span></span>–registers a callback function invoked when a property changes</p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object </span></span><span lang=EN-GB>object also one property associated with it:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>Object._proto_ </span></span>– theprototype property of the constructor</p><h3><span lang=EN-GB>Examples and practical uses</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object </span></span><span lang=EN-GB>object is a primitive object for ActionScript and offers some primitivehandling methods and a prototype property for Flash Objects. To use any ofthese methods or constants, a new instance of the object must be created. Newobjects and instances are created with the </span><span class=ImportantWord><spanlang=EN-GB style='font-family:Helvetica'>new </span></span><span lang=EN-GB>keyword (see the </span><span class=ImportantWord><span lang=EN-GBstyle='font-family:Helvetica'>new </span></span><span lang=EN-GB>entry for moredetails): </span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myObject= new Object(); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>This creates an instance of the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>Object </span></span><spanlang=EN-GB>object called </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>myObject.</span></span><span lang=EN-GB> A valuecan be provided in parentheses to convert to an object, otherwise theconstructor creates a new object with no properties.</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Any methods or property of the new objectcan be called using its name after the object name, such as:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myObject._proto_; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myObject.toString(); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The subsequent </span><spanclass=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>Object.<i>name</i> </span></span><spanlang=EN-GB>entries show the properties and methods of the </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>Object </span></span><spanlang=EN-GB>object in more detail, and show examples of code. Also, see thesection on Object-Oriented Programming for more information about objects andtheir use.</span></p><h3><span lang=EN-GB>Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-GB>None.</span></p>