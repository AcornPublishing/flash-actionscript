<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="desref.css" type="text/css">
</head>

<h1>Mouse.removeListener</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Mouse.removeListener(listener_name)</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>listener_name</span></span>is the name of a mouse object.</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash Player 6 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>When a listener object has been registered using <spanclass=Code><span style='font-family:Courier'>the Mouse.addListener()</span></span>method it listens to all mouse movement, button presses and button releaseevents and is capable of responding to these events via if the correspondingcall-back functions (if defined). The <span class=Code><span style='font-family:Courier'>Mouse.removeListener()</span></span> method removes a mouse objectfrom the list of listeners for these events. The event call-backs will still bedefined, but the events needed to trigger them will no longer propagate to theobject.</p><h3>Description</h3><p class=MsoBodyText>A registered mouse objects has <span class=Code><spanstyle='font-family:Courier'>onMouseMove(),</span></span> <span class=Code><spanstyle='font-family:Courier'>onMouseDown()</span></span> and <span class=Code><spanstyle='font-family:Courier'>onMouseUp()</span></span> callbacks invoked whenmouse movements, button presses or button releases are relayed to theregistered objects. To remove a mouse object from the list of listeningobjects, and hence stop receiving the event notifications, use the <spanclass=Code><span style='font-family:Courier'>Mouse.removeListener()</span></span>method.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=293 valign=top style='width:219.75pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=139 valign=top style='width:104.45pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Additional explanation</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=139 valign=top style='width:1.45in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=293 valign=top style='width:219.75pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>Mouse.removeListener(myMouseobject)</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=139 valign=top style='width:104.45pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText>Removes <span class=Code><span style='font-family:Courier'>myMouseobject</span></span>  from the list of registered listeners.</p>  </td>  <td width=139 valign=top style='width:1.45in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:.05in'>Nothing happens<span class=Code>when a mouse  event occurs because the listener object is no</span><span class=Code>longer sent  any mouse everts to listen to.</span></p>  <p class=MsoBodyText style='margin-left:.05in'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Mouse.removeListener()</span></span>is used to de-register a listening Mouse object to detect mouse activities. AMouse object’s <span class=Code><span style='font-family:Courier'>onMouseMove(),onMouseDown()</span></span> and <span class=Code><span style='font-family:Courier'>onMouseUp()</span></span>methods are invoked for any listening Mouse object after the <span class=Code><spanstyle='font-family:Courier'>Mouse.addListener()</span></span> method has beenused to register the object. To stop the listening for an object called <spanclass=Code><span style='font-family:Courier'>myMouseObject</span></span>, issuethe command:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Mouse.removeListener(myMouseobject);</span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>Because the <span class=Code><span style='font-family:Courier'>Mouse.removeListener</span></span> method does not actually remove theevent handlers (it just de-registers the listener), the structure of thelistener object remains intact when you remove it from the listener list (iteffectively just becomes a normal <span class=Code><span style='font-family:Courier'>Object</span></span> object again). As soon as you add the object backto the list of registered listeners with <span class=Code><spanstyle='font-family:Courier'>Mouse.addListener</span></span>, the object willbegin working again as a listener without any further intervention.</p><p class=MsoBodyText style='margin-left:0in'>&nbsp;</p><p class=MsoBodyText>The following script will de-register <span class=Code><spanstyle='font-family:Courier'>myListener</span></span>when you press <spanclass=Code><span style='font-family:Courier'>remove_btn</span></span>,andwill re-install it as a listener if you press <span class=Code><spanstyle='font-family:Courier'>add_btn</span></span><i>. </i>You will not see the <spanclass=Code><span style='font-family:Courier'>“I heard you release the mouse!”</span></span>message if the listener is de-registered.</p><p class=MsoBodyText style='margin-left:0in'>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myListener= new Object();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Mouse.addListener(myListener);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myListener.onMouseUp= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    trace(&quot;I heard you release themouse!&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>add_btn.onRelease= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    Mouse.addListener(myListener);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>remove_btn.onRelease= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    Mouse.removeListener(myListener);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you think about it, that’s actually a very powerfultechnique if you switch between a number of listeners. For example, you couldhave a PhotoShop style menu for a draw program. The icon that allows you todraw circles registers a listener <span class=Code><span style='font-family:Courier'>drawCircle</span></span>to the Mouse, and de-registers allother listeners, including <span class=Code><span style='font-family:Courier'>drawSquare</span></span><i>.</i>When you click on the icon that allows you to draw a square, youde-register the circle drawing listener and re-instate the square drawinglistener. Whether you have the <span class=Code><span style='font-family:Courier'>drawSquare</span></span>listener registered or the <span class=Code><span style='font-family:Courier'>drawCircle</span></span>listener will have a profound effect on which event handler the mouseactually triggers, and this has a big effect; it’s the difference between yourcursor drawing circles and squares!</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This functionality is doing something very subtle; it is <i>steeringthe mouse events to the desired recipient, </i>and all events are defined allthe time. In a more traditional set-up, you would have only one drawing toolactive at any one time, and would have to switch the callbacks in and out<i>.This is more complicated because there might be a lot of them per drawingfunction. </i>Using ‘event steering’ you only have one thing to change; thelistener you send the events to!</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Although the real purpose of Listeners is to propagate asingle event to a number of different Objects, (recall that Objects in Flash4/5 can only respond to their own individual events). This is less useful tothe Motion Graphics coder because all movie Clips have individual Mouse eventsin any case. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Movie clips do not allow you to steer Mouse events in thesame way as seen above though, and that is a big plus of listeners for themotion graphics UI designer (and if you think about it even further, itsactually the <i>reverse </i>of what Listeners are designed for!).</p>