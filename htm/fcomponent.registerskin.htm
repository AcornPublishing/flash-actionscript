<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-US>FComponent.registerSkinElement</span></h1><p class=MsoBodyText><span lang=EN-US>(This method is applicable to </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>FCheckBox.registerSkinElement</span></span><spanlang=EN-US>, </span><span class=Code><span lang=EN-US style='font-family:Courier'>FComboBox.registerSkinElement</span></span><spanlang=EN-US>, </span><span class=Code><span lang=EN-US style='font-family:Courier'>FListBox.registerSkinElement</span></span><spanlang=EN-US>, </span><span class=Code><span lang=EN-US style='font-family:Courier'>FPushButton.registerSkinElement</span></span><spanlang=EN-US>, </span><span class=Code><span lang=EN-US style='font-family:Courier'>FRadioButton.registerSkinElement</span></span><spanlang=EN-US>, </span><span class=Code><span lang=EN-US style='font-family:Courier'>FScrollBar.registerSkinElement</span></span><spanlang=EN-US> and </span><span class=Code><span lang=EN-US style='font-family:Courier'>FScrollPane.registerSkinElement</span></span><span lang=EN-US>.)</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>myComponent.registerSkinElement(symbol,styleMethod);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span lang=EN-US>Where </span><span class=Code><spanlang=EN-US style='font-family:Courier'>myComponent</span></span><span lang=EN-US>is acomponent instance, </span><span class=Code><span lang=EN-US style='font-family:Courier'>symbol</span></span><span lang=EN-US>is the name of a symbol (usually a movie clip) thatmakes up a part of the component graphics, and </span><span class=Code><spanlang=EN-US style='font-family:Courier'>styleMethod</span></span><span lang=EN-US>is themethod of the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>FStyleFormat</span></span><span lang=EN-US>object that you want toassociate the symbol with. </span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>This method is </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>compatiblewith Flash 6</span></span><span lang=EN-US>.</span></p><h3><span lang=EN-US>Description</span></h3><p class=MsoBodyText><span lang=EN-US>The default components allow you tochange the graphics that define how they look, and this process is called </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>skinning</span></span><spanlang=EN-US>.</span><span lang=EN-US> It isduring this process that you may have to use the </span><span class=Code><spanlang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> method. By registering your custom skin, you retain all thefeatures of the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>FStyleFormat</span></span><span lang=EN-US>object. </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US> allows the designer to make style changes to components, (such ascolor and text format changes). See also the entries for </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>FStyleFormat</span></span><spanlang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>Note that although you can skin any ofthe default components that ship with Flash as well as define the mappingbetween your new skins and </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>FStyleFormat</span></span><span lang=EN-US>, otherthird party components may not support either skinning or </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>To skin a component you:</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US>Design the replacement componentgraphics. </span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US>Once you have done this, separate yourdesign into individual movie clips that correspond to the movie clips you willfind in the </span><span class=ScreenText><span lang=EN-US style='font-family:Optima'>Flash</span></span><span class=ScreenText><spanlang=EN-US style='font-family:Optima'>UI</span></span><span class=ScreenText><spanlang=EN-US style='font-family:Optima'>Components</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>&gt; Component</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Skins</span></span><spanlang=EN-US>folder of the library. These individual clips are your </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>skins</span></span><spanlang=EN-US>. </span><span lang=EN-US>If youdo not want to make your skins compliant with </span><span class=Code><spanlang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US>, then you have finished. If you do, then the next two steps apply.</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US>Subdivide each skin into further subelements within each skin. These are your </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica'>skin elements</span></span><spanlang=EN-US>. </span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US>Register the new skin elements. Thisis done via the </span><span class=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><span lang=EN-US> method. In manycases, you will be able to retain the original </span><span class=Code><spanlang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> methods defined by Macromedia.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>You can see the process better by lookingat the default Macromedia components. For example, drag the scrollbar componentonto the stage. Looking in the Library, you will see that a folder called </span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Flash UIComponents</span></span><span lang=EN-US>is created. This contains the scrollbarcomponent and its assets. If you now open the </span><span class=ScreenText><spanlang=EN-US style='font-family:Optima'>Component</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>&gt;</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Skins</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>&gt;</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>FScrollBar</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Skins</span></span><spanlang=EN-US>sub-directory, you will see the individual default skins for the scrollbar. They willall be named with a ‘</span><span class=Code><span lang=EN-US style='font-family:Courier'>fsb_</span></span><span lang=EN-US>’ prefix. </span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US><img width=369 height=413src="../png/0586-dict5-52.png"> </span></p><p class=Picturereference>&nbsp;</p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>If you now look on the timeline of aparticular skin (say </span><span class=Code><span lang=EN-US style='font-family:Courier'>fsb_downArrow</span></span><span lang=EN-US>), you will see thefollowing:</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US><img width=187 height=168src="../png/0586-dict5-54.png"></span></p><p class=Picturereference>&nbsp;</p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>This skin is further subdivided into skin elements. You cannot see all ofthem immediately, and some of them are actually difficult to see, given thatthey are white. To combat this, you are recommended to temporarily change themovie background to a non-white color. The following diagram does this, andidentifies all the separate skin elements that make up the skin </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>fsb_downArrow</span></span><spanlang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>(You know when you have found all of theskin elements when the number of elements is equal to the number of </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> definitions that you see in the </span><span class=ScreenText><spanlang=EN-US style='font-family:Optima'>README</span></span><span lang=EN-US>layer. See below.)</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US><img width=557 height=226src="../png/0586-dict5-53.png"></span></p><p class=Picturereference>&nbsp;</p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>On the </span><span class=ScreenText><spanlang=EN-US style='font-family:Optima'>README</span></span><span lang=EN-US>layer of the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>fsb_downArrow</span></span><spanlang=EN-US> clip, you will see the following code:</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>component.registerSkinElement(arrow_mc,&quot;arrow&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>component.registerSkinElement(face_mc,&quot;face&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>component.registerSkinElement(shadow_mc,&quot;shadow&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>component.registerSkinElement(darkshadow_mc,&quot;darkshadow&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>component.registerSkinElement(highlight_mc,&quot;highlight&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier'>component.registerSkinElement(highlight3D_mc,&quot;highlight3D&quot;);</span></span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>These are the default </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> definitions. The first one associates the </span><span class=Code><spanlang=EN-US style='font-family:Courier'>arrow_mc</span></span><span lang=EN-US>skin element with the </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>FStyleFormat.arrow</span></span><span lang=EN-US>method. This means that when ActionScript sees this method, it will apply allcolor changes specified by it onto the </span><span class=Code><spanlang=EN-US style='font-family:Courier'>arrow_mc</span></span><span lang=EN-US>skin element. A similar connection is made for the other skin elements of </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>fsb_downArrow</span></span><spanlang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>If you have designed your new skinelements so that they have the same names as the default skin elements, then </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>you do notneed to change any of the code</span></span><span lang=EN-US>.</span><spanlang=EN-US>You only need to change the default </span><span class=Code><spanlang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> definitions if:</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><ul>  <li><span lang=EN-US style='font-family:Symbol'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span lang=EN-US>Your     replacement skin elements do not have all the skin elements of the default     skins. For example, the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>fsb_downArrow</span></span><spanlang=EN-US> has elements </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>highlight_mc</span></span><span lang=EN-US>, </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>highlight3D_mc</span></span><span lang=EN-US>, </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>darkshadow_mc</span></span><span lang=EN-US> and </span><span class=Code><spanlang=EN-US style='font-family:Courier'>shadow_mc</span></span><spanlang=EN-US>that are to do with faux 3D. If your replacement is for example an     organic style that doesn’t need drop shadows and highlights, then your skins     will not have the corresponding skin elements. You can therefore remove the     3D related </span><span class=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> definitions. Practical experience suggests that it is better to comment     unused definitions out rather than delete them. You may at a later date change     some or all of your graphics, and may want to re-instate some definitions.</span></li>  <li><span lang=EN-US style='font-family:Symbol'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span lang=EN-US>Your     replacement skin elements have differently named skin elements to the default     elements. You will have to change the default </span><span class=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><span lang=EN-US> associations to reflect     your new instance names.</span></li>  <li><span lang=EN-US style='font-family:Symbol'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span lang=EN-US>Your     replacement skin elements are not compliant with </span><span class=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><span lang=EN-US>. You can safely delete the     </span><span class=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><spanlang=EN-US> definitions. Practical experience suggests that it is better to comment     them out rather than delete them – you may at a later date want to make your     skins </span><span class=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US> compliant.</span></li></ul><h3><span lang=EN-US>Examples and practical uses</span></h3><p class=MsoBodyText><span lang=EN-US>When skinning components, it is usual tosimply use the default Macromedia </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>registerSkinElement</span></span><span lang=EN-US>definitions because they set up all the associations with </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US> for you. If you simply make skin elements that conform to theseassociations, you will end up with a skin design that can be used with </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US> in exactly the same way as the default skins provided byMacromedia. This is the recommended route.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica'>Note</span></span><span lang=EN-US> that becausethis reference only covers the default components that ship with Flash MX, wehave not considered the skinning of completely new components that you may wantto create from scratch. Neither have we considered altering third partycomponents so that they become </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>FStyleFormat</span></span><span lang=EN-US>compliant. The discussion above is, however, general enough to allow you toapply it to such situations.</span></p><h3><span lang=EN-US>Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US>When skinning the default component set,you do not have to skin all the components. You actually only have to skin thescrollbar, the check box, the radio button and the push button. The scrollpane, combo box and list box use the scrollbar, and will inherit any customskins you apply to it. </span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>To change the default font used by thecomponents, you should change the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>FLabel</span></span><span lang=EN-US>symbol found in the </span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Flash</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>UI</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Components</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>&gt;</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Component</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Skins</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>&gt;</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Global</span></span><spanclass=ScreenText><span lang=EN-US style='font-family:Optima'>Skins</span></span><spanlang=EN-US>folder of the Library. However, in general, you are better offkeeping the default font, and allowing the user to change it via the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>FStyleFormat.textFont</span></span><spanlang=EN-US>method.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>Subdividing skins into skin elements andregistering the elements with </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>registerSkinElement</span></span><span lang=EN-US>is optional. In doing so, you allow the skin to be further customized via stylechanges available through the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>FStyleFormat</span></span><span lang=EN-US>object. You should notethat creating skins that can be registered with </span><span class=Code><spanlang=EN-US style='font-family:Courier'>FStyleFormat</span></span><spanlang=EN-US> is a <i>much </i>longer designprocess than creating skins that are not (by a factor or of 5 -10), because youwill have to subdivide your skin design into many much smaller sub-elements.For practical design work, you should only consider creating skins that areregistered via </span><span class=Code><span lang=EN-US style='font-family:Courier'>registerSkinElement</span></span><span lang=EN-US> if:</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US>You will be making them available tothird parties, and need to create a general skin design that allows a largeamount of customization between individual users.</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol;'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US>You will be using them yourself frequently.</span></p><p class=MsoBodyText><span lang=EN-US>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-US>If neither these apply, then the time youspend in designing a </span><span class=Code><span lang=EN-US style='font-family:Courier'>FStyleFormat</span></span><span lang=EN-US> compliant set of skins maynot be cost effective in terms of time saved.</span></p>