<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>F<i>Component</i>.addItem</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier'>FComboBox.addItem </span></span>and <spanclass=Code><span style='font-family:Courier'>FListBox.addItem. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>MyComponent.addItem(label,data); </span></span></p><p class=MsoBodyText><span style='font-size:8.0pt;'>&nbsp;</span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>label </span></span>is an additional label that you want toadd to the end of the existing list of labels for a combo box or list box component.You can also add a <span class=Code><span style='font-family:Courier'>data </span></span>item. This second argument is optional.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>When adding list box or combo box components, you have topopulate the <span class=ScreenText><span style='font-family:Optima'>Labels </span></span>and <span class=ScreenText><spanstyle='font-family:Optima'>Data </span></span>fields in the Property inspector (as shown below for the combobox).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=329 height=111src="../png/0586-dict5-08.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=ScreenText><span style='font-family:Optima'>Labels </span></span>values define the selectable titlesthat will appear in the component at run time. For example, if you defined thelabels to be <span class=Code><span style='font-family:Courier'>horse, </span></span><span class=Code><span style='font-family:Courier'>mouse, </span></span><spanclass=Code><span style='font-family:Courier'>goat, </span></span><spanclass=Code><span style='font-family:Courier'>cat, </span></span><spanclass=Code><span style='font-family:Courier'>dog, </span></span><spanclass=Code><span style='font-family:Courier'>aardvark, </span></span>and <spanclass=Code><span style='font-family:Courier'>moose, </span></span>the combo boxwould look like this at runtime:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=120 height=118src="../png/0586-dict5-09.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=ScreenText><span style='font-family:Optima'>Data </span></span>field allows you to add a correspondingdata (literal) value that will be made available to the <span class=Code><spanstyle='font-family:Courier'>changeHandler </span></span>function whenever one of the labels is selected (see also <spanclass=ImportantWord><span style='font-family:Helvetica'>FComponent.setChangeHandler </span></span>).Adding data per label is optional – if you don’t enter one for a label, astring corresponding to the label will be returned. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>addItem </span></span>method allows you to do the same thing during runtime via ActionScript. You canadd additional labels/data, and also define all the labels from scratch.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=336 valign=top style='width:252.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myUI.addItem(“red”); </span></span></p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Adds a new label <span class=Code><span  style='font-family:Courier'>“red” </span></span>to a combo box or list box. It there are existing labels already defined, the new label will be added to the end of the list. When the user clicks on the new label, the value returned via the <span class=ImportantWord><span style='font-family:Helvetica'>Fcomponent.getValue </span></span>method will be the string value <span  class=Code><span style='font-family:Courier'>“red”. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=336 valign=top style='width:252.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myUI.addItem(“red”, 2); </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=204 valign=top style='width:153.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Adds a new label <span class=Code><span  style='font-family:Courier'>“red” </span></span>to a combo box or list box. It there are existing labels already defined, the new label will be added to the end of the list. When the user clicks on the new label, the value returned via the <span class=ImportantWord><span style='font-family:Helvetica'>Fcomponent.getValue </span></span>method will be the number value <span  class=Code><span style='font-family:Courier'>2. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>addItem </span></span>method allows you to add additional labels (and optionally, associated data) toa combo box or list box. To make this method work as designed you also need tohave:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Giventhe component an instance name.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Giventhe component an <span class=Code><span style='font-family:Courier'>onChange </span></span>handler (which you can do via <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.setChangeHandler </span></span>) that uses the <spanclass=ImportantWord><span style='font-family:Helvetica'>FComponent.getValue </span></span>method to retrieve the last clickedlabel/data value. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See also the files <ahref="../fla/fcomponentadditem.fla"><spanstyle='font-family:Optima'>fcomponentadditem.fla</span></a> and <ahref="../swf/fcomponentadditem.swf"><spanstyle='font-family:Optima'>fcomponentadditem.swf</span></a>. This shows how toset up a basic combo box from scratch using <span class=Code><spanstyle='font-family:Courier'>FComboBox.addItem </span></span>and <spanclass=Code><span style='font-family:Courier'>FComboBox.setChangeHandler. </span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>You will not see the results of a change in the componentunless you assign and create an <span class=Code><span style='font-family:Courier'>onChangeHandler. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Note that the <span class=Code><span style='font-family:Courier'>addItem </span></span>method makes no check to see whether or not alabel/data field with the same values already exists, so it is up to your codeto make sure this never happens. You could end up with label values beingoverwritten if you don’t check.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you want to insert a new label/data at a position otherthan at the end, use <span class=ImportantWord><span style='font-family:Helvetica'>Fcomponent.AddItemAt. </span></span></p>