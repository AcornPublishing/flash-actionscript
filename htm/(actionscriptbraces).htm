<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>{} ActionScript braces</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>{ </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//codeblock </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>//codeblock </span></span>is a number of lines of code.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Compatible with <span class=ImportantWord><spanstyle='font-family:Helvetica'>Flash 5 and above. </span></span>ActionScriptbraces or ‘curly brackets’ are <span class=ImportantWord><spanstyle='font-family:Helvetica'>used to define a code block. </span></span>Youneed to add such braces whenever you use conditional or looping structures. Youalso use them to define event handler routines, and functions. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>A number of actions require you to use code blocks; referalso to (the following looping structures) <span class=ImportantWord><spanstyle='font-family:Helvetica'>for, </span></span><span class=ImportantWord><spanstyle='font-family:Helvetica'>while, </span></span><span class=ImportantWord><spanstyle='font-family:Helvetica'>do… while, </span></span>(the followingconditional structures)<spanclass=ImportantWord><span style='font-family:Helvetica'>if, </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>then, </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>elseif, </span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>case, </span></span>(the function definition)<span class=ImportantWord><spanstyle='font-family:Helvetica'>function, </span></span>(the followingmiscellaneous actions) <span class=ImportantWord><span style='font-family:Helvetica'>with, </span></span><span class=ImportantWord><span style='font-family:Helvetica'>for… in, </span></span><span class=ImportantWord><span style='font-family:Helvetica'>ifFrameLoaded, </span></span>(the following event definitions) <span class=ImportantWord><spanstyle='font-family:Helvetica'>on(mouseEvent) </span></span>and <spanclass=ImportantWord><span style='font-family:Helvetica'>onClipEvent. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Braces can also be used as a short hand way of definingproperties of <span class=ImportantWord><span style='font-family:Helvetica'>Object </span></span>objects. See the entry for <span class=ImportantWord><span style='font-family:Helvetica'>{} object initializer </span></span>(below), which covers this separate usage.</p><h3>Description</h3><p class=MsoBodyText>The ActionScript braces are used to group a set of actionstogether for associating them with a single loop, conditional, event handler orfunction definition. The examples below include one of each type of usage. </p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=324 valign=top style='width:243.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=228 valign=top style='width:171.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Notes</p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>for (i=0; i&lt;=9; i++) { </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  diagnostic = &quot;I am loop number &quot;+i; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  trace(diagnostic); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  </td>  <td width=228 valign=top style='width:171.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Looping block. </span></span>The second and third lines are enclosed by a <span  class=Code><span style='font-family:Courier'>{..} </span></span>pair, and this defines them as the actions that should be executed as part of the loop. The <span  class=Code><span style='font-family:Courier'>for </span></span>action will execute the block 10 times (0 to 9).</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Note that <span class=Code><span style='font-family:  Courier'>{} </span></span>braces do not normally have a <span class=Code><span  style='font-family:Courier'>; </span></span>after them. The exception to this rule is the <span class=Code><span style='font-family:Courier'>} </span></span> that finishes a <span class=ImportantWord><span style='font-family:Helvetica'>function block </span></span>(see below).</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>x = 6; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>if (x&gt;5) { </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  y = x+10; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  z = 5; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>} else { </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  y = 0; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  z = 0; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>message = x+&quot; &quot;+y+&quot; &quot;+z </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>trace(message); </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=228 valign=top style='width:171.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><b>Conditional block</b>. Lines 3, 4 and 6, 7 are two separate blocks. Either one or the other will be executed depending on the value of variable <span class=Code><span  style='font-family:Courier'>x.</span></span><i></i></p>  <p class=MsoBodyText> </p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>double = function (x) { </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  var x; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  return 2*x; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>}; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>trace(double(4)); </span></span></p>  </td>  <td width=228 valign=top style='width:171.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Function block. </span></span>The second and third lines are part of the function <span  class=Code><span style='font-family:Courier'>double.</span></span><i> </i>The code block is executed every time the function is called.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>You should note that it is good practice to add a ‘<span  class=Code><span style='font-family:Courier'>; </span></span>’ after the <span  class=Code><span style='font-family:Courier'>} </span></span>brace that finishes defining a function block. This is purely a JavaScript convention that has been inherited by ActionScript. Flash adds them for you if you auto format, although their omission is not a syntax error.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>on (press) { </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  x = x+1; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  diagnostic = &quot;you have pressed me </span></span><span  class=Code><span class=Code><span style='font-size:9.5pt;font-family:Courier'>&quot;+x+&quot; times!&quot;; </span></span></span></p><span  class=Code>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>  trace(diagnostic); </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>} </span></span></p>  <p class=MsoPlainText>&nbsp;</p>  </span></td>  <td width=228 valign=top style='width:171.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><b>Event handler</b>. The code in lines 2-4 will be run every time the symbol that this script is attached to is pressed.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>myDetails = {name:&quot;Sham B&quot;, age:35}; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>myDetails = new Object(); </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>myDetails.name = &quot;Sham B&quot;; </span></span></p>  <p class=MsoPlainText><span class=Code><span style='font-size:9.5pt;font-family:Courier'>myDetails.age = 35; </span></span></p>  <p class=MsoPlainText>&nbsp;</p>  <p class=MsoPlainText>&nbsp;</p>  </td>  <td width=228 valign=top style='width:171.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><b>Object Initializer</b>. The first listing (single line) is a short hand version of the second listing below it. Both will produce the same result. For fuller coverage of the object initializer see the <span class=ImportantWord><span  style='font-family:Helvetica'>{} object initializer </span></span>entry below.</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>ActionScript braces are a part of the standard syntax of anumber of actions. Refer to particular actions specifically from the list abovefor further details on specific use.</p><h3>Tips and precautions</h3><p class=MsoBodyText>Although the Flash environment will automatically formatyour code blocks to include <span class=Code><span style='font-family:Courier'>{} </span></span>braces around code blocks, you do not need to add them if your code block isonly one line long. For example, if you enter the following script (in ExpertMode):</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(x&gt;10) x = 10 </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… it will be accepted with no syntax errors. If you hitthe <span class=ImportantWord><span style='font-family:Helvetica'>auto format </span></span>button, the script will be formattedto look like this:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(x&gt;10) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> x = 10; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>In addition, some coders prefer the more spaced out styleseen below:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(x&gt;10) </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>{ </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> x = 10; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you enter braces in this style and want to keep themthis way, don’t use auto format!</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Finally, the brace is not an action or operator. It isused by the ActionScript parser during compilation, but the final SWF file doesn’tinclude it at all. When testing (in Flash MX or above), you must not attachbreak points to a brace (because this would leave Flash with nothing to attachthe breakpoint to in the final SWF. Doing this in error will cause thebreakpoint to be ignored and the following message will be seen in the Outputwindow:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=731 height=113src="../png/0586-dict2-01.png"></p>