<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="desref.css" type="text/css">
</head>

<h1>Mouse.onMouseUp</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>MouseObject.onMouseUp</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>MouseObject</span></span>is the name of a mouse object.</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash Player 6 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>When a Mouse object has been registered using <spanclass=Code><span style='font-family:Courier'>the Mouse.addListener()</span></span>method the<span class=Code><span style='font-family:Courier'> onMouseUp()</span></span>eventhandler is invoked whenever a pressed mouse button is released. </p><h3>Description</h3><p class=MsoBodyText>When a mouse button is pressed, the <span class=Code><spanstyle='font-family:Courier'>onMouseDown()</span></span>event handler associatedwith each Mouse listener is invoked. When that button is released, the <spanclass=Code><span style='font-family:Courier'>onMouseUp()</span></span> event isinvoked. Mouse listeners are registered to listen for these events using <spanclass=Code><span style='font-family:Courier'>Mouse.addListener().</span></span>When a mouse button release is detected, all registered mouse events areinformed of the event, and the <span class=Code><span style='font-family:Courier'>onMouseUp()</span></span>callback in each event (if defined) is invoked. There can be an unlimitednumber of registered mouse listeners, all with these methods associated withthem. </p><h3>Examples and practical uses</h3><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Mouse.onMouseUp()</span></span>is a method defined when a Mouse object is instantiated. The method is reallyan event handler, as every time a mouse button release is detected, the eventis relayed to the mouse object and the <span class=Code><span style='font-family:Courier'>onMouseUp()</span></span> method is invoked. In order to receive theevent notification, the mouse object has to be registered to listen from theseevents using the <span class=Code><span style='font-family:Courier'>Mouse.addListener()</span></span>method. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The procedure to set up a Mouse listener that responds tothis event is as follows:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Createan <span class=Code><span style='font-family:Courier'>Object</span></span>object that you want to use as a listener (all listeners have to be <spanclass=Code><span style='font-family:Courier'>Object</span></span> objects sothat they can inherit the appropriate listener methods; if you try to usenormal variables, the listener will not gain any methods). This occurs on line1 of the listing.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Next,you register the Object as a listener to the Mouse object (line 2).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>All the methods of Mouse listeners (<span class=Code><spanstyle='font-family:Courier'>onMouseUp</span></span><span class=Code>, </span><spanclass=Code><span style='font-family:Courier'>onMouseDown</span></span><spanclass=Code>,</span><span class=Code><span style='font-family:Courier'>onMouseMove</span></span>)are now available through the object <span class=Code><span style='font-family:Courier'>myListener</span></span><i>. </i>The code sets up a function torespond to the onMouseUp event via a callback function.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText style='margin-left:32.2pt'><span class=Code><spanstyle='font-family:Courier'>myListener = new Object();</span></span></p><p class=MsoBodyText style='margin-left:32.2pt'><span class=Code><spanstyle='font-family:Courier'>Mouse.addListener(myListener);</span></span></p><p class=MsoBodyText style='margin-left:32.2pt'><span class=Code><spanstyle='font-family:Courier'>myListener.onMouseUp = function() {</span></span></p><p class=MsoBodyText style='margin-left:32.2pt'><span class=Code><spanstyle='font-family:Courier'>   trace(&quot;I heard you release the mouse!&quot;);</span></span></p><p class=MsoBodyText style='margin-left:32.2pt'><span class=Code><spanstyle='font-family:Courier'>};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Usually you will also define <span class=Code><spanstyle='font-family:Courier'>onMouseMove() </span></span>and <span class=Code><spanstyle='font-family:Courier'>onMouseDown()</span></span> methods at the sametime. The <span class=Code><span style='font-family:Courier'>onMouseDown()</span></span>method will be invoked when the mouse button is pressed, and when the mouse buttonis released the <span class=Code><span style='font-family:Courier'>onMouseUp()</span></span>method will be invoked. For quick mouse clicks both event handlers will beinvoked in sequence. You do not need to have both event handler methods definedif there is to be no action connected to a mouse press or release for thatobject.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>To stop a mouse event receiving and acting upon mouseevents such as button presses, remove the mouse object from the list oflisteners using <span class=Code><span style='font-family:Courier'>Mouse.removeListener().</span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>Although there are no limits to the number of Mouseobjects that can respond to button or movement activity after being registered<spanclass=Code><span style='font-family:Courier'>,</span></span> registering toomany objects can cause slow response from Flash. The code inside the <spanclass=Code><span style='font-family:Courier'>onMouseUp()</span></span> methodwill be executed line by line for each registered mouse event, so some delaymay be caused when long methods or many registered objects are involved. Eachregistered Mouse object should have their <span class=Code><spanstyle='font-family:Courier'>onMouseMove(), onMouseDown()</span></span> and <spanclass=Code><span style='font-family:Courier'>onMouseUp()</span></span> methodsdefined.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you want to respond to mouse events to control somefeature of a movie clip, you are better off simply using the <spanclass=ImportantWord><span style='font-family:Helvetica'>MovieClip.onMouseUp</span></span>,<span class=ImportantWord><span style='font-family:Helvetica'>MovieClip.onMousedown</span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>MovieClip.onMouseMove</span></span>events, and you can do this without having to set up a listener. See also theentries for these events.</p>