<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>F<i>Component</i>.getData</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier'>FRadioButton.getData. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>a =myComponent.getData(); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myComponent </span></span>is a radio button instance. The datavalue of the last selected radio button in a radio button group will bereturned and stored as the variable <span class=Code><span style='font-family:Courier'>a. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>Before you can use this method, you need to have aproperly set up radio button group. Radio buttons are usually set up as groups,and you can only have one button selected at any time. The followingdescription briefly shows how to set up a group:</p><p class=MsoBodyText>&nbsp;</p><p class=Numbered-Level1>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;</span>Place three radio buttons on the stage as shown:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=112 height=96src="../png/0586-dict5-10.png"></p><p class=MsoBodyText>&nbsp;</p><p class=Numbered-Level1>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;</span>Name the instances (from top to bottom) <span class=Code><spanstyle='font-family:Courier'>button1 </span></span>to <span class=Code><spanstyle='font-family:Courier'>button3. </span></span>For <span class=Code><spanstyle='font-family:Courier'>button1, </span></span>fill out properties as shown (via the Property inspector):</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ScreenText><span style='font-family:Optima'>Label </span></span>= <spanclass=Code><span style='font-family:Courier'>yes </span></span></p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ScreenText><span style='font-family:Optima'>Initial State </span></span>=<span class=Code><span style='font-family:Courier'>false </span></span></p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ScreenText><span style='font-family:Optima'>Data </span></span>= <spanclass=Code><span style='font-family:Courier'>0 </span></span></p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ScreenText><span style='font-family:Optima'>LabelPlacement </span></span>= <span class=Code><span style='font-family:Courier'>right </span></span></p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=ScreenText><span style='font-family:Optima'>ChangeHandler </span></span>=<span class=Code><span style='font-family:Courier'>radioHandler </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=397 height=110src="../png/0586-dict5-11.png"> </p><p class=MsoBodyText>&nbsp;</p><p class=Numbered-Level1>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;</span>Do the same for <span class=Code><span style='font-family:Courier'>button2 </span></span>and <span class=Code><span style='font-family:Courier'>button3 </span></span>except:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Givethem instance names <span class=Code><span style='font-family:Courier'>button2 </span></span>and <span class=Code><spanstyle='font-family:Courier'>button3.</span></span><span class=Code></span></p><p class=Bullet-Level2><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Givethem <span class=ScreenText><span style='font-family:Optima'>Data </span></span>values of <span class=Code><spanstyle='font-family:Courier'>1 </span></span>and <span class=Code><spanstyle='font-family:Courier'>2. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The buttons will now look like this:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=78 height=65src="../png/0586-dict5-12.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Finally, add the following code on the same frame as thebuttons:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functionradioHandler(component) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    message = &quot;you just selected&quot;+component.getData(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    trace(message); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The function is the <span class=Code><spanstyle='font-family:Courier'>changeHandler </span></span>we specified earlier,and this will run every time we change the currently selected radio button.Within this function you can see how the <span class=Code><spanstyle='font-family:Courier'>getData </span></span>method is used – it retrievesthe data associated with the newly selected radio button.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This example shows the standard use of <span class=Code><spanstyle='font-family:Courier'>getData </span></span>; you use it in the <spanclass=Code><span style='font-family:Courier'>changeHandler </span></span>function to find out the currently selected button. Although you can use aframe based polling scheme (whereby you look at the <span class=Code><spanstyle='font-family:Courier'>getData </span></span>value only when you need it),the event driven way of doing it has far less potential pitfalls, and you arestrongly recommended to use it in preference.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>See also <ahref="../fla/fcomponentgetdata.fla"><spanstyle='font-family:Optima'>fcomponentgetdata.fla</span></a> and <ahref="../swf/fcomponentgetdata.swf"><spanstyle='font-family:Optima'>fcomponentgetdata.swf</span></a>.</p><h3>Examples and practical uses</h3><p class=MsoBodyText>The example shown above shows the skeleton code of thestandard way of reading the value of a radio button group via an event drivenscheme. It is the recommended way of using <span class=Code><spanstyle='font-family:Courier'>FRadioButton.getData. </span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>If you’re happy to use the label values rather than aseparate data field, you should consider using <span class=ImportantWord><spanstyle='font-family:Helvetica'>FComponent.getValue. </span></span>The <spanclass=Code><span style='font-family:Courier'>getData </span></span>method ispotentially more flexible, because you can assign numeric values rather thanstrings, and numbers are easier to work with when using code that incorporates <spanclass=ImportantWord><span style='font-family:Helvetica'>if…else if… else </span></span>or <span class=ImportantWord><spanstyle='font-family:Helvetica'>switch… case… default </span></span>actions.</p>