<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>MovieClip.globalToLocal</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip.globalToLocal(coords);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myMovieClip</span></span>is a movie clip instance and <span class=Code><span style='font-family:Courier'>coords</span></span>is an object that represents an <span class=Code><span style='font-family:Courier'>(x,</span></span><span class=Code><span style='font-family:Courier'>y)</span></span>point. <span class=Code><span style='font-family:Courier'>coords</span></span>should be an <span class=Code><spanstyle='font-family:Courier'>Object</span></span> object with properties <spanclass=Code><span style='font-family:Courier'>x</span></span>and <span class=Code><spanstyle='font-family:Courier'>y</span></span><span class=Code>.</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash 5 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.globalToLocal()</span></span><spanclass=Code>method </span>converts global (stage) coordinates to local (movie clip)coordinates. It is useful when using the drawing API, or when creatinganimations in embedded timelines. In both cases, it is sometimes useful to knowwhat a point’s coordinates are with respect to the stage.</p><h3>Description</h3><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.globaltoLocal(point);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… converts a point on the stage to the same point withrespect to the registration point of <span class=Code><span style='font-family:Courier'>myClip</span></span>. Thatsounds like gobbledygook in words, but it’s much simpler to understand inpictures.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Suppose that you create a movie clip as follows:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;myClip&quot;,0);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This movie clip is created at position <span class=Code><spanstyle='font-family:Courier'>0</span></span>,<span class=Code><spanstyle='font-family:Courier'>0</span></span> on the stage, so the global (stage)coordinates are the same as the local (<span class=Code><span style='font-family:Courier'>myClip</span></span>) coordinates. If you placed a dot at point (<spanclass=Code><span style='font-family:Courier'>50</span></span>, <spanclass=Code><span style='font-family:Courier'>50</span></span>) on <spanclass=Code><span style='font-family:Courier'>_root</span></span>, and did thesame thing on the timeline of <span class=Code><span style='font-family:Courier'>myClip</span></span>,they would be in the same position when you looked at the final SWF(bellow, left). </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you now moved <span class=Code><span style='font-family:Courier'>myClip</span></span>:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip._x+=25;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip._y+=25;</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>… this would have the effect of also moving theregistration point of <span class=Code><span style='font-family:Courier'>myClip</span></span>,and with it the local coordinate system of <span class=Code><spanstyle='font-family:Courier'>myClip</span></span>. If you placed a dot at (<span class=Code><spanstyle='font-family:Courier'>60</span></span>, <span class=Code><spanstyle='font-family:Courier'>60</span></span>) on <span class=Code><spanstyle='font-family:Courier'>myClip</span></span>,it would be at (<spanclass=Code><span style='font-family:Courier'>60+25</span></span>, <spanclass=Code><span style='font-family:Courier'>60+25</span></span>) = (<spanclass=Code><span style='font-family:Courier'>85</span></span>, <spanclass=Code><span style='font-family:Courier'>85</span></span>) relative to <spanclass=Code><span style='font-family:Courier'>_root</span></span>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The two dots would no longer be in the same position; theyare at the same position relative to their timeline coordinates, but becausethe two timelines <span class=Code><span style='font-family:Courier'>_root</span></span>and <span class=Code><span style='font-family:Courier'>myClip</span></span>now have different coordinatesystems, the two points will be at different <span class=ImportantWord><spanstyle='font-family:Helvetica'>absolute</span></span> positions.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=400 height=196src="../png/0586-dict8-59.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.localToGlobal()</span></span>method can be used in two ways:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText style='margin-left:32.2pt;text-indent:-.25in;'><spanclass=ImportantWord><span style='font-family:Helvetica'>1.<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>UseMovieClip.localToGlobal directly</span></span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>&nbsp;</span></span></p><p class=MsoBodyText>If we create our point (<span class=Code><spanstyle='font-family:Courier'>50</span></span>,<span class=Code><spanstyle='font-family:Courier'>50</span></span>) as an <span class=Code><spanstyle='font-family:Courier'>Object</span></span> object and then transform itto the corresponding global coordinate object, we will be able to find outwhere on <span class=Code><span style='font-family:Courier'>myClip</span></span>we need to place the dot so that itis back over the dot in <span class=Code><span style='font-family:Courier'>_root</span></span>:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;myClip&quot;,0);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip._x+= 25;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip._y+= 25;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>point ={x:60, y:60};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.localToGlobal(point);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(point.x);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(point.y);</span></span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'> </span></span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'><img width=277 height=122src="../png/0586-dict8-62.png"></span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This converts the local coordinates of the point on <spanclass=Code><span style='font-family:Courier'>myClip</span></span>to global coordinates (orcoordinates of the point on <span class=Code><span style='font-family:Courier'>_root</span></span>).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Having all the point data in one coordinate system allowsus to see the difference between the point on <span class=Code><spanstyle='font-family:Courier'>_root</span></span> and the point on <spanclass=Code><span style='font-family:Courier'>myClip</span></span>without having to know where the twotimelines are in relation to each other in coordinate space. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText style='margin-left:32.2pt;text-indent:-.25in;'><spanclass=ImportantWord><span style='font-family:Helvetica'>2.<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><spanclass=ImportantWord><span style='font-family:Helvetica'>Find out the ‘offsetzero’ for MyClip</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You can fins out the difference in position between <spanclass=Code><span style='font-family:Courier'>_root</span></span> and <spanclass=Code><span style='font-family:Courier'>myClip</span></span>,and use that in all your subsequent animations:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;myClip&quot;,0);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip._x+= 25;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip._y+= 25;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>registration= {x:0, y:0};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.localToGlobal(registration);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(registration.x);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(registration.y);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This will output the following:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=277 height=122src="../png/0586-dict8-60.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>localToGlobal</span></span>method takes our object <span class=Code><span style='font-family:Courier'>registration</span></span>and returns the difference betweenthe point (<span class=Code><span style='font-family:Courier'>0</span></span>,<spanclass=Code><span style='font-family:Courier'>0</span></span>) on <spanclass=Code><span style='font-family:Courier'>_root</span></span> (<i>global zero</i>) and (<span class=Code><spanstyle='font-family:Courier'>0</span></span>,<span class=Code><spanstyle='font-family:Courier'>0</span></span>) on <span class=Code><spanstyle='font-family:Courier'>myClip</span></span> (<i>local zero</i>).</p><p class=MsoBodyText style='margin-left:0in'>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>x</span></span>,<spanclass=Code><span style='font-family:Courier'>y</span></span> properties of <spanclass=Code><span style='font-family:Courier'>registration</span></span>once they have been transformed by <spanclass=Code><span style='font-family:Courier'>localToGlobal</span></span>represent the <span class=ImportantWord><span style='font-family:Helvetica'>offsetzero</span></span><i>. </i>By subtractingthis value from any coordinates on <span class=Code><span style='font-family:Courier'>myClip</span></span>,you get the corresponding absolutecoordinates.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>So to move our point back so that it is in the sameposition as the point on <span class=Code><span style='font-family:Courier'>_root</span></span>we <i>subtract </i>the offset zero:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>(50-registration.x,50-registration.y) = (25, 25)</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Using an offset zero has two advantages:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText style='margin-left:50.2pt;text-indent:-.25in;'><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>We can do the reverse transform (‘<span class=Code><spanstyle='font-family:Courier'>globalTolocal</span></span>’) without having to use<span class=Code><span style='font-family:Courier'>MovieCliplocalToGlobal()</span></span>.</p><p class=MsoBodyText style='margin-left:50.2pt;text-indent:-.25in;'><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span>We don’t have to keep using either method once we knowthe offset value, something that will speed up any 2D or 3D vector/fill engineyou are creating within Flash.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Although this method is relatively easy, its one of thosethings that still has the capability to make your head hurt, and you lose trackof it all if you look up for more than ten seconds (yeah, we know, it evenhappens to us!), so there is a full animated example in the next section; don’tworry if you’re starting to get a little uptight!</p><h3>Examples and practical uses</h3><p class=MsoBodyText><span class=Code>This method is useful in a number</span><span class=Code>of advanced applications:</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Youare moving movie clips around, but want some of the embedded movie clips tostay in the same place relative to <span class=Code><span style='font-family:Courier'>_root</span></span> (effectively making them seem to stay still). Youwould want something like this to happen if you were creating some scrolleffects (such as the game ‘Defender’, where the terrain needs to scroll, butthe player ship needs to stay still relative to the direction of scroll).</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Youwant to use the global mouse position at all times, irrespective of where thecurrent timeline you are working in actually is relative to global (<spanclass=Code><span style='font-family:Courier'>0</span></span>,<span class=Code><spanstyle='font-family:Courier'>0</span></span>). Although you may not appreciatethis is important, you will soon find out why it is if you try to create adrawing application of any complexity in Flash. If every point you create usingthe drawing API is relative to its own timeline your code very quickly losesthe ability to know where anything is relative to anything else…</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Understandingwhat Einstein meant when he said ‘Everything is relative’ in his General Theoryof Relativity, and how much it still makes peoples heads hurt 80 years on,despite being based on a simple observation.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The example file for this entry has three parts. <ahref="../fla/mcglobaltolocala.fla">mcglobaltolocala.fla</a> (<ahref="../swf/mcglobaltolocala.swf">mcglobaltolocala.swf</a>) has the following listing. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>DrawCursor= function () {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    cursor.x = _root._xmouse;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    cursor.y = _root._ymouse;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.clear();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineStyle(0, 0x000000, 100);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.moveTo(cursor.x-cursor.size,cursor.y);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineTo(cursor.x+cursor.size,cursor.y);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.moveTo(cursor.x,cursor.y-cursor.size);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineTo(cursor.x,cursor.y+cursor.size);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    updateAfterEvent();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;vectorCursor&quot;,0);</span></span></p><p class=MsoBodyText><span class=Code-NEW><span style='font-family:"Optima Bold";border:none'><span style='border:none'>//Mouse.hide();</span></span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor= new Object();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.x= 0;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.y= 0;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.Size= 20;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>vectorCursor.onMouseMove= drawCursor;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursorPoint= {x:0, y:0};</span></span> </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This is <i>almost</i> the code to replace the mouse cursorwith a custom crosshair cursor that is drawn using the drawing API. To do thisyou would have to hide the real cursor with <span class=Code><spanstyle='font-family:Courier'>Mouse.hide()</span></span>, but we have commentedthat line out (line 13) to better show what is happening. If you actually wantto re-use this FLA to create a crosshair cursor, simply uncomment it and itwill work:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=204 height=162src="../png/0586-dict8-63.png"></p><p class=MsoBodyText style='margin-left:0in'>&nbsp;</p><p class=MsoBodyText>Assuming that you leave the <span class=Code><spanstyle='font-family:Courier'>Mouse.hide()</span></span> line commented out, youwill see this;</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=204 height=162src="../png/0586-dict8-64.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You will see that the custom cursor and the originalcursor together, and this shows that they are always drawn at the sameposition.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The second file breaks this happy marriage by moving themovie clip that the cursor is drawn into (<span class=Code><spanstyle='font-family:Courier'>vectorCursor</span></span>) 50 pixels to the right(line 13 again):</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>DrawCursor= function () {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    cursor.x = _root._xmouse;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    cursor.y = _root._ymouse;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.clear();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineStyle(0, 0x000000, 100);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.moveTo(cursor.x-cursor.size,cursor.y);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineTo(cursor.x+cursor.size,cursor.y);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.moveTo(cursor.x,cursor.y-cursor.size);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineTo(cursor.x,cursor.y+cursor.size);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    updateAfterEvent();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;vectorCursor&quot;,0);</span></span></p><p class=MsoBodyText><span class=Code-NEW><span style='font-family:"Optima Bold";border:none'><span style='border:none'>vectorCursor._x += 50;</span></span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//Mouse.hide();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor= new Object();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.x= 0;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.y= 0;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.Size= 20;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>vectorCursor.onMouseMove= drawCursor;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursorPoint= {x:0, y:0};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This time, you will see that the two cursors are not atthe same position. The 50 pixel zero offset we have just added is causing thiserror. (See <a href="../fla/mcglobaltolocalb.fla">mcglobaltolocalb.fla</a> / <ahref="../swf/mcglobaltolocalb.swf">mcglobaltolocalb.swf</a>.)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=147 height=133src="../png/0586-dict8-65.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Assuming you need to keep this offset, you can fix thingswith the <span class=Code><span style='font-family:Courier'>MovieClip.globalToLocal</span></span>method. This is shown in the final file <a href="../fla/mcglobaltolocalc.fla">mcglobaltolocalc.fla</a>/ <a href="../swf/mcglobaltolocalc.swf">mcglobaltolocalc.swf</a>.</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>DrawCursor= function () {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    cursor.x = _root._xmouse;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    cursor.y = _root._ymouse;</span></span></p><p class=MsoBodyText><span class=Code-NEW><span style='font-family:"Optima Bold";border:none'><span style='border:none'>   this.globalToLocal(cursor);</span></span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.clear();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineStyle(0, 0x000000, 100);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.moveTo(cursor.x-cursor.size,cursor.y);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineTo(cursor.x+cursor.size,cursor.y);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.moveTo(cursor.x, cursor.y-cursor.size);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this.lineTo(cursor.x,cursor.y+cursor.size);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    updateAfterEvent();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createEmptyMovieClip(&quot;vectorCursor&quot;,0);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>vectorCursor._x+= 50;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//Mouse.hide();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor= new Object();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.x= 0;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.y= 0;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursor.Size= 20;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>vectorCursor.onMouseMove= drawCursor;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>cursorPoint= {x:0, y:0};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You can see the fix in line 4.</p><h3>Tips and precautions</h3><p class=MsoBodyText>None.</p>