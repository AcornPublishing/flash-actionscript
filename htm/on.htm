<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-GB>on</span></h1><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>on(event){ </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'> code; </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>} </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Where </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>event </span></span><span lang=EN-GB>isone of several mouse events and code is the statement(s) to be executed whenthe event is detected</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB>&nbsp; </span></span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-GBstyle='font-weight:normal'>This method is </span></span><span class=ImportantWord><spanlang=EN-GB style='font-family:Helvetica'>compatible with Flash 2 and later.</span></span><spanclass=ImportantWord><span lang=EN-GB style='font-weight:normal'> </span></span><spanclass=Code><span lang=EN-GB>Not all events are supported with Flash 2. </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>on() </span></span><span lang=EN-GB>method runs a mouse-event triggered set of statements.</span></p><h3><span lang=EN-GB>Description</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>on() </span></span><span lang=EN-GB>method deals with mouse specific events. The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>on() </span></span><span lang=EN-GB>method is an event handler used to monitor the mouse for a particular event. Ifthat event is detected, the statements inside the code block are executed. Theevents that can be monitored and the triggering conditions are:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>dragOut </span></span>– triggeredwhen the cursor is over a button, pressed, then dragged outside the button area</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>dragOver </span></span>– triggeredwhen the cursor is over the button, pressed, rolled outside the button area,then rolled back over the button area</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>keyPress(key) </span></span>–triggered when the specific key is pressed</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>press </span></span>– triggeredwhen a mouse button is pressed while the cursor is over a button</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>release </span></span>– triggeredwhen a mouse button is released while over a button</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>releaseOutside </span></span>–triggered when a mouse button is released while the cursor is outside thebutton, after the button was pressed</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>rollOut </span></span>– triggeredwhen the pointer rolls outside the button area</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>rollOver </span></span>– triggeredwhen the pointer rolls over a button</p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Whenever one of these events is detected,if an </span><span class=Code><span lang=EN-GB style='font-family:Courier'>on() </span></span><spanlang=EN-GB>method has been defined for that event the code inside that codeblock is executed.</span></p><h3><span lang=EN-GB>Examples and practical uses</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>on() </span></span><span lang=EN-GB>method is similar to the </span><span class=ImportantWord><span lang=EN-GBstyle='font-family:Helvetica'>onClipEvent() </span></span><span lang=EN-GB>method (see the entry for this method) except the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>on() </span></span><span lang=EN-GB>method is used to watch for mouse events. The event to be watched for isspecified in parentheses, followed by the code to be executed when the eventoccurs in a code block. For example, to watch for the event rollout (which istriggered whenever a mouse pointer rolls outside a button area) you wouldwrite:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>on(rollOut){ </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'> trace(&quot;The mouse is outside thearea!&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>} </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>You can add as many lines of code as youwant in the body of the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>on() </span></span><span lang=EN-GB>event handler.You can define an event handler for each event in the list above. There aremany other examples of using the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>on() </span></span><span lang=EN-GB>methodthroughout this book. </span></p><h3><span lang=EN-GB>Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>on() </span></span><span lang=EN-GB>method is used as a mouse event handler with many other actions. Event handlerscan be defined for as many (or as few) events as you want to watch for. Theevent handlers apply for the entire movie. </span><span class=ImportantWord><spanlang=EN-GB style='font-family:Helvetica'>As with the onClipEvent() method, mostobjects now have direct control over event handlers and should be used instead. </span></span><spanlang=EN-GB>See </span><span class=ImportantWord><span lang=EN-GBstyle='font-family:Helvetica'>onClipEvent() </span></span><span lang=EN-GB>formore information.</span></p>