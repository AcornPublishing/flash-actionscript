<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><span lang=EN-GB>Object.watch</span></h1><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myObject.watch(property, changefunction [, data]) </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>Where </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>myObject </span></span><span lang=EN-GB>is an </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Object </span></span><spanlang=EN-GB>instance, </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>property </span></span><span lang=EN-GB>is theobject <span class=Code>property</span> to watch, </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>changefunction </span></span><spanlang=EN-GB>is the callback function to call when the value of the propertychanges, and </span><span class=Code><span lang=EN-GB style='font-family:Courier'>data </span></span><spanlang=EN-GB>is any data to be passed to the callback function.</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB>&nbsp; </span></span></p><p class=MsoBodyText><span class=ImportantWord><span lang=EN-GBstyle='font-weight:normal'>This method is </span></span><span class=ImportantWord><spanlang=EN-GB style='font-family:Helvetica'>compatible with Flash 6 and later.</span></span><spanclass=ImportantWord><span lang=EN-GB style='font-weight:normal'> </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object.watch() </span></span><span lang=EN-GB>method lets you watch a property andexecute a function when the value of the property changes.</span></p><h3><span lang=EN-GB>Description</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object.watch() </span></span><span class=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>method </span></span><span lang=EN-GB>is used to monitor a property.When the value of that property changes, a callback function is executed. Ifthe watchpoint is successfully created, the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object.watch() </span></span><spanlang=EN-GB>method returns </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>true </span></span><span lang=EN-GB>; if thewatchpoint could not be created a </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>false </span></span><span lang=EN-GB>value isreturned. See the Examples and practical uses section for information oncallbacks.</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=252 valign=top style='width:189.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=165 valign=top style='width:123.45pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Additional Explanation </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=155 valign=top style='width:116.15pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  lang=EN-GB style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myObject.watch (&quot;myProp&quot;, myCallback); </span></span></p>  </td>  <td width=165 valign=top style='width:123.45pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>Defines a watchpoint for the </span><span class=Code><span lang=EN-GB style='font-family:  Courier'>myProp </span></span><span lang=EN-GB>property of </span><span  class=Code><span lang=EN-GB style='font-family:Courier'>myObject,</span></span><span  lang=EN-GB> and calls </span><span class=Code><span lang=EN-GB  style='font-family:Courier'>myCallback </span></span><span lang=EN-GB>when the value changes.</span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=155 valign=top style='width:116.15pt;border:none;border-bottom:  solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB>Returns  </span></span><span class=Code><span lang=EN-GB style='font-family:Courier'>true </span></span><span  class=Code><span lang=EN-GB>if watchpoint created successfully. </span></span></p>  </td> </tr> <tr> <td width=252 valign=top style='width:189.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>myObject.watch(myCallback); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=165 valign=top style='width:123.45pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span lang=EN-GB>No property to be watched is specified.</span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=155 valign=top style='width:116.15pt;border:none;border-bottom:  solid windowtext .5pt;background:  #D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  lang=EN-GB style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-GB>Examples and practical uses</span></h3><p class=MsoBodyText><span lang=EN-GB>The </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object.watch() </span></span><spanlang=EN-GB>method is used to watch a property for changes in value. The </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>Object.watch() </span></span><spanlang=EN-GB>method registers the property on a watchlist. If the property valuechanges, the callback function registered with the </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>Object.watch() </span></span><spanlang=EN-GB>method call is invoked and can contain any code you want. Thecallback function itself will hold the name of the object that called it. Thecallback itself has the format:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>callback(property, oldvalue, newvalue [, data]) </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>… where </span><span class=Code><spanlang=EN-GB style='font-family:Courier'>property </span></span><span lang=EN-GB>is the name of the property that caused the callback to be triggered, </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>oldvalue </span></span><spanlang=EN-GB>and </span><span class=Code><span lang=EN-GB style='font-family:Courier'>newvalue </span></span><span lang=EN-GB>are the old and new values forthe property respectively, and </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>data </span></span><span lang=EN-GB>is anyuser-supplied data passed to the function. </span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>For example, to define a watchpoint forthe </span><span class=Code><span lang=EN-GB style='font-family:Courier'>myProp </span></span><spanlang=EN-GB>property of </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>myObject,</span></span><span lang=EN-GB> and tocall </span><span class=Code><span lang=EN-GB style='font-family:Courier'>myCallback </span></span><spanlang=EN-GB>when the value changes, you would issue the command:</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-GB style='font-family:Courier'>myObject.watch(&quot;myProp&quot;, myCallback); </span></span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>You can register only a single watchpointon a property, and they cannot be getter/setter properties (see the </span><spanclass=ImportantWord><span lang=EN-GB style='font-family:Helvetica'>Object.addProperty() </span></span><spanlang=EN-GB>method). If you define another watchpoint on the same property, theold watchpoint is replaced with the new information.</span></p><h3><span lang=EN-GB>Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-GB>If you delete a property that has awatchpoint set using the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>Object.watch() </span></span><span lang=EN-GB>method, the watchpoint is not removed. A watchpoint can only be removed withthe </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Object.unwatch() </span></span><span lang=EN-GB>method.</span></p><p class=MsoBodyText><span lang=EN-GB>&nbsp;</span></p><p class=MsoBodyText><span lang=EN-GB>You should not watch dynamic propertieswith </span><span class=Code><span lang=EN-GB style='font-family:Courier'>Object.watch() </span></span><spanlang=EN-GB>method, such as the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>_x,</span></span><span lang=EN-GB> </span><spanclass=Code><span lang=EN-GB style='font-family:Courier'>_y,</span></span><spanlang=EN-GB> </span><span class=Code><span lang=EN-GB style='font-family:Courier'>_xmouse,</span></span><spanlang=EN-GB> and </span><span class=Code><span lang=EN-GB style='font-family:Courier'>_ymouse </span></span><span lang=EN-GB>properties. Because thesechange value frequently and the </span><span class=Code><span lang=EN-GBstyle='font-family:Courier'>Object.watch() </span></span><span lang=EN-GB>method needs to check values often, using a watchpoint on dynamic properties isinefficient.</span></p>