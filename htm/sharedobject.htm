<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>SharedObject</h1><p class=MsoBodyText><span class=Code>This object is addressed in Chapter 11.</span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>SharedObject </span></span><spanclass=Code>is a top level object that doesn’t need to be invoked by the </span><spanclass=Code><span style='font-family:Courier'>new </span></span><span class=Code>constructor. Itis used to store information on the client’s hard drive, much like a cookiestored by web browsers. </span>Shared objects are useful for storinginformation that you want to retrieve the next time the SWF file is accessed,such as a user’s name and details, game high scores, notes, etc. See also <spanclass=ImportantWord><span style='font-family:Helvetica'>SharedObject.getLocal, </span></span><span class=ImportantWord><span style='font-family:Helvetica'>SharedOject.data </span></span>and Chapter 12.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This object is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6 and above. </span></span>There is one known issue with the flush method of this object, see <spanclass=ImportantWord><span style='font-family:Helvetica'>SharedObject.flush </span></span>for more information.</p><h3>Description</h3><p class=MsoBodyText>This object is used to store data on a client’s machinethat can be retrieved, altered and re-saved as needed.</p><h3>Examples and practical uses</h3><h4><span class=Code><span style='font-size:9.5pt;'>General </span></span></h4><p class=MsoBodyText><span class=Code>A shared object is retrieved using the code below:</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySO =SharedObject.getLocal(“foo”); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySO.data.username= “fooBar”; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>mySO.data.count= 1; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(mySO.data.username); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(mySO.data.count); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code>The output from this code is shown below:</span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=184 height=128src="../png/0586-dict10-01.png"></p><p class=Picturereference>&nbsp; </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The structure of the shared object can also be exploredusing the debugger, as shown below:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=219 height=60src="../png/0586-dict10-02.png"></p><p class=Picturereference>&nbsp; </p><h3>Tips and precautions</h3><p class=MsoBodyText>Certain steps have been taken to ensure the vulnerabilityof shared objects is kept to a minimum, which makes shared objects very safe.It is important that you understand that it is safe to use shared objects sothe following is a list of these precautions:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span class=Code>The user controls how much information canbe stored by a specific domain. The user can also allow or disallow any data tobe stored from a certain domain. See </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>SharedObject.getSize </span></span><spanclass=Code>and </span><span class=ImportantWord><span style='font-family:Helvetica'>SharedObject.flush.</span></span><spanclass=Code></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span><span class=Code>Each shared object contains its own file(with the extension SOL). See </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>SharedObject.flush.</span></span><span class=Code></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code>Youcannot create an inter-domain shared object. This means a SWF file from thedomain </span><span class=Code><span style='font-family:Courier'>mydomain.com </span></span><spanclass=Code>cannot access a shared object from the domain </span><span class=Code><spanstyle='font-family:Courier'>yourdomain.com.</span></span><span class=Code> However, allSWF files within the same domain can access another shared object, provided thecorrect and </span><span class=Code><span style='font-family:Courier'>name </span></span><spanclass=Code>and </span><span class=Code><span style='font-family:Courier'>path </span></span>parameters are provide with the <span class=Code><span style='font-family:Courier'>getLocal </span></span>method. See <span class=ImportantWord><span style='font-family:Helvetica'>SharedObject.getLocal. </span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Thedata for each domain is stored in the application data folder, specific to eachoperating system.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>TheFlash Player controls the format of the information stored on the file system,not the developer.</p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></span>All information stored on the client machine isa binary serialization of the data, so it cannot be used for malicious attacks.</p>