<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"><h1><a name="_Toc15970106">XML.status</a></h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML.status</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myXML</span></span>is an instance of the <span class=Code><span style='font-family:Courier'>XML</span></span>object.</p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code>Compatible with </span><spanclass=ImportantWord><span style='font-family:Helvetica'>Flash Player 5 andlater</span></span><span class=Code>. </span>The <span class=Code><spanstyle='font-family:Courier'>XML.status</span></span> property indicates whetheror not an XML document has been successfully parsed. Values returned are integerswhich specifiy what error occurred during parsing. Related entries include <spanclass=ImportantWord><span style='font-family:Helvetica'>XML.load</span></span>,<span class=ImportantWord><span style='font-family:Helvetica'>XML.sendAndLoad</span></span>,<span class=ImportantWord><span style='font-family:Helvetica'>XML.onLoad</span></span>,<span class=ImportantWord><span style='font-family:Helvetica'>XML.loaded</span></span>,and<span class=ImportantWord><spanstyle='font-family:Helvetica'> XML.parseXML</span></span>.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.status</span></span><span class=ImportantWord><span style='font-family:Helvetica'>property</span></span>returns a numeric value indicating whether an XML document was successfullyparsed into an instance of the <span class=Code><span style='font-family:Courier'>XML</span></span>object, or if there were any errors during parsing. The numeric values returnedby the <span class=Code><span style='font-family:Courier'>XML.status</span></span>property are given below.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=206 valign=top style='width:154.85pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=182 valign=top style='width:136.85pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Additional Explanation</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=183 valign=top style='width:136.9pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=206 valign=top style='width:154.85pt;border:none;border-bottom:  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>myXML_xml = new XML();</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>myXML_xml.ignoreWhite = true;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>myXML_xml.load(&quot;xmldoc.xml&quot;);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>myXML_xml.onLoad = function() {</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>    trace(myXML_xml.status);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>};</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=182 valign=top style='width:136.85pt;border:none;border-bottom:  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'>0</p>  </td>  <td width=183 valign=top style='width:136.9pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:.1pt'><span class=Code>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:.1pt'><span class=Code>A return  value of zero indicates success of a load, so our </span><span  class=Code><span style='font-family:Courier'>xmldoc.xml</span></span><span  class=Code> is well formed and parsed without error.</span></p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.status</span></span>property indicates whether an XML document was successfully parsed into an <spanclass=Code><span style='font-family:Courier'>XML</span></span> object. The datacan be parsed if it is created using the XML constructor (<span class=Code><spanstyle='font-family:Courier'>myXML = new XML();</span></span>), loaded into themovie using the load or <span class=Code><span style='font-family:Courier'>sendAndLoad</span></span>methods, or parsed using <span class=Code><span style='font-family:Courier'>parseXML()</span></span>method. If it was, the <span class=Code><span style='font-family:Courier'>XML.status</span></span>property will return a code of zero. If there were problems parsing the XMLdocument, a numeric value is returned indicating the problem. Returned valuesfrom the <span class=Code><span style='font-family:Courier'>XML.status</span></span>property are:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>0</span></span><span lang=EN-US>  – parsing completed with no error</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-2</span></span><span lang=EN-US>  – the CDATA section is not properlyterminated</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-3</span></span><span lang=EN-US>  – the declaration is not properlyterminated</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-4</span></span><span lang=EN-US>  – the DOCTYPE declaration is notproperly terminated</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-5</span></span><span lang=EN-US>  – a comment is not properlyterminated</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-6</span></span><span lang=EN-US>  – an element is malformed</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-7</span></span><span lang=EN-US>  – out of memory error</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-8</span></span><span lang=EN-US>  – an attribute value is not properlyterminated</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-9</span></span><span lang=EN-US>  – a start tag does not have amatching end tag</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>-10</span></span><span lang=EN-US>  – an end tag does not have acorresponding start tag</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>NB–</span></span> there is no information available about the potential code of <spanclass=Code><span style='font-family:Courier'>-1</span></span>.</p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Let’stake a quick look at when you might get an error message. If you attemptedparsing the following XML, you would generate an error:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&lt;cat&gt;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   &lt;catname&gt;whiskers&lt;/catname&gt;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   &lt;age&gt;5&lt;/age&gt;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>  &lt;fur&gt;&lt;![CDATA[black&amp;white&gt;&lt;/fur&gt;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&lt;/cat&gt;</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span lang=EN-US> As youmight be able to see, we are not closing the </span><span class=Code><spanstyle='font-family:Courier'>CDATA</span></span><span lang=EN-US>  section properly, as it should be formed inthe following way </span><span class=Code><span style='font-family:Courier'>&lt;![CDATA[black&amp;white]]&gt;</span></span>.<span lang=EN-US> Therefore, if you ran thefollowing code:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml= newXML(&quot;&lt;cat&gt;&lt;catname&gt;whiskers&lt;/catname&gt;&lt;age&gt;5&lt;/age&gt;&lt;fur&gt;&lt;![CDATA[black&amp;white&gt;&lt;/fur&gt;&lt;/cat&gt;&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(myXML_xml.status);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> TheOutput window would return </span><span class=Code><span style='font-family:Courier'>-2</span></span><span lang=EN-US> because the </span><span class=Code><span style='font-family:Courier'>CDATA</span></span><spanlang=EN-US> section is not properly terminated.For more information on </span><span class=Code><span style='font-family:Courier'>CDATA</span></span><spanlang=EN-US>, refer to </span><i>Chapter 18</i>.</p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> As forloading external XML documents, you can trace the status after </span><spanclass=Code><span style='font-family:Courier'>onLoad</span></span><spanlang=EN-US> has been invoked, which you can seein the following code snippet.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml= new XML();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.ignoreWhite= true;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.load(&quot;xmldoc.xml&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.onLoad= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   trace(getStatus(myXML_xml.status));</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>For an extension on this code, refer to the example <spanclass=Code><span style='font-family:Courier'><a href="../fla/xml.status.fla">xml.status.fla</a></span></span>and <span class=Code><span style='font-family:Courier'><ahref="../swf/xml.status.swf">xml.status.swf</a></span></span> .</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You might check that the XML structure did not contain anyerrors before you continue processing your XML. You might do this inconjunction with <span class=Code><span style='font-family:Courier'>onLoad</span></span>or loaded to make sure it has both been loaded and parsed without error. Youcould use an extremely simple conditional within your ActionScript to do so:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(myXML.status == 0) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   //process XML, all is good</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} else{</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   //do not process XML, error.</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}</span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>The returned value from the <span class=Code><spanstyle='font-family:Courier'>XML.status</span></span> property can be used in aconditional to ensure the <span class=Code><span style='font-family:Courier'>XML</span></span>object has been properly created. For example, you might want to use aconditional with <span class=Code><span style='font-family:Courier'>XML.status</span></span>,which will only process the XML data structure if <span class=Code><spanstyle='font-family:Courier'>XML.status</span></span> returns <span class=Code><spanstyle='font-family:Courier'>0</span></span>. <span class=Code><spanstyle='font-family:Courier'>XML.status</span></span> does not validate of theXML document against any DTDs (DOCTYPE definitions). It is also important tonote that Flash will return the <i>first</i>error it finds during parsing. Once an error is found, parsing terminates soonly the value of the first error is ever returned. This property must only beused with top level <span class=Code><span style='font-family:Courier'>XML</span></span>class node instances. </p>