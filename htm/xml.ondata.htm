<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"><h1><a name="_Toc15970098">XML.onData</a></h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML.onData([a])</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myXML</span></span>is an instance of the XML object, and <span class=Code><spanstyle='font-family:Courier'>a</span></span> is an optional string of XML datathat is unparsed. </p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText>Compatible with the <span class=ImportantWord><spanstyle='font-family:Helvetica'>Flash 5 Player and above</span></span><spanclass=Code>.</span>The <span class=Code><span style='font-family:Courier'>XML.onData()</span></span>event handler is <span class=ImportantWord><span style='font-family:Helvetica'>invokedwhen the Flash movie has received some new data</span></span>. See the relatedentry on <span class=ImportantWord><span style='font-family:Helvetica'>XML.onXML</span></span>.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.onData()</span></span><span class=ImportantWord><span style='font-family:Helvetica'>event handler</span></span>is invoked either when an XML document has been completed downloading new datafrom a server, or when an error has occurred during an attempted download. The <spanclass=Code><span style='font-family:Courier'>XML.onData()</span></span> eventhandler is called immediately, prior to any parsing of the XML content. The <spanclass=Code><span style='font-family:Courier'>XML.onData()</span></span> eventhandler returns the text in the document, or if the download was unsuccessfulreturns <span class=Code><span style='font-family:Courier'>undefined</span></span>.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=216 valign=top style='width:162.05pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=178 valign=top style='width:133.6pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Returned values</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=177 valign=top style='width:132.95pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=216 valign=top style='width:162.05pt;border:none;border-bottom:  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml  = new XML();</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.load(&quot;xmldoc.xml&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.onData  = function(thedata){</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(thedata);</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=178 valign=top style='width:133.6pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code>Contents of </span><span  class=Code><span style='font-family:Courier'>xmldoc.xml</span></span></p>  </td>  <td width=177 valign=top style='width:132.95pt;border:none;border-bottom:  solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code>&nbsp;</span></p>  <p class=MsoBodyText><span class=Code>This loads the contents of </span><span  class=Code><span style='font-family:Courier'>xmldoc.xml</span></span><span  class=Code> into the Flash movie, and calls the </span><span class=Code><span  style='font-family:Courier'>onData</span></span><span class=Code> when it has  finished the loading process.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.onData()</span></span>event handler is invoked as soon as an XML document has been downloaded from aserver, or when an error occurs in a download attempt from a server. Thishandler can be overridden, which will allow you to use XML data before it isparsed. This is the primary way in how it differs from the <span class=Code><spanstyle='font-family:Courier'>onLoad</span></span> handler. Therefore, <spanclass=Code><span style='font-family:Courier'>onData</span></span> stands inbetween the data on the server, and the Flash Player processing it. The defaultsetting is for <span class=Code><span style='font-family:Courier'>onData</span></span>to pass the data on to parsing. Otherwise, you can assign a function to thishandler to perform your own parsing instead of having Flash handle it.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>An example usage of the <span class=Code><spanstyle='font-family:Courier'>onData</span></span> handler is as follows:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml= new XML();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.ignoreWhite= true;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.load(&quot;xmldoc.xml&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.onData= function(mydata) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   if (mydata == undefined) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      trace(&quot;problem loadingdata.&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   } else {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      trace(&quot;Sweet success!&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      //optional processing goes here</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      this.onLoad(true);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   }</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>The </span><span class=Code><spanstyle='font-family:Courier'>onData</span></span><span class=Code> handler iscalled prior to the processing of the data. When the XML data from </span><spanclass=Code><span style='font-family:Courier'>xmldoc.xml </span></span><spanclass=Code>isloaded, a default setting would pass it to Flash for parsing. When this occurs,</span><span class=Code><span style='font-family:Courier'>onData </span></span><spanclass=Code>setsthe </span><span class=Code><span style='font-family:Courier'>onLoad </span></span><spanclass=Code>handler(and loaded property) to </span><span class=Code><span style='font-family:Courier'>true</span></span><span class=Code>, because the load has been successful.Otherwise they will be set to </span><span class=Code><spanstyle='font-family:Courier'>false</span></span><span class=Code>. Thisautomatically happens in your Flash movie.</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=Code>However, you can use a callback function as wementioned earlier, which will take the data before Flash can parse it.Sometimes this can be used to speed up parsing over the native parsers in theFlash player. In our code, you can accomplish this by adding a function tohandling parsing the data if </span><span class=Code><spanstyle='font-family:Courier'>onData</span></span><span class=Code> load issuccessful, and removing the call for the </span><span class=Code><spanstyle='font-family:Courier'>onLoad</span></span><span class=Code> handler. Itshould be noticed that performance in XML parsing has significantly improved inthe Flash Player 6.</span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code>Refer to the sample file </span><spanclass=MsoHyperlink><span style='font-family:Optima;color:blue'><ahref="../fla/xml.ondata.fla">xml.ondata.fla</a></span></span> and <spanclass=Code><span style='font-family:Courier'><a href="../swf/xml.ondata.swf">xml.ondata.swf</a></span></span><spanclass=Code> for an example of this code in use.</span></p><h3>Tips and precautions</h3><p class=MsoBodyText>Because the <span class=Code><span style='font-family:Courier'>XML.onData()</span></span> event handler is invoked immediately, priorto any parsing of the XML document, it can be used for pre-parsing or customparsing of the XML document contents. This can be used for custom parsingpurposes, which could lead to faster processing in general.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You should also note that this handler must reference aninstance of a top level <span class=Code><span style='font-family:Courier'>XML</span></span>class object.</p>