<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>Stage.addListener</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Stage.addListener(myListener) </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myListener </span></span>is an object containing an <span class=Code><span style='font-family:Courier'>onResize </span></span>method which the <span class=Code><span style='font-family:Courier'>Stage </span></span>object will send information to when the <span class=Code><spanstyle='font-family:Courier'>onResize </span></span>method is invoked.</p><p class=MsoBodyText> </p><p class=MsoBodyText><a name="OLE_LINK3">This method is </a><span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6 and above. </span></span>There are <spanclass=ImportantWord><span style='font-family:Helvetica'>no known issues </span></span>with any version of Flash that supports this object.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is used to assign a listener object to respondto the <span class=Code><span style='font-family:Courier'>onResize </span></span>event. If a listener object is defined, every time a user resizes the Flashplayer the <span class=Code><span style='font-family:Courier'>onResize </span></span>event is invoked and the <span class=Code><span style='font-family:Courier'>onResize </span></span>method of the listener object is executed. You can add multiple listeners forthe purpose of generating different responses to the same event. See also <spanclass=ImportantWord><span style='font-family:Helvetica'>Stage.removeListener </span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>Stage.onResize. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Stage.addListener </span></span>returns a Boolean value, <span class=Code><span style='font-family:Courier'>true </span></span>or <span class=Code><span style='font-family:Courier'>false. </span></span></p><h3>Description</h3><p class=MsoBodyText>This method adds a reference to an object containing an <spanclass=Code><span style='font-family:Courier'>onResize </span></span>method,which is used to handle the <span class=Code><span style='font-family:Courier'>onResize </span></span>event.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=324 valign=top style='width:243.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=216 valign=top style='width:2.25in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'><br> myListener = new Object(); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myListener.onResize = function () { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // response code here </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>Stage.addListener(myListener); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=216 valign=top style='width:2.25in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Example of a basic object listener and <span class=Code><span style='font-family:Courier'>addListener </span></span> code snippet.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>onResizeResponse = function () { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // response code here </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myListener2 = new Object(); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myListener2.onResize = onResizeResponse; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>Stage.addListener(myListener2); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=216 valign=top style='width:2.25in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Using a named function and assigning it to handle the <span class=Code><span style='font-family:Courier'>onResize </span></span> event.</p>  </td> </tr> <tr> <td width=324 valign=top style='width:243.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myListener = new Object(); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>myListener.onResize = function () { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // code here </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>} </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>Stage.addListener(“myListener”); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=216 valign=top style='width:2.25in;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Incorrect usage.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>You must pass a reference to the listener object, so it can’t be a string literal.</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>Using a listener to listen to events fired off by the <spanclass=Code><span style='font-family:Courier'>Stage </span></span>object isexcellent for repositioning objects dependant on the width of the stage. Forexample, you may want to create a dynamically resizing toolbar, which displaysits buttons evenly between the first and last shortcut on the toolbar. Youcould add a listener to the <span class=Code><span style='font-family:Courier'>Stage </span></span>object and use the listener object’s <span class=Code><span style='font-family:Courier'>onResize </span></span>method to re-position the items. See theexample <ahref="../fla/stageaddlistener.fla">stageaddlistener.fla</a>/ <a href="../swf/stageaddlistener.swf">stageaddlistener.swf</a>.</p><h3>Tips and precautions</h3><p class=MsoBodyText>The listeners which are added to the <span class=Code><spanstyle='font-family:Courier'>Stage </span></span>object are stored in a propertynamed <span class=Code><span style='font-family:Courier'>_listeners. </span></span>The <span class=Code><span style='font-family:Courier'>_listeners </span></span>property has an <span class=Code><span style='font-family:Courier'>Array </span></span>data type. This array is mandatory in all objects that support listeners. Usethe following code to find out how many listeners you have listening to anobject:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>listener= new Object(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>listener2= new Object(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// Addthe listener objects </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Stage.addListener(listener); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Stage.addListener(listener2); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//setup the counter </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>listenersCount= 0; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>for(var i in Stage._listeners) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// thisshould send [object Object] to the Output window for each object. </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> trace(Stage._listeners[i]); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> listenersCount++; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//Trace the final number to the stage </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(&quot;Thereare &quot; + listenersCount + &quot; listeners of the Stage object&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText>How can I define the order in which the listening objectsare called? The order in which you add listeners is the order in which they’llbe called. This is important when you have more than one listener object togenerate different responses to the <span class=Code><span style='font-family:Courier'>onResize </span></span>event. Having multiple listeners is great butyou have to make sure you have them in the correct order otherwise things canget ugly. You can access the <span class=Code><span style='font-family:Courier'>_listeners </span></span>property directly, so anything you can do with an <span class=Code><spanstyle='font-family:Courier'>Array </span></span>can also be done directly withthe <span class=Code><span style='font-family:Courier'>_listeners </span></span>property. The following code can be placed on the end of the code above toreorder the listeners of the <span class=Code><span style='font-family:Courier'>Stage </span></span>object.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>listenerArrayKey1= Stage._listeners[0]; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Stage._listeners[0]= Stage._listeners[1]; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>Stage._listeners[1]= listenerArrayKey1; </span></span></p>