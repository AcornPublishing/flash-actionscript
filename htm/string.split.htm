<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>String.split</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>newString= myString.split(delimiter [, limit]); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>newString </span></span>will be an array with each key containing the substrings of <span class=Code><spanstyle='font-family:Courier'>myString </span></span>by breaking it wherever the <spanclass=Code><span style='font-family:Courier'>delimiter </span></span>parameteroccurs.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The object is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 and above. </span></span>There are <span class=ImportantWord><span style='font-family:Helvetica'>noknown issues </span></span>with any version of Flash that supports this object.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>split </span></span>method is used to split up a string into individual substrings based on thepassed <span class=Code><span style='font-family:Courier'>delimiter. </span></span>The individual substrings are stored in an array. The <span class=Code><spanstyle='font-family:Courier'>limit </span></span>parameter can be used to limitthe number of substrings the calling string is split up into. If you do supplya <span class=Code><span style='font-family:Courier'>limit </span></span>value,as soon the number of substrings created has reach the <span class=Code><spanstyle='font-family:Courier'>limit </span></span>value, the <span class=Code><spanstyle='font-family:Courier'>split </span></span>method will stop searching therest of the string. The <span class=Code><span style='font-family:Courier'>split </span></span>method is useful for many things, one of which is coding and de-codinginformation in a custom format. For example, the following code takes thestring and enters the information into an array. Each array contains an objectwith name and age properties used to store the information from the string:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// Thearray used to hold the objects </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>stringData= new Array(); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// Thestring to parse </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>codeString= &quot;Tom:21|John:28|Joe:24|Adam:22&quot;; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//Split the string into arrays at every &quot;|&quot; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//which is used to seperate different people </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>nameArray= codeString.split(&quot;|&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// loopthrough the nameArray </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>for(var i in nameArray) { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>  </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // split each key at every &quot;:&quot; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // which is used to seperate the name fromthe age </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> str = nameArray[i].split(&quot;:&quot;); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>  </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> // create an object and add it to thestringData array </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'> stringData.push({name: str[0], age: str[1]}); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><h3>Description</h3><p class=MsoBodyText>Splits the calling string in substrings at everyoccurrence of the delimiter. The strings are stored in an array.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=252 valign=top style='width:189.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=130 valign=top style='width:97.5pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Additional explanation </span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=189 valign=top style='width:141.9pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=252 valign=top style='width:189.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>fullName = &quot;John Doe&quot;; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>splitStr = fullName.split(&quot; &quot;); </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>firstName = splitStr[0]; </span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>lastName = splitStr[1]; </span></span></p>  </td>  <td width=130 valign=top style='width:97.5pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>Returns two variables. <span  class=Code><span style='font-family:Courier'>firstName </span></span>will equal <span class=Code><span style='font-family:Courier'>“John” </span></span> and <span class=Code><span style='font-family:Courier'>lastName </span></span> will equal <span class=Code><span style='font-family:Courier'>“Doe </span></span>”.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=189 valign=top style='width:141.9pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0in'>A simple piece of code to take a full name and get both the first and last names as separate variables. This code assumes the person only has two names, no middle name.</p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>If you have data which you need to store but don’t haveaccess to a database, and XML isn’t an option, you can create a custom storagemethod which will enable you to store data which you can later retrieve andmodify, then save the updated information. See <ahref="../fla/stringsplit.fla">stringsplit.fla</a>/ <a href="../swf/stringsplit.swf">stringsplit.swf</a>for an example.</p><h3>Tips and precautions</h3><p class=MsoBodyText>None.</p>