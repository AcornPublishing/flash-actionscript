<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12874614"><span lang=EN-US> Button.onReleaseOutside</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>instanceName.onReleaseOutside = functionName;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>instanceName</span></span><span lang=EN-US> is theinstance name of a Button, and </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>functionName</span></span><span lang=EN-US> is afunction containing the code you wish to execute every time the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onReleaseOutside</span></span><span lang=EN-US> buttonevent occurs.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>event handler</span></span><span lang=EN-US>  is </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>compatible with Flash 6 or later</span></span><span lang=EN-US>. Previous versions of Flash did notsupport the use of function references as call-backs, so this form of eventhandler script was not supported. For adding button events to buttons in Flash5 and previous versions, see the </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>on</span></span><span lang=EN-US>  action.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> Flashbuttons generate <i>events </i>every time amouse interaction occurs with respect to a button. For something to happen whenan event occurs, you must define a script that you want to execute in responseto the event, and this script is called the <i>eventhandler. </i>To understand the operation of </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Button.onReleaseOutside</span></span><span lang=EN-US>  requires two things: anunderstanding of the <i>event </i>and how toset up the <i>event handler.</i></span></p><h4><span lang=EN-US> The event</span></h4><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onReleaseOutside</span></span><span lang=EN-US> event willbe invoked when the button is click-held and the mouse is then released outsidethe button-hit area.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onPress</span></span><span lang=EN-US> event willalso occur during the process that causes the </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>onReleaseOutside</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> It willoccur when the button is clicked<i>. </i>Seealso </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Button.onPress</span></span><span lang=EN-US>.</span></p><h4><span lang=EN-US> The event handler</span></h4><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Button.onReleaseOutside</span></span><span lang=EN-US> event handlerdefinition is used to identify the code that will act as the event handler whenthe </span><span class=Code><span lang=EN-US style='font-family:Courier;'>onReleaseOutside</span></span><span lang=EN-US> event occurs. This code is definedas a function. When a function is used as an event handler, it is known as a <i>call-back</i>, a term inherited from JavaScript.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If no call-back is defined, the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>onReleaseOutside</span></span><span lang=EN-US> event will do nothing.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If a call-back is defined, thefunction will run once every time the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>onReleaseOutside</span></span><span lang=EN-US> event occurs.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=348 valign=top style='width:261.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>function myFunction() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(&quot;I have been click-releasedOutside&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>}</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onReleaseOutside = myFunction;</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines a function </span><span class=Code><span lang=EN-US  style='font-family:Courier;'>myFunction()</span></span><span lang=EN-US> as the  call-back for this event.</span></p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onReleaseOutside = function() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(&quot;I have been click-releasedOutside&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>};</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines an anonymous function as the call-back.</span></p>  </td> </tr> <tr>  <td width=348 valign=top style='width:261.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onReleaseOutside = undefined;</span></span></p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script un-defines a previously defined call-back. You can also set it to </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>null</span></span><span lang=EN-US>  to  achieve the same effect.</span></p>  <p class=MsoBodyText><span lang=EN-US>  </span></p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onReleaseOutside</span></span><span lang=EN-US>  event is most usually used inconjunction with other events.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> It isuseful where you have very small buttons:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> It is usual to respond to a buttonclick on the </span><span class=Code><span lang=EN-US style='font-family:Courier'>onRelease</span></span><span lang=EN-US> event rather than the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>onPress</span></span><span lang=EN-US> event, because thisproduces better user feedback (the user gets to see the button going to itsdown state). It is, however, possible for the user to inadvertently move offthe button before releasing, because the button is small. To combat this, youcan include the </span><span class=Code><span lang=EN-US style='font-family:Courier'>onReleaseOutside</span></span><span lang=EN-US> event as shown:<br><br></span><span class=Code><span lang=EN-US style='font-family:Courier'>my_btn.onRelease= my_btn.onReleaseOutside=function () {<br>   trace(&quot;you have justclick-released me&quot;);<br>};</span></span><span lang=EN-US> <br><br>This script will respond to a click-release of the mouse even if the releasewas not over the button. See also </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica'>Button.onRelease</span></span><span lang=EN-US>. </span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> See theexample </span><span class=FileName><span lang=EN-US style='font-family:Courier;'><a href="../fla/button.onreleaseoutside.fla">button.onreleaseoutside.fla</a></span></span>and <span class=FileName><span lang=EN-US style='font-family:Courier;'><a href="../swf/button.onreleaseoutside.swf">button.onreleaseoutside.swf</a></span></span>.<span lang=EN-US></span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US> You canhave only one call-back defined for each button event. The call-back will betaken as the most recent one defined. This is different to the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>on(mouseEvent)</span></span><span lang=EN-US>  action, where you can define multiple event handlers, and these willrun in the order they were attached to the button.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thecall-back does, however allow you some advantages:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can change the button eventhandler dynamically simply by defining it again, this time with a newcall-back.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> You can remove an event handlerdynamically simply by equating it to </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>undefined</span></span><span lang=EN-US>.</span></p>