<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>MovieClip.hitArea</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.hitArea= hitClip;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>Where </span><span class=Code><spanstyle='font-family:Courier'>myClip</span></span><span class=Code>is a movie clip button and </span><spanclass=Code><span style='font-family:Courier'>hitClip</span></span><span class=Code>is the movieclip you want to act as its hit area.</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash 6 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.hitArea</span></span>property designates a movie clip as a hit area for a button movieclip.</p><h3>Description</h3><p class=MsoBodyText>Flash MX allows you to use button events with movie clips.A ‘button event’ is a historic term for the events that only buttons wereallowed to use in Flash 5. In Flash MX you can recognize them because they arethose events that the movie clip has in common with the button.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>As soon as you add a button event to a movie clip it willstart acting like a button. Although Macromedia use the term ‘movie clipbutton’ it is important to realize that a movie clip button is <i>not </i>a new object; it is still a <spanclass=Code><span style='font-family:Courier'>MovieClip</span></span>. The movieclip button is, however, different in the way you use and set it up. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Movie clip buttons are very useful for the advancedscripter, and they effectively supercede buttons because they are so versatile.Buttons are still useful with regard to workflow though; they are easier to setup and maintain, plus there is no real advantage in using movie clip buttons ifall you want is simple button features.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=252 valign=top style='width:189.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=300 valign=top style='width:225.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=252 valign=top style='width:189.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>clip1.hitArea = clip2;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>clip1.onRelease = function() {</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(&quot;hello!&quot;)</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>};</span></span></p>  </td>  <td width=300 valign=top style='width:225.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code>&nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code>Movie clip </span><span  class=Code><span style='font-family:Courier'>clip2</span></span><span class=Code>is defined as  the hit area for </span><span class=Code><span style='font-family:  Courier'>clip1</span></span><span class=Code>.</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><i><span style='font-family:Courier'>&nbsp;</span></i></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code>The </span><span  class=Code><span style='font-family:Courier'>onRelease</span></span><span  class=Code> callback</span><span class=Code>for </span><span class=Code><span  style='font-family:Courier'>clip1</span></span><span class=Code> will run  every time </span><span class=Code><span style='font-family:Courier'>clip2</span></span><span  class=Code> is click-released.</span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr> <tr>  <td width=252 valign=top style='width:189.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>clip1.hitArea = clip2;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td>  <td width=300 valign=top style='width:225.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0in 5.4pt 0in 5.4pt'>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code>A movie clip  doesn not start behaving as a button until you give it at least one button  event. Although </span><span class=Code><span style='font-family:Courier'>clip1</span></span><span class=Code>has a hit  area defined for it, it will not start acting as a button until a button  event is defined for it.</span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0in'><span class=Code>In  particular, the cursor will <i>not </i>change  to a hand cursor when you roll over </span><span class=Code><span  style='font-family:Courier'>clip2</span></span><span class=Code>.</span></p>  <p class=MsoBodyText style='margin-left:0in'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>In advanced applications the movie clip button hasdefinite advantages over a standard button, and they are:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Amovie clip button has all the <span class=Code><span style='font-family:Courier'>MovieClip</span></span>events and methods, which represents a far richer set of features that the <spanclass=Code><span style='font-family:Courier'>Button</span></span>. In particular,motion graphics relies heavily on <span class=Code><span style='font-family:Courier'>MovieClip.onEnterFrame</span></span> for per frame programmaticallycontrolled animation, something that the button lacks.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Amovie clip button has the advantage of having it’s own timeline, whereas abutton does not.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Amovie clip button retains its general timeline, whereas the button has a fixed4 keyframe ‘pseudo timeline’ which is next to useless for any advancedscripting, or for that matter, tween based animation.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Youcan extend the movie clip button by adding more button states.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Youcan completely extend the movie clip button via Object Orientated methods(prototyping) far easier than the button. This is because the movie clip has atimeline and is therefore more modular/better encapsulated for the purposes ofObject Orientated Programming.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>To build a movie clip button, you need to follow the stepsbelow.</p><h4>Set up the timeline</h4><p class=MsoBodyText>The standard button has 4 keyframes called <spanclass=ImportantWord><span style='font-family:Helvetica'>Up</span></span><spanclass=ImportantWord><span style='font-weight:normal'>, </span></span><span class=ImportantWord><spanstyle='font-family:Helvetica'>Over</span></span><span class=ImportantWord><spanstyle='font-weight:normal'>, </span></span><span class=ImportantWord><span style='font-family:Helvetica'>Down </span></span>and <span class=ImportantWord><spanstyle='font-family:Helvetica'>Hit </span></span>as shown below. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=285 height=43src="../png/0586-dict8-69.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>To replicate the main three keyframes, you should add threekeyframes in your movie clip called <span class=Code><span style='font-family:Courier'>_up</span></span>, <span class=Code><span style='font-family:Courier'>_over</span></span>and <span class=Code><span style='font-family:Courier'>_down</span></span>. Thehit state doesn’t have a keyframe as it is represented by a movie clip on thetimeline (see below for more on this).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=525 height=62src="../png/0586-dict8-70.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>We have made our movie clip timeline longer than necessaryto fully show the label names, and in normal practice you can place these threelabels on any three keyframes of the movie clip button timeline. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>These three keyframes are optional. They represent thethree graphic states of the movie clip button corresponding to the three buttonstates Up, Over and Down. If you don’t want one or more of them, you should notadd the corresponding keyframe labels.</p><h4>Setting up the basic timeline scripts</h4><p class=MsoBodyText>Even though our movie clip button will eventually act likea button, it is fundamentally still a <span class=Code><span style='font-family:Courier'>MovieClip</span></span> object and this means that the timeline willstill play.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>When the user causes an Up, Over or Down event, thetimeline will act as if it has seen a <span class=Code><span style='font-family:Courier'>gotoAndPlay</span></span> to the corresponding frame. You need toplace <span class=Code><span style='font-family:Courier'>stop()</span></span>actions to prevent the timeline running into the other button states (or simplyrunning when it first appears on the parent timeline).</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Choosing to place your <span class=Code><spanstyle='font-family:Courier'>stop()</span></span> actions on frames 1, 10 and 20will give you the basic button functionality, but if you place them at (say )9, 19 and 29, you have the ability to add animation tweens directly to yourmovie clip button timeline.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Note</span></span></p><p class=MsoBodyText>If you have not used any of the three labels <spanclass=Code><span style='font-family:Courier'>_up</span></span>, <spanclass=Code><span style='font-family:Courier'>_over</span></span> and <spanclass=Code><span style='font-family:Courier'>_down</span></span>, you do not ofcourse have to do any of this step either; a <span class=Code><spanstyle='font-family:Courier'>gotoAndPlay</span></span> to a frame label thatdoesn’t exist will fail silently, so even though the mouse can still causebutton events, the movie clip button timeline will not respond to them if thecorresponding label doesn’t exist.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Finally, you need to add the <span class=ImportantWord><spanstyle='font-family:Helvetica'>hitArea</span></span>. The rules for a movie clipbutton <span class=Code><span style='font-family:Courier'>hitArea</span></span>are the same as they are for a normal button, and the same cases where youdon’t need a <span class=Code><span style='font-family:Courier'>hitArea</span></span>still apply. The only difference is how you define the <span class=Code><spanstyle='font-family:Courier'>hitArea</span></span> – it is not a keyframe butanother movie clip.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>To define a <span class=Code><span style='font-family:Courier'>hitArea</span></span> you simply refer to the target path of the movieclip you want to nominate as your <span class=Code><span style='font-family:Courier'>hitArea</span></span>, so all of the following are possible:</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myClip.hitArea= root.myOtherClip;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>this.hitArea= someOtherClip;</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If you don’t specify a hit area, a <span class=Code><spanstyle='font-family:Courier'>hitArea</span></span>(<spanclass=Code><span style='font-family:Courier'>this</span></span>) is assumed(the movie clip itself will act as its own <span class=Code><spanstyle='font-family:Courier'>hitArea</span></span>). This is exactly whathappens with normal buttons so should cause no surprises.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>A better option by far is to create a <spanclass=ImportantWord><span style='font-family:Helvetica'>general hitArea clip</span></span>.This will consist of a simple square or circle (depending on the shape ofyour buttons):</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=400 height=197src="../png/0586-dict8-71.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>hitArea</span></span>clip should have one frame on its timeline and the following script on thisframe:</p><p class=MsoBodyText style='margin-left:0in'>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//standard movie clip button hitArea script...</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>//works every time!</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_parent.hitArea= this;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>this._width= _parent._width;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>this._height= _parent._height;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>this._visible= false;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>This script:</span></p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code>Defines itself as the </span><spanclass=Code><span style='font-family:Courier'>hitArea</span></span><spanclass=Code>of the the parent timeline.</span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code>Sets its height and width to the samedimensions as the parent movie clip’s frame 1 graphic.</span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code>Sets itself to invisible.</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>If you add this to a new layer of our movie clipbutton, you now have finished:</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'><img width=461 height=81src="../png/0586-dict8-72.png"></span></span></p><p class=Picturereference>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>See the file <a href="../fla/movieclipenabled.fla">movieclipenabled.fla</a>   / <a href="../swf/movieclipenabled.swf">movieclipenabled.swf</a>. This shows   movie clip buttons being used in a simple navigation strip.</span></p><h3>Tips and precautions</h3><p class=MsoBodyText><span class=Code>Remember that a movie clip button does not startacting as a button until you assign at least one button event to it!</span></p>