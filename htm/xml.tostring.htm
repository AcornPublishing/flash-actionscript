<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"><h1><a name="_Toc15970107">XML.toString</a></h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXMLNode.toString()</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myXMLNode</span></span>is an instance of the <span class=Code><span style='font-family:Courier'>XML</span></span>object. </p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText>Compatible with <span class=ImportantWord><spanstyle='font-family:Helvetica'>Flash Player 5 and later</span></span><spanclass=Code>.</span>The <span class=Code><span style='font-family:Courier'>XML.toString()</span></span>method returns a string representing everything in the specified node. See therelated entry on <span class=ImportantWord><span style='font-family:Helvetica'>XML.nodeValue</span></span>.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.toString()</span></span><span class=ImportantWord><span style='font-family:Helvetica'>method</span></span>returns a string of all the nodes, children, and attributes in specified nodeof the <span class=Code><span style='font-family:Courier'>XML</span></span>object instance, which is then returned as a string.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=276 valign=top style='width:207.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Returned values</span></span></p>  </td>  <td width=103 valign=top style='width:77.4pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Notes</span></span></p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml  = new  XML(&quot;&lt;cat&gt;&lt;catname&gt;whiskers&lt;/catname&gt;&lt;age&gt;5&lt;/age&gt;&lt;/cat&gt;&quot;);</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myNode  = myXML_xml.firstChild.childNodes[0];</span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(myNode.toString());</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=192 valign=top style='width:144.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>&lt;catname&gt;whiskers&lt;/catname&gt;</span></span></p>  </td>  <td width=103 valign=top style='width:77.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  <p class=MsoBodyText style='margin-left:0cm'>Creates a string based on the  specified node stored in <span class=Code><span style='font-family:Courier'>myNode</span></span>.</p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>XML.toString()</span></span>method is used to create a string that contains all the children/descendentsand attributes of a specified node within an <span class=Code><spanstyle='font-family:Courier'>XML</span></span> object instance. In the followingexample, we use the testing environment to load an XML document, and thenoutput it as a string. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml= new XML();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.load(&quot;http://www.macromedia.com/desdev/resources/macromedia_resources.xml&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myXML_xml.onLoad= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>   _root.textOutput.text =myXML_xml.toString();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}; </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This example must be performed in the testing environmentwithin Flash due to security settings in the browser version of the player. Theoutput from the <span class=Code><span style='font-family:Courier'>myXML_xml.toString()</span></span>method in this case will be a string containing the text contained in theloaded XML document. See the example <a href="../fla/xml.tostring.fla">xml.tostring.fla</a>and <a href="../swf/xml.tostring.swf">xml.tostring.swf</a> .</p><h3>Tips and precautions</h3><p class=MsoBodyText>If <span class=Code><span style='font-family:Courier'>XML.docTypeDecl</span></span>is undefined the DOCTYPE declaration is suppressed from the output. If <spanclass=Code><span style='font-family:Courier'>XML.xmlDecl</span></span> isundefined, the XML declaration is suppressed from the output. You should alsonote that when you trace an <span class=Code><span style='font-family:Courier'>XML</span></span>object, the <span class=Code><span style='font-family:Courier'>toString()</span></span>method is actually called without you directly calling it. Therefore, you donot need to actually call this method. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You can also display any text or element node (type 1 or3) using the <span class=Code><span style='font-family:Courier'>toString()</span></span>method. So, if you do not know what type of node it is, you can use <spanclass=Code><span style='font-family:Courier'>toString()</span></span> to viewthe data without checking the <span class=Code><span style='font-family:Courier'>nodeType</span></span>.If the node you are calling is a top level XML node, then the declaration andDOCTYPE tags are both shown in <span class=Code><span style='font-family:Courier'>toString()</span></span>.</p>