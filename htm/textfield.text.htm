<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"><h1><a name="_Toc16483030"></a><a name="_Toc16512721"><span lang=EN-US> TextField.text</span></a></h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextField</span></span> <spanclass=Code><span lang=EN-US style='font-family:Courier;'>.text</span></span> </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span style='font-family:Courier'>myTextField</span></span> <spanlang=EN-US> is a</span><span class=Code><spanstyle='font-family:Courier'> TextField </span></span> <span lang=EN-US> instance</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span> </p><p class=MsoBodyText><span class=Code><span lang=EN-US> Flash MX and later.Compatible with </span></span> <span class=ImportantWord><span style='font-family:Helvetica'>Flash Player 6 and later</span></span> <span class=Code><spanlang=EN-US>. </span></span> </p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>TextField.text</span></span> <span lang=EN-US> property is thetext content of the text field.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>TextField.text</span></span> <span class=ImportantWord><span style='font-family:Helvetica'>property</span></span> <spanlang=EN-US> is the text content, as a string,in the text field. Any lines are separated by carriage returns. If the textfield is HTML, the HTML tags are stripped and the string contains onlyunformatted text. This is one of the most used properties of the text field. Itallows you to read and write values of the string the text field is currentlydisplaying.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=276 valign=top style='width:207.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Code</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=288 valign=top style='width:216.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>&nbsp;</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  style='font-family:Helvetica'>Additional Explanation</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myText = </span></span> <span  class=Code><span style='font-family:Courier'>myTextField</span></span> <span  class=Code><span lang=EN-US style='font-family:Courier;'>.text</span></span> <span lang=EN-US> ;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  style='font-family:Courier'>myTextField</span></span> <span class=Code><span  lang=EN-US style='font-family:Courier;'>.text =  &quot;Test&quot;</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=288 valign=top style='width:216.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> Stores  the text of </span><span class=Code><span style='font-family:Courier'>myTextField</span></span> <span  lang=EN-US> in </span><span class=Code><span  style='font-family:Courier'>myText</span></span> .</p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> Assigns  the field's text to &quot;</span><span class=Code><span style='font-family:  Courier'>Test</span></span> <span lang=EN-US> &quot;.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myPath = </span></span> <span  class=Code><span style='font-family:Courier'>myTextField</span></span> <span  class=Code><span lang=EN-US style='font-family:Courier;'>.text()</span></span> <span lang=EN-US> ;</span></p>  </td>  <td width=288 valign=top style='width:216.0pt;border:none;border-bottom:solid windowtext .5pt;background:#D9D9D9;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US>&nbsp;</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US>There is no method with this name</span></span> </p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>TextField.text</span></span> <span lang=EN-US> property is thetext in a text field. It can be read and stored in a variable or set:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>mytext = </span></span> <span class=Code><spanstyle='font-family:Courier'>myTextField</span></span> <span class=Code><spanlang=EN-US style='font-family:Courier;'>.text;</span></span> </p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextField</span></span> <spanclass=Code><span lang=EN-US style='font-family:Courier;'>.text= &quot;This is a string.&quot;;</span></span> </p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US> Flash 5users may be more used to using the </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>Var </span></span> <span lang=EN-US> field of the property inspector. In Flash 5,the procedure was to assign a variable to the text field by filling in the </span><spanclass=Code><span style='font-family:Courier'>Var</span></span> <span lang=EN-US>  field. The variable would then be equal to thetext field contents, and you could read and write to the text field by readingand writing to the variable. In the example shown below, the contents of thetext field </span><span class=Code><span style='font-family:Courier'>myTextField</span></span> <span lang=EN-US> are read/written via the variable </span><span class=Code><spanstyle='font-family:Courier'>myText</span></span> <i><span lang=EN-US>.</span></i></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> <img width=602 height=105src="../png/0586_dict11_15.png"></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> In Flash6, you can still o this, but you are strongly advised not to because:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span> <span lang=EN-US> Components &quot;listen&quot; to the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>TextField.text</span></span> <spanlang=EN-US> method, and ignore the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>Var</span></span> <span lang=EN-US> field.This means for example, if you have a scrollbar component associated with atext field, setting the contents of the text field via the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>var</span></span> <spanlang=EN-US> variable <i>will have no affect on the variable. </i>The scrollbarwill only change to reflect the current text in the text field <i>if you usethe text property.</i></span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span> <span lang=EN-US> The </span><span class=Code><spanlang=EN-US style='font-family:Courier'>textField.text</span></span> <spanlang=EN-US> method is a <i>general </i>way of accessing a text field's contents,and it is the same for all text fields. If you us a </span><span class=Code><spanlang=EN-US style='font-family:Courier'>Var</span></span> <span lang=EN-US> variable, this generality is lost and you have to use a <i>specific </i>variableper text field instance. This makes it harder to write modular (or ObjectOrientated) code that accesses text fields.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Althoughit will take some practice for Flash 5 die-hards to break the habit, note thatActionScript is moving towards a structured method based language rather thanthe quirky action based language it was in Flash 4 (and to a certain extent,Flash 5). Making the change now is therefore a good idea, while the gap betweenthe old way and new way is still relatively small!</span></p>