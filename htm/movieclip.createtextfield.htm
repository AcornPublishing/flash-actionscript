<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>MovieClip.createTextField</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip.createTextField(instance, depth, x, y, width, height);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myMovieClip</span></span>is a movie clip instance, <span class=Code><span style='font-family:Courier'>instance</span></span>is a string identifying the new empty movie clip, <span class=Code><spanstyle='font-family:Courier'>depth</span></span> is the level at which to placethe new clip, <span class=Code><span style='font-family:Courier'>x</span></span>and <span class=Code><span style='font-family:Courier'>y</span></span> are thecoordinates at which to position the text field, <span class=Code><spanstyle='font-family:Courier'>width</span></span> is the width of the field and <spanclass=Code><span style='font-family:Courier'>height</span></span> is the heightof the field.</p><p class=MsoBodyText><span class=Code>&nbsp;</span></p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash 6 and later. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.createTextField()</span></span>method creates a new text field inside the current clip.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.createTextField()</span></span>creates a new text field within the current clip:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip.createtextField(“myField”,3, 200, 200, 500, 100);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This will create a new text field called <span class=Code><spanstyle='font-family:Courier'>myField</span></span> which is a child of <spanclass=Code><span style='font-family:Courier'>myMovieClip</span></span>. It isplaced at a depth <span class=Code><span style='font-family:Courier'>2</span></span>andhas coordinates of <span class=Code><span style='font-family:Courier'>200</span></span>,<span class=Code><span style='font-family:Courier'>200</span></span> within <spanclass=Code><span style='font-family:Courier'>myMovieClip</span></span>, a <spanclass=Code><span style='font-family:Courier'>width</span></span> of <spanclass=Code><span style='font-family:Courier'>500</span></span> pixels and aheight of <span class=Code><span style='font-family:Courier'>100</span></span>pixels. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>By default, the <span class=Code><span style='font-family:Courier'>MovieClip.createTextField() </span></span>method uses these defaulttext and <span class=Code><span style='font-family:Courier'>TextFormat</span></span>object properties (see the <span class=ImportantWord><span style='font-family:Helvetica'>TextFormat</span></span> object reference for more information onthese properties):</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>align= “left”</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>background= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>bold= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>border= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>bullet= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>embedFont= false </span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>font= “Times New Roman”</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>html= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>indent= 0</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>italic= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>leading= 0</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>leftMargin= 0</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>maxChar= null </span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>multiline= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>rightMargin= 0</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>size= 12</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>tabstops= []</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>target= “”</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>textColor= 0x000000</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>type= “dynamic”</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>underline= false</span></span></p><p class=Bullet-Level1><span class=Code><spanstyle='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><span class=Code><span style='font-family:Courier'>url= “”</span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><spanclass=Code><span style='font-family:Courier'>variable = null</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Some properties can be overridden prior to the text fieldbeing created, like this:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>_root.createTextField(“myTextField”,3, 200, 200, 500, 100);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// setdefault properties</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextField.multiline= true;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// setTextFormat object properties</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextFormat= new TextFormat();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextFormat.color= 0x0000FF;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextFormat.italic= true;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextFormat.align= “right”;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>// settext and call with new format settings</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextField.text= “This is a test. This is only a test. Do not panic.”;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myTextField.setTextFormat(myTextFormat);</span></span></p><h3>Examples and Practical uses</h3><p class=MsoBodyText>Although the text field is now an object, and hasproperties, it <spanclass=ImportantWord><span style='font-family:Helvetica'>cannot have events</span></span>. This makes it difficult to animateusing a <span class=Code><span style='font-family:Courier'>MovieClip.onEnterFrame</span></span>.By placing your text fields within a movie clip ‘wrapper’ you get to use allthe events of the movie clip, making text based animations easier to pull off.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Text based effects can get very programmatically complicated   very quickly, so we have written a very simple (but boring) example to show   all of the basic techniques:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functionmover() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this._x -=(this._x-this.xTarget)/this.inertia;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    this._y -=(this._y-this.yTarget)/this.inertia;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functiontextEffect(text_str, fromX, fromY, toX, toY) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    var myTextFormat = new TextFormat();</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    myTextFormat.size = 30;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    for (i=0; i&lt;text_str.length; i++) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>       this.createEmptyMovieClip(&quot;clip&quot;+i, i);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>       this[&quot;clip&quot;+i].createTextField(&quot;mytext&quot;, 0, 0, 0,50, 50);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i].mytext.text =text_str.charAt(i);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>       this[&quot;clip&quot;+i].myText.setTextFormat(myTextFormat);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i]._x = fromX;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i]._y = fromY;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i].xTarget =i*20+toX;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i].yTarget =y+toY;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i].inertia =10+i;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this[&quot;clip&quot;+i].onEnterFrame = mover;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    }</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>textEffect(&quot;Yetanother text effect!&quot;, 275, 400, 50, 100);</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This code will cycle through each letter in a text string,and:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Createa movie clip <span class=Code><span style='font-family:Courier'>clipn</span></span>per character <span class=Code><spanstyle='font-family:Courier'>n</span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Createa text field within the movie clip called <span class=Code><spanstyle='font-family:Courier'>myText</span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Displaythe current character inside the text field</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=183 height=199src="../png/0586-dict8-34.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>It also adds an <span class=Code><span style='font-family:Courier'>onEnterFrame</span></span> event onto each movie clip created, for thepurposes of animation. This creates an animated inertia effect per character.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Note the use of a local <span class=Code><spanstyle='font-family:Courier'>textFormat</span></span> object within the function<span class=Code><span style='font-family:Courier'>textEffect</span></span>. This allows us to change thedefault font size to <span class=Code><span style='font-family:Courier'>30</span></span>.</p><h3>Tips and precautions</h3><p class=MsoBodyText>When creating non animated text dynamically (when you wantto create text fields that contain information coming in from a remote server)and you do not want to animate them, you should not create them with <spanclass=Code><span style='font-family:Courier'>_root.createtextField</span></span>because you will find it vey difficult to remove the text when it is no longerneeded. Instead, place your text in temporary empty movie clips created with <spanclass=Code><span style='font-family:Courier'>MovieClip.createEmptyMovieClip</span></span>.You can delete the text when it is no longer needed via <span class=Code><spanstyle='font-family:Courier'>MovieClip.removeMovieClip</span></span>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Although you can animate a clip containing any text, ifyou use any transformation that requires Flash to treat the text as a vector(such as animation using <span class=Code><span style='font-family:Courier'>_rotation</span></span>),the text will disappear if you are not embedding fonts.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The use of the features discussed allows you to createtext effects that previously required lots of tween based animation. See <ahref="http://www.thevoid.co.uk/"><span style='font-family:Helvetica'>http://www.thevoid.co.uk/</span></a>(or New Masters of Flash) for an example of the old school…</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=400 height=124src="../png/0586-dict8-35.png"></p>