<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12169693"><span lang=EN-US>.Dot operator</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myInstanceName.property;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myInstanceName.method;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myInstanceName.variable</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myPath.myInstanceName.property</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myPath.myInstanceName.method</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myPath.myInstanceName.variable</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>mypathStart[expression].property</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myPathStart[expression].method</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myPathStart[expression].variable</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>myInstanceName</span></span><span lang=EN-US> is the instance name of an object.</span></p><p class=Bullet-Level1><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span class=Code><span lang=EN-US style='font-family:Courier'>property</span></span><span lang=EN-US>,</span><span class=Code><span lang=EN-US style='font-family:Courier'>method</span></span><span lang=EN-US>,and </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>variable</span></span><span lang=EN-US> are a property, method, or variable of the object respectively.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> NB: theobject can only have variables associated with it if it also has a timeline, sothis only applies to movie clip objects</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><spanclass=Code><span lang=EN-US style='font-family:Courier;'>myPath</span></span><span lang=EN-US> is anoptional path to the object if </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>myInstanceName</span></span><span lang=EN-US> is not onthe same timeline as the script. </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>myPathStart</span></span><i><span lang=EN-US>.</span></i><span class=Code><span lang=EN-US style='font-family:Courier;'>[expression]</span></span><span lang=EN-US> defines a dynamic path using dotnotation.</span></p><p class=MsoBodyText><i><span lang=EN-US> &nbsp;</span></i></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>myPathStart</span></span><span lang=EN-US> can be either </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_root</span></span><span lang=EN-US>  or </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>_parent</span></span><span lang=EN-US>, followed by </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>[expression]</span></span><span lang=EN-US> where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>expression</span></span><span lang=EN-US> evaluatesto a string of the form &quot;</span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>myPathFromMyPathStart.myInstanceName</span></span><span lang=EN-US> &quot;.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Compatiblewith </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Flash 5 and later</span></span><span lang=EN-US>. There are no known issues with this operator.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyTextIndent style='margin-left:14.2pt;'><span lang=EN-US> This </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>operator</span></span> allows<span lang=EN-US>  ActionScript to reference the different layers of an object hierarchy,or to navigate through the Flash timeline structure to reference a uniqueinstance. The path created can be absolute or relative, and can also be fixedor dynamic. Examples of all types of path are shown below.</span></p><p class=MsoBodyTextIndent style='margin-left:14.2pt'><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=276 valign=top style='width:207.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myClip._x =  20;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myObject.prop01  = 340;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to access properties</span></span><span lang=EN-US>.<span  class=Code>The property </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>_x</span></span><span  class=Code><span lang=EN-US>  of the movie clip</span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>myClip</span></span><span  class=Code><span lang=EN-US>  is set to 20.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> The property of the </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>Object</span></span><span  class=Code><span lang=EN-US>  object </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>myObject</span></span><span class=Code><span lang=EN-US> is set to 340.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> The path to both </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>myClip</span></span><span class=Code><span lang=EN-US> and </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>myObject</span></span><span class=Code><span lang=EN-US> is the timeline the code is attached to. If </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>myClip</span></span><span class=Code><span lang=EN-US> and </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>myObject</span></span><span class=Code><span lang=EN-US> do not exist on  the current timeline, then the script will fail silently and no error will be  issued by either the authoring environment or the Flash player during testing  or runtime.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myClip.gotoAndPlay(10);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>mySound.stop();</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to access method</span></span><span lang=EN-US>.<span  class=Code>The movie clip </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>myClip</span></span><span class=Code><span lang=EN-US> is made to go to  frame 10 and play using the movie clip object </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>gotoAndPlay()</span></span><span class=Code><span lang=EN-US> method. The sound  object </span></span><span class=Code><span lang=EN-US style='font-family:  Courier;'>mySound</span></span><span  class=Code><span lang=EN-US> is made to stop playing via the sound object </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>stop()</span></span><span class=Code><span lang=EN-US> method.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> Again, the path to both </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>myClip</span></span><span class=Code><span lang=EN-US> and </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>mySound</span></span><span class=Code><span lang=EN-US> is the timeline  the code is attached to.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_global.gVariable  = 2;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>gVariable +=3;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to define global variables</span></span><span lang=EN-US>.<span class=Code>The variable </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>gVariable</span></span><span class=Code><span lang=EN-US> is defined as existing on the </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_global</span></span><span class=Code><span lang=EN-US>  level. Subsequent references to </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>gVariable</span></span><span class=Code><span lang=EN-US> do not need to  refer to any path because </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>gVariable</span></span><span class=Code><span lang=EN-US> exists on all  timelines simultaneously. </span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> The code can exist on any timeline and within code  with any scope <i>except </i>if the  current scope also has a local variable also called </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>gVariable</span></span><span class=Code><i><span lang=EN-US>. </span></i></span><span class=Code><span lang=EN-US> You should avoid collisions between global and  non-global variables via an appropriate naming convention. See also </span></span><span  class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>_global</span></span><span class=Code><span lang=EN-US>.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_root.myClip._alpha  = 50;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_root.myClip01.myClip02._y  = 35;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_root._x = 45;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_level3.myClip03.gotoAndPlay(4);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to form absolute paths</span></span><span lang=EN-US>.<span class=Code>The script lines shown use </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_root</span></span><span class=Code><span lang=EN-US>  as the starting  point of the path. The paths are therefore relative to the &quot;base  level&quot; or &quot;absolute&quot;<i>. </i>You  should note that:</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:18.0pt;text-indent:-18.0pt;'><span class=Code><span  lang=EN-US style='font-family:Symbol;'>·<span  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span></span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>_root </span></span><span  class=Code><span lang=EN-US> can be treated as a movie clip in its own  right. The third line moves </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>_root</span></span><span  class=Code><span lang=EN-US>  by accessing and changing its </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_x</span></span><span class=Code><span lang=EN-US>  property.</span></span></p>  <p class=MsoBodyText style='margin-left:18.0pt;text-indent:-18.0pt;'><span class=Code><span  lang=EN-US style='font-family:Symbol;'>·<span  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  </span></span></span><span class=Code><span lang=EN-US> Where there are multiple loaded levels, </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_root</span></span><span class=Code><span lang=EN-US>  is the same as </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_level0</span></span><span class=Code><span lang=EN-US>. To refer to the main timeline of a loaded level, you should refer to  the level explicitly, as we do with the last example to reference </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>myClip03</span></span><span class=Code><i><span lang=EN-US>, </span></i></span><span class=Code><span lang=EN-US> which exists on the main timeline of </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_level3</span></span><span class=Code><span lang=EN-US>.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> The code can exist on any timeline because the paths  are absolute and not relative to the code position. This is useful when you  do not know the location of the target relative to your script, but it is  better to use <i>relative </i>paths  wherever possible because they are more general.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_parent.stop();</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_parent.parent.gotoAndPlay(5);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>this._x = 20;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_x = 20;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><b><span lang=EN-US> &nbsp;</span></b></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to form relative paths</span></span><span lang=EN-US>. <span class=Code>The </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>_parent</span></span><span  class=Code><span lang=EN-US>  path refers to &quot;the timeline below the  one the script is referring to&quot;. If the code is in a movie clip, then </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>_parent </span></span><span class=Code><span lang=EN-US> refers to the timeline the movie clip is on.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>this</span></span><span class=Code><span lang=EN-US> refers to the  current scope of the script. </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>this</span></span><span  class=Code><span lang=EN-US>  is <i>not </i>the  same as the timeline the script is attached to in all cases. See the entry  for </span></span><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>this</span></span><span class=Code><span lang=EN-US> for more  information.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> In both cases, the path uses the scope of the current  script as its starting point, making the</span></span><span lang=EN-US>  path relative to where we are now.</span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myVariable =  12;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myString =  &quot;myClip&quot;+myVariable;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_root[myString]._x  = 10;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myString2 =  &quot;myClip1&quot;;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>this[myString2]._alpha  = 20;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><b><span lang=EN-US> &nbsp;</span></b></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to form dynamic paths</span></span><span lang=EN-US>.<span class=Code> The </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>[]</span></span><span class=Code><span lang=EN-US>  brackets can be  used to add variables to the path. The third line will form the path:</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>_root.myClip12._x  = 10;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> and the 5<sup>th</sup> line will form the path:</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>this.myClip1._alpha  = 20;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr> <tr>  <td width=276 valign=top style='width:207.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>x =  Math.abs(-10);</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myObject = new  Object();</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myObject.prop1  = 2;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>myObject.prop2  = 4;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'>y =  myObject.prop1+myObject.prop2;</span></span></p>  </td>  <td width=295 valign=top style='width:221.4pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><b><span lang=EN-US> &nbsp;</span></b></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=ImportantWord><span  lang=EN-US style='font-family:Helvetica;'>Using dot  notation to access the object hierarchy</span></span><span lang=EN-US>. <span class=Code>The paths above refer to timelines. More  specifically, they refer to the movie clip object. This is really just a  special case of the </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>Object.property.subproperty</span></span><span  class=Code><span lang=EN-US>  and </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>Object.method</span></span><span  class=Code><span lang=EN-US>  hierarchy.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> The first line uses the </span></span><span  class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Math Objects</span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>abs()</span></span><span  class=Code><span lang=EN-US>  method. The next 3 lines create an object  with two properties </span></span><span class=Code><span lang=EN-US  style='font-family:Courier;'>prop1</span></span><span class=Code><span lang=EN-US> and </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>prop2</span></span><span class=Code><span lang=EN-US> (and you can see the </span></span><span class=Code><span  lang=EN-US style='font-family:Courier;'>myObject</span></span><span  class=Code><span lang=EN-US>  hierarchy below:</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span  lang=EN-US style='font-family:Courier;'><img width=113 height=79  src="../png/0586_dict1_03.png"></span></span></p>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>   <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> The final line uses the dot path notation to access  the property values and assign them to variable </span></span><span  class=Code><span lang=EN-US style='font-family:Courier;'>y</span></span><span class=Code><span lang=EN-US>.</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'><span class=Code><span lang=EN-US> &nbsp;</span></span></p>  <p class=MsoBodyText style='margin-left:0cm'>&nbsp;</p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> The usesof the.</span><span class=Code><span lang=EN-US style='font-family:Courier;'></span></span><span lang=EN-US>  operator are described as follows.</span></p><h4><span lang=EN-US> Motion Graphics</span></h4><p class=MsoBodyText><span lang=EN-US> The useof paths is essential in the control of ActionScript based animation, becauseit allows you to access properties directly. Changing such properties on thegraphic objects will result in animation.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Creatingan instance </span><span class=Code><span lang=EN-US style='font-family:Courier;'>ball</span></span><span lang=EN-US> on frame 1 of </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>_root</span></span><span lang=EN-US>  and then adding this script on thesame frame will animate it:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>_root.ball._x = 0;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>_root.ball._y = 0;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>_root.ball.onEnterFrame = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   this._x++;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   this._y++;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thisscript will cause the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>ball</span></span><span lang=EN-US> instance tomove from the top left hand corner of the stage towards the bottom right in adiagonal path. Notice that the dot operator is used to access the instanceitself and its properties and to define the </span><span class=ImportantWord><spanlang=EN-US style='font-family:Helvetica;'>onEnterFrame</span></span><span lang=EN-US> method ofthe movie clip. Outside the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>onEnterFrame</span></span><span lang=EN-US> script, weare using the path </span><span class=Code><span lang=EN-US style='font-family:Courier;'>ball</span></span><span lang=EN-US>, but because the scope of the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onEnterFrame</span></span><span lang=EN-US> is </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>_root.ball</span></span><i><span lang=EN-US>, </span></i><span lang=EN-US> we can usethe current scope via </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>this</span></span><span lang=EN-US>. See the example </span><spanclass=FileName><span lang=EN-US style='font-family:Courier;'><a href="../fla/(dotoperator).fla">(dotoperator).fla</a></span></span><span lang=EN-US>  and </span><span class=FileName><spanlang=EN-US style='font-family:Courier;'><ahref="../swf/(dotoperator).swf">(dotoperator).swf</a></span></span><span lang=EN-US>  .</span></p><p class=MsoBodyText><i><span lang=EN-US> &nbsp;</span></i></p><p class=MsoBodyText><span class=Code><span lang=EN-US> The dynamic form ofdot notation is useful for forming general paths, and is particularly usefulfor forming paths to movie clips where there are many almost identical paths.Given that the </span></span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>ball</span></span><span class=Code><span lang=EN-US> instance in the lastexample is on the stage at </span></span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>_root</span></span><spanclass=Code><span lang=EN-US>, the following code will create 10 instances ofit and give each one an </span></span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>onEnterFrame</span></span><span class=Code><span lang=EN-US> event script thatanimates it.</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US> &nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>for (i=0; i&lt;10; i++) {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  ball.duplicateMovieClip(&quot;ball&quot;+i, i);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  _root[&quot;ball&quot;+i].onEnterFrame = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      this._x+= Math.random()*5;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>      this._y+= Math.random()*5;</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>   };</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>}</span></span></p><h4><span lang=EN-US> Programming</span></h4><p class=MsoBodyText><span lang=EN-US> The dotnotation path structure is used to access all standard ActionScript methods,plus methods for any Object objects you may define yourself (or additionalmethods/properties you may define for the standard Flash objects via the Objectprototype chain and </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>registerClass()</span></span><span lang=EN-US> ). See the examples above for thebasic </span><span class=Code><span lang=EN-US style='font-family:Courier;'>Object</span></span><span lang=EN-US>  object definition and accessing the new object via dot notation.</span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span class=Code><span lang=EN-US> The old Flash 4&quot;slash&quot; syntax is known to be slightly faster than dot notation. Youcan specify a slash notation path to a movie clip target by using the </span></span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Insert Target Path</span></span><span class=Code><span lang=EN-US> window, which is accessed by hitting the crosshairicon on the Actions panel toolbar. Slash notation is much less flexible thandot notation (which is probably the reason for its slightly better performance;it is probably serviced by lower level code in the Flash player).</span></span></p>