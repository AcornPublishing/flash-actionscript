<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1><a name="_Toc12874609"><span lang=EN-US> Button.onKeyDown</span></a></h1><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>instanceName.onKeyDown = functionName;</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Where </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>instanceName</span></span><span lang=EN-US> is theinstance name of a Button, and </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>functionName</span></span><span lang=EN-US> is afunction containing the code you wish to execute every time the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> buttonevent occurs.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>event handler</span></span><span lang=EN-US>  is </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>compatible with Flash 6</span></span><span lang=EN-US>  or later. Previous versions ofFlash did not support the use of function references as call-backs, so thisform of event handler script was not supported. For adding button events tobuttons in Flash 5 and previous versions, see the </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>on</span></span><span lang=EN-US> action. This event requires the SWF to have browser focus and the button tohave input focus before any keypresses will be seen.</span></p><h3><span lang=EN-US> Description</span></h3><p class=MsoBodyText><span lang=EN-US> Flashbuttons generate <i>events </i>every time amouse interaction occurs with respect to a button. For something to happen whenan event occurs, you must define a script that you want to execute in responseto the event, and this script is called the <i>eventhandler. </i>To understand the operation of </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Button.onKeyDown</span></span><span lang=EN-US>  requires two things; anunderstanding of the <i>event </i>and how toset up the <i>event handler.</i></span></p><h4><span lang=EN-US> The event</span></h4><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> event willbe invoked when a key is pressed down whilst the button has input focus. Thenormal way to give a button input focus is to press the </span><spanclass=Keyboard><span lang=EN-US style='font-family:"New York";'>TAB</span></span><span lang=EN-US>  keyuntil the button gets focus, and a yellow box is seen around the button(assuming normal Flash defaults).</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thisevent will never occur if the button is the only thing on screen with theability to take input focus (you would normally use input focus on a screenwith a mixture of buttons and input </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>textFields</span></span><span lang=EN-US>  on screen.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The eventwill occur every frame the key is held down. The event will not capture thename of the key(s) that is/are been pressed, although you can retrieve this byusing other methods (see following examples).</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKeyUp</span></span><span lang=EN-US> event willalso occur following the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>onKeyDown</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> It willoccur when you release the key, and will occur once per key release<i>. </i>See also </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Button.onKeyUp</span></span><span lang=EN-US>.</span></p><h4><span lang=EN-US> The event handler</span></h4><p class=MsoBodyText><span lang=EN-US> The </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Button.onKeyDown</span></span><span lang=EN-US> eventhandler definition is used to identify the code that will act as the event handlerwhen the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> event occurs. This code is definedas a function. When a function is used as an event handler, it is known as a <i>call-back</i>, a term inherited fromJavaScript.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If no call-back is defined, the </span><spanclass=Code><span lang=EN-US style='font-family:Courier'>onKeyDown</span></span><span lang=EN-US> event will do nothing.</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> If a call-back is defined, thefunction will run once every time the </span><span class=Code><span lang=EN-USstyle='font-family:Courier'>onKeyDown</span></span><span lang=EN-US> event occurs.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> If youwant to respond to specific keys, your call-back will have to recognize thelast key pressed. See the following examples on how to do this.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr>  <td width=300 valign=top style='width:225.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Code</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=240 valign=top style='width:180.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=ImportantWord><span lang=EN-US  style='font-family:Helvetica;'>Notes</span></span></p>  </td> </tr> <tr>  <td width=300 valign=top style='width:225.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>function myFunction() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    message = &quot;you pressed  &quot;+String.fromCharCode(Key.getAscii());</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(message);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>}</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKeyDown = myFunction;</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=240 valign=top style='width:180.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines </span><span class=Code><span lang=EN-US style='font-family:  Courier;'>myFunction</span></span><span lang=EN-US> as the call-back for the button </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>my_Btn</span></span><span lang=EN-US>.</span></p>  </td> </tr> <tr>  <td width=300 valign=top style='width:225.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKeyDown = function() {</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    message = &quot;you pressed  &quot;+String.fromCharCode(Key.getAscii());</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>    trace(message);</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>};</span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=240 valign=top style='width:180.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script defines an anonymous call-back function for the button instance </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>my_btn</span></span><i><span lang=EN-US>. </span></i><span lang=EN-US> The script doesn’t define a function name,  but actually defines the body of the function itself, linking it to the  event.</span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr>  <td width=300 valign=top style='width:225.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>&nbsp;</span></span></p>  <p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:  Courier;'>my_btn.onKeyDown = undefined;</span></span></p>  </td>  <td width=240 valign=top style='width:180.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0cm 5.4pt 0cm 5.4pt'>  <p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p>  <p class=MsoBodyText><span lang=EN-US> This  script un-defines a previously defined call-back. You can also set it to </span><span  class=Code><span lang=EN-US style='font-family:Courier;'>null</span></span><span lang=EN-US>  to  achieve the same effect.</span></p>  <p class=MsoBodyText><span lang=EN-US>  </span></p>  </td> </tr></table><h3><span lang=EN-US> Examples and practicaluses</span></h3><p class=MsoBodyText><span lang=EN-US> If youonly want to allow the user to hit the </span><span class=Keyboard><spanlang=EN-US style='font-family:"New York";'>ENTER</span></span><span lang=EN-US>  key as part of a form, you are muchbetter off using the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>onRelease</span></span><span lang=EN-US> event. See also </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica;'>Button.onRelease</span></span><span lang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> You arenot recommended to use the </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> event tocapture any other key-presses on the keyboard because the user will notnormally have any feedback about which keys they have pressed if the inputfocus is a button.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Further,if you want to detect multiple keyboard presses that may occur at any time (andnot just when the button has input focus), you are recommended to try adifferent keypress detection method, because it is unlikely that a button willever have focus and retain it indefinitely in normal operation. Options forthis different method include:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Setting up a listener to handlekeyboard inputs (Flash MX only).</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Using the old Flash 2/3/4/5 event model(using </span><span class=ImportantWord><span lang=EN-US style='font-family:Helvetica'>on(KeyisDown)</span></span><span lang=EN-US>  or </span><spanclass=ImportantWord><span lang=EN-US style='font-family:Helvetica'>onClipEvent(KeyDown)</span></span><span lang=EN-US> ) for single key presses of specific keys.</span></p><h3><span lang=EN-US> Tips and precautions</span></h3><p class=MsoBodyText><span lang=EN-US> It iscommon to want to detect key-presses when the SWF has Browser focus, but notany specific input focus.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Thefollowing code will detect both </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>onKeyUp</span></span><span lang=EN-US> and </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> events bysetting up an </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>Object</span></span><span lang=EN-US>  object, registering it as alistener, and defining </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>onKeyUp</span></span><span lang=EN-US> and </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> call-backs,and you are better off using something like this if you want to test forspecific key-presses irrespective of whether any button/textField/MovieClip hasinput focus:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>keyListener = new Object();</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>keyListener.onKeyDown = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  trace(&quot;you pressed a key&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>KeyListener.onKeyUp = function() {</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>  trace(&quot;you released a key&quot;);</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>};</span></span></p><p class=MsoBodyText><span class=Code><span lang=EN-US style='font-family:Courier;'>Key.addListener(keyListener);</span></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> You shouldnote that the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>onKeyDown</span></span><span lang=EN-US> event will not be detected unless:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> The SWF the button is in has <i>browser focus.</i></span></p><p class=Bullet-Level1><spanlang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> The SWF has <i>input focus </i>within the SWF</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> Youshould note that testing input focus and </span><span class=Keyboard><spanlang=EN-US style='font-family:"New York";'>TAB</span></span><span lang=EN-US>  key ordering is best achieved byviewing the HTML embedded SWF from a browser. Viewing the tab order whilsttesting in the Flash authoring environment or directly via the stand-aloneFlash player may give spurious results. In particular, testing the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>onKeyUp</span></span><span lang=EN-US> /</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Down</span></span><span lang=EN-US>  functionality may not work properlyif you are testing the FLA in the Flash environment because the environment maytrap certain key-presses and not pass them on to the SWF under test. This will,for example occur if you hit </span><span class=Keyboard><span lang=EN-USstyle='font-family:"New York";'>ENTER</span></span><span lang=EN-US>, which the environment sees as theshortcut for </span><span class=ImportantWord><span lang=EN-USstyle='font-family:Helvetica;'>Control &gt; Play</span></span><span lang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> This Buttonevent must be inside a SWF that has Browser focus, and the button itself musthave input focus before this event will be detected by the button. For thoseunsure of the difference between browser focus and input focus, the followingdescriptions may be useful.</span></p><h4><span lang=EN-US> Browser focus</span></h4><p class=MsoBodyText><span lang=EN-US> Any frameor separate media stream embedded within a HTML document has to have browserfocus before it can detect keyboard inputs. This is an intentional feature tosafeguard the user. Without it, it would be possible for a user to be inputtingdata into a HTML document containing a form, whilst unknown to him, a separateelement on the same page (such as a banner advert) could be trapping the samekeyboard inputs and using them without the user's consent. To combat this, nodocument or embedded media stream can have browser focus unless it isspecifically clicked on. A Flash SWF will not be able to respond to any buttonclicks unless it has this browser focus, and this is gained by making the userclick on the SWF at least once.</span></p><h4><span lang=EN-US> Input Focus</span></h4><p class=MsoBodyText><span lang=EN-US> Withinthe Flash SWF, there are a number of elements that may be able to listen to andaccept user key-presses. Normally, the user is filling in a form (or similar),and they want to access the elements (typically </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>textFields</span></span><span lang=EN-US>  with associated &quot;accept&quot; buttons)separately and in some kind of sequence. This sequence is called the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>tabOrder</span></span><span lang=EN-US>, and the current element that isable to listen to the user key-presses is said to have <i>input focus.</i></span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> InputFocus can be captured by an onscreen </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>textField</span></span><span lang=EN-US>, </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>Button</span></span><span lang=EN-US>, or movie clip by:</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Theuser selecting a </span><span class=Code><span lang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US>  by clicking on it (irrespective of whether the</span><span class=Code><span lang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US> is actually set up to allow user input – If it isn’t, the Input Focus willstill go to the </span><span class=Code><span lang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US>  and the appropriate events will occur, but thekey-presses will not be echoed in that </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US> )</span></p><p class=MsoBodyText style='margin-left:36.0pt;text-indent:-18.0pt;'><spanlang=EN-US style='font-family:Symbol;'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span><span lang=EN-US> Abutton/movie clip or </span><span class=Code><span lang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US>  has its </span><span class=Code><spanlang=EN-US style='font-family:Courier;'>tabEnabled</span></span><span lang=EN-US>  property as </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>true</span></span><span lang=EN-US>  (this is the default case) and theuser has hit the </span><span class=Keyboard><span lang=EN-US style='font-family:"New York";'>TAB</span></span><span lang=EN-US>  key until the button/movie clip is highlighted(this highlighting is a yellow bounding box by default) or the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>TextField</span></span><span lang=EN-US>  appears selected, with the textentry cursor flashing inside it. The </span><span class=Code><span lang=EN-USstyle='font-family:Courier;'>Button</span></span><span lang=EN-US> /</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>MovieClip</span></span><span lang=EN-US> /</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US>  events will now have input focus,and the key-press stream will generate the appropriate events within the </span><spanclass=Code><span lang=EN-US style='font-family:Courier;'>Button</span></span><span lang=EN-US> /</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>MovieClip</span></span><span lang=EN-US> /</span><span class=Code><spanlang=EN-US style='font-family:Courier;'>textField</span></span><span lang=EN-US>.</span></p><p class=MsoBodyText><span lang=EN-US> &nbsp;</span></p><p class=MsoBodyText><span lang=EN-US> As notedabove, the listener set up above would only require Browser focus to startworking.</span></p>