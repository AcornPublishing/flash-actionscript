<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>MovieClip.hitTest</h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip._hitTest( target )</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myMovieClip._hitTest( x, y, shape )</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myMovieClip</span></span>is a movie clip instance, <span class=Code><span style='font-family:Courier'>target</span></span>is the target path of the hit area, <span class=Code><span style='font-family:Courier'>x</span></span> and <span class=Code><span style='font-family:Courier'>y</span></span>are the coordinates of the hit area, and <span class=Code><spanstyle='font-family:Courier'>shape</span></span> is a Boolean signifying whetherto evaluate the entire shape of the clip (<span class=Code><spanstyle='font-family:Courier'>true</span></span>) or just the bounding box (<spanclass=Code><span style='font-family:Courier'>false</span></span>). <spanclass=Code><span style='font-family:Courier'>shape</span></span> can only bespecified if the <span class=Code><span style='font-family:Courier'>x</span></span>and <span class=Code><span style='font-family:Courier'>y</span></span> are. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Compatiblewith Flash 5 and later.</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>MovieClip.hitTest()</span></span>method checks a movie clip to see if it overlaps a hit area andreturns a Boolean indicating the result.</p><h3>Description</h3><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>MovieClip.hitTest()</span></span>provides the ability to perform collision detection between either two movieclips or between a point and a movie clip. The method returns a Boolean valuethat is <span class=Code><span style='font-family:Courier'>true</span></span>for a collision, and <span class=Code><span style='font-family:Courier'>false</span></span>otherwise.</p><h4>Collision detection between two movie clips</h4><p class=MsoBodyText>Movie clip collision detection between two movie clips iscalculated based on movie clip bounding boxes. Two movie clips are in collisionif the bounding boxes overlap. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The usual code to use this form is:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(movieClip1.hitTest(movieClip2)) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    // code to handle collision</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    // goes here</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>If a collision is detected, the method will give <spanclass=Code><span style='font-family:Courier'>true</span></span>, causing the ‘<spanclass=Code><span style='font-family:Courier'>code to handle collision</span></span>’script to be executed. </p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>You can see this effect interactively via the example file<a href="../fla/mchittestex01.fla">mchittestex01.fla</a> / <ahref="../swf/mchittestex01.swf">mchittestex01.swf</a>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=400 height=205src="../png/0586-dict8-73.png"></p><p class=Picturereference>&nbsp;</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The collision detection code for this animation looks likethis:</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>star1.onEnterFrame= function() {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    if (this.hitTest(star2)) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        message.text = &quot;hit&quot;;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    } else {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        message.text = &quot;&quot;;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    }</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>};</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The code checks for a collision between <span class=Code><spanstyle='font-family:Courier'>star1</span></span>and <span class=Code><span style='font-family:Courier'>star2</span></span>. Both star clips are draggable. Ifthe bounding boxes overlap you will see the message ‘hit’.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>As you will see, this code gives very rough collisiondetection accuracy. The condition illustrated below is a valid collision forexample, because the bounding boxes overlap, although the two graphicsobviously do not!</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=400 height=281src="../png/0586-dict8-74.png"> </p><p class=Picturereference><span class=Code> </span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This is not actually as useless as it might initiallyseem. Most of the old 8 bit gaming classics (space invaders, Defender, et all)got round this issue by either:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Makingthe graphics fast so that you could not see that the collisions were basedaround bounding boxes rather than the actual shapes.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Makingthe graphics fill their bounding boxes. If you look at some of the old retroartwork that went into early motion graphics, you will see that they aredesigned within the limitations of the time. Fast sprite collision detectionwas only possible with bounding boxes, so the graphics were designed to filltheir bounding boxes (so that it is impossible to hit the bounding box and missthe graphic) <i>in the direction they weremost likely to be hit. </i>The space invaders seen here were most likely to behit from below by a bullet moving upwards from the player. Notice how thepixels fill the bounding box in this direction so that <i>it looks like shape collision rather than bounding box collision istaking place.</i></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=200 height=140src="../png/0586-dict8-80.png"> <spanclass=Code><b><span style='color:red'> </span></b></span><img border=0 width=200 height=93src="../png/0586-dict8-79.png"><span class=Code><b><span style='color:red'> </span></b></span></p><h4>Collision detection between a point and a movie clip</h4><p class=MsoBodyText>Collision detection between a point and a movie clip hastwo forms. The first one detects collisions between a point and a movie clipbounding box. The general code used is very similar to the last one:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(clip1.hitTest(x, y, false)) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    // code to handle collision</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    // goes here</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>shape</span></span>argument is <span class=Code><spanstyle='font-family:Courier'>false</span></span>, and this tells Flash to usethe bounding box of the movie clip <span class=Code><span style='font-family:Courier'>clip1</span></span>.You can see this in the interactiveexample file <a href="../fla/mchittestex03.fla">mchittestex03.fla</a> / <ahref="../swf/mchittestex03.swf">mchittestex03.swf</a>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=350 height=486src="../png/0586-dict8-75.png"></p><p class=Picturereference><span class=Code> </span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>clip1</span></span>is the black areas, and the point (<spanclass=Code><span style='font-family:Courier'>x</span></span>, <span class=Code><spanstyle='font-family:Courier'>y</span></span>) is represented by the crosshaircursor. You will see that <span class=Code><span style='font-family:Courier'>clip1</span></span>is taken to be the much simplerbounding box shape.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This form of <span class=Code><span style='font-family:Courier'>hitTest</span></span> is not often used.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The real gem is the final form:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>if(clip1.hitTest(x, y, true)) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    // code to handle collision</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    // goes here</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>}</span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>As soon as you set the <span class=Code><spanstyle='font-family:Courier'>shape</span></span>parameter to <span class=Code><span style='font-family:Courier'>true</span></span>,Flash now checks for collisions between the point (<span class=Code><spanstyle='font-family:Courier'>x</span></span>,<span class=Code><spanstyle='font-family:Courier'>y</span></span>) <i>and non zero pixels in the movie clip </i><span class=Code><spanstyle='font-family:Courier'>clip1</span></span><i>. </i>There is no other way to test for collisions to pixel accuracythan using this form of <span class=Code><span style='font-family:Courier'>hitTest</span></span>.You can see this method in operation in the file <ahref="../fla/mchittestex02.fla">mchittestex02.fla</a> / <ahref="../swf/mchittestex02.swf">mchittestex02.swf</a>.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This time, the test gives <span class=Code><spanstyle='font-family:Courier'>true</span></span>only when the cursor is actually over the pixels of the movie clip:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=350 height=486src="../png/0586-dict8-76.png"><span class=Code><b><span style='color:red'> </span></b></span></p><p class=MsoBodyText><img border=0 width=350 height=486src="../png/0586-dict8-77.png"><span class=Code><b><span style='color:red'> </span></b></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The issue that confuses most users is that you cannotperform pixel perfect collision detection between two movie clips; you can onlydo it between a point and a movie clip.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This is not actually an abnormal situation; in most othermotion graphics fields you cannot detect a collision between two objectsaccurately; you have to test for a collision between a point and an edge:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Mostobjects are most likely to collide with any other object in the line they arecurrently traveling in. You do not have to test for a speeding car getting hitfrom behind, and even when you do, the car that hits it will usually do so withits front bumper.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Mostgames actually check for collisions between a number of points and an edge.Even in the latest third person shooters such as Quake III, collision detectionoccurs between the <i>points </i>that makeup a player character and the surroundings, and not the player <i>outline </i>(<span class=Code><spanstyle='font-family:Courier'>shape</span></span>)and the surroundings.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Generally, the art of good collision detection involves:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Choosingthe collision points so that it looks like the collision detection is occurringbetween two shapes rather than a point and a shape.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Makingthe collision detections look accurate (even if they are not) by modifying thegraphics.</p><h3>Examples and practical uses</h3><p class=MsoBodyText><span class=Code>There are a number of files that show animatedcollision detection. See the example file for </span><spanclass=ImportantWord><span style='font-family:Helvetica'>Arguments.caller</span></span><spanclass=Code>for an example of collision detection with shape detection. The code that makesthe collision detection is:</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    if (ground_mc.hitTest(this._x, this._y,true)) {</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this.speedY =elasticity(-this.speedY);</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>        this._y = this._y-5;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    }</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>If the ball hits the ground (</span><spanclass=Code><span style='font-family:Courier'>ground_mc</span></span><spanclass=Code>)then its speed is reversed (this is what the minus sign in </span><spanclass=Code><span style='font-family:Courier'>this.speedY =elasticity(-this.speedY)</span></span><span class=Code> does).</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code>Notice also that the point we are using for thecollision detection is at the </span><span class=ImportantWord><spanstyle='font-family:Helvetica'>bottom</span></span><span class=Code>of each ball. As we said earlier, a fast cartends to hit things from the front. In the same way, a bouncing ball tends tohit things when it is traveling downwards.</span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'><img border=0 width=80 height=75src="../png/0586-dict8-82.png"></span></span></p><p class=Picturereference><span class=Code> </span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>&nbsp;</span></span></p><p class=MsoBodyText>See also the example file for <span class=ImportantWord><spanstyle='font-family:Helvetica'>case</span></span>. This shows how powerful (andfast) collision detection between a movie clip and a point can be.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=400 height=281src="../png/0586-dict8-83.png"></p><p class=Picturereference><span class=Code> </span></p><h3>Tips and precautions</h3><p class=MsoBodyText>Remember that Flash will give a true collision detectionirrespective of whether you can actually see the colliding pixels or not; azero alpha pixel counts as a pixel even if the user cannot see it!</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Although you can only test for collisions between twomovie clips (or a movie clip and a point), this is not as limiting as itsounds, because your movie clip can have as many movie clips as you want insideit! If you want to check for collision detection between a point <spanclass=Code><span style='font-family:Courier'>a</span></span>and 5 movie clips <span class=Code><spanstyle='font-family:Courier'>b</span></span>, <span class=Code><spanstyle='font-family:Courier'>c</span></span>, <span class=Code><spanstyle='font-family:Courier'>d</span></span>, <span class=Code><spanstyle='font-family:Courier'>e</span></span> and <span class=Code><spanstyle='font-family:Courier'>f</span></span>, simply place the 5 movie clips <spanclass=Code><span style='font-family:Courier'>b</span></span> to <span class=Code><spanstyle='font-family:Courier'>f</span></span>in a movie clip <span class=Code><span style='font-family:Courier'>g</span></span>and test for a collision between <spanclass=Code><span style='font-family:Courier'>a</span></span>and <span class=Code><spanstyle='font-family:Courier'>g</span></span>.</p>