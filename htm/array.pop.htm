<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>Array.pop </h1><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myLastElement= myArray.pop(); </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>MyArray </span></span>is an array, and <span class=Code><spanstyle='font-family:Courier'>myLastElement </span></span>is a variable that will be returned with the last element in <spanclass=Code><span style='font-family:Courier'>myArray. </span></span></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 5 or later. </span></span>It returns the value of the last element in an array, and deletes that element.The length of the array is reduced by one because of this.</p><h3>Description</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>pop </span></span>method ‘pops’ the last value in an array. It returns this value before deletingthe element containing it. If you have an array <span class=Code><spanstyle='font-family:Courier'>myArray, </span></span>then <span class=Code><span style='font-family:Courier'>val =myArray.pop() </span></span>willdelete the last element in the array (which you can also access before the popby reading <span class=Code><span style='font-family:Courier'>myArray[myArray.length-1] </span></span>).See also <span class=ImportantWord><spanstyle='font-family:Helvetica'>Array.length. </span></span></p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=264 valign=top style='width:198.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=240 valign=top style='width:2.5in;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=264 valign=top style='width:198.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>days = [&quot;mon&quot;, &quot;tue&quot;, &quot;wed&quot;]; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>lastDay = days.pop(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(lastDay); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>trace(days); </span></span></p>  </td>  <td width=240 valign=top style='width:2.5in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The second line will make <span class=Code><span  style='font-family:Courier'>lastDay </span></span>equal to <span class=Code><span style='font-family:Courier'>“wed”, </span></span> and then remove <span class=Code><span style='font-family:Courier'>“wed” </span></span> from the array <span class=Code><span style='font-family:Courier'>days. </span></span>The output from this code is shown below:</p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=135 height=123  src="../png/0586-dict2-25.png"></p>    <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=264 valign=top style='width:198.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>days = [&quot;mon&quot;, &quot;tue&quot;, &quot;wed&quot;]; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>days.pop(); </span></span></p>  </td>  <td width=240 valign=top style='width:2.5in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>If you want to simply discard the last element without reading it, you can simply use <span class=Code><span style='font-family:  Courier'>myArry.pop() </span></span>without assigning the result to a variable.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>After line 2:</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>days = [“mon”, “tue”] </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=264 valign=top style='width:198.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>days = [&quot;mon&quot;, &quot;tue&quot;, &quot;wed&quot;]; </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>while (days.length&gt;0) { </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      lastDay = days.pop(); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>      trace(lastDay); </span></span></p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p>  </td>  <td width=240 valign=top style='width:2.5in;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText><i>&nbsp;</i></p>  <p class=MsoBodyText>This shows how you can use the <span  class=ImportantWord><span style='font-family:Helvetica'>Array.length </span></span>property within a loop to make sure that you pop each element in turn from array <span class=Code><span  style='font-family:Courier'>days. </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Note that there is no guarantee that all elements popped from an array in this way will be defined.</p>  <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>Also, note that the array elements are popped from the end rather than the start, so your <span class=Code><span style='font-family:  Courier'>lastDay </span></span>values will be backwards, as shown by the output from this code:</p>  <p class=MsoBodyText>&nbsp;</p>      <p class=MsoBodyText><img width=156 height=133  src="../png/0586-dict2-26.png"></p>    <p class=MsoBodyText> </p>  </td> </tr></table><p class=MsoBodyText>&nbsp;</p><h3>Examples and practical uses</h3><p class=MsoBodyText>The <span class=Code><span style='font-family:Courier'>Array.pop </span></span>and <span class=ImportantWord><span style='font-family:Helvetica'>Array.push </span></span>methods can be used to create a last in first out (LIFO) buffer if you arereceiving data from a remote location and want to process the data, most recentfirst. An undo buffer is also a LIFO buffer, and the files <ahref="../fla/arraypoppush.fla">arraypoppush.fla</a>/ <a href="../swf/arraypoppush.swf">arraypoppush.swf</a>show an example of <span class=ImportantWord><span style='font-family:Helvetica'>Array.length, </span></span><span class=Code><span style='font-family:Courier'>Array.pop, </span></span>and<span class=ImportantWord><span style='font-family:Helvetica'>Array.push </span></span>used together to create an undo buffer for a simple Flash-based draw program.</p><h3>Tips and precautions</h3><p class=MsoBodyText>You can also add elements to the end of an array with <spanclass=ImportantWord><span style='font-family:Helvetica'>Array.push. </span></span></p>