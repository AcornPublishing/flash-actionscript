<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><link rel="stylesheet" href="desref.css" type="text/css"></head><h1>F<i>Component</i>.setRowCount</h1><p class=MsoBodyText>(This method is applicable to <span class=Code><spanstyle='font-family:Courier;'>FComboBox.setRowCount </span></span>and <span class=Code><span style='font-family:Courier;'>FListBox.setRowCount. </span></span>)</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myComponent.setRowCount(rowCount); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-size:8.0pt;'>  </span></span></p><p class=MsoBodyText>Where <span class=Code><span style='font-family:Courier'>myComponent </span></span>is a combo box or list box instance. The integer <span class=Code><spanstyle='font-family:Courier'>rowCount </span></span>specifies the maximum numberof labels can be shown at any one time.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>This method is <span class=ImportantWord><spanstyle='font-family:Helvetica'>compatible with Flash 6. </span></span></p><h3>Description</h3><p class=MsoBodyText>This method allows you to dynamically set the row count ofa list box or combo box. This allows you to grow or shrink the component sothat all the available options can always be seen without having to usescrollbars. The effects of this are best seen by reviewing the example filedescribed in the Examples and practical uses section.</p><p class=MsoBodyText>&nbsp;</p><table border=1 cellspacing=0 cellpadding=0 style='margin-left:14.2pt; border-collapse:collapse;border:none;'> <tr> <td width=360 valign=top style='width:270.2pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Code </span></span></p>  <p class=MsoBodyText>&nbsp;</p>  </td>  <td width=180 valign=top style='width:135.0pt;border-top:solid windowtext .5pt;  border-left:none;border-bottom:solid windowtext .5pt;border-right:none;  padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=ImportantWord><span style='font-family:Helvetica'>Notes </span></span></p>  </td> </tr> <tr> <td width=360 valign=top style='width:270.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myListBox.setRowCount(10); </span></span></p>  </td>  <td width=180 valign=top style='width:135.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The row count for the list box instance <span  class=Code><span style='font-family:Courier'>myListBox </span></span>will be set to 10. This means that the list box will grow to 10 labels in size. It will do this even if there are less than 10 labels to display.</p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr> <tr> <td width=360 valign=top style='width:270.2pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText><span class=Code><span style='font-family:Courier'>myComboBox.setRowCount(10); </span></span></p>  </td>  <td width=180 valign=top style='width:135.0pt;border:none;border-bottom:solid windowtext .5pt;padding:0in 5.4pt 0in 5.4pt'> <p class=MsoBodyText>&nbsp;</p>  <p class=MsoBodyText>The combo box <span class=Code><span style='font-family:  Courier'>myComboBox </span></span>’s drop-down menu will grow to accommodate either the current number of labels (if it is less than 10) or 10 labels (if there are 10 or more labels). Note that the combo box behaves slightly differently to the list box; the combo does not grow to accommodate empty label positions, whereas the list box does. </p>  <p class=MsoBodyText>&nbsp;</p>  </td> </tr></table><h3>Examples and practical uses</h3><p class=MsoBodyText>When displaying more labels than either a combo box orlist box can show at once, it is normal for the component to start using ascroll bar:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=114 height=111src="../png/0586-dict5-57.png"> <b><span style='color:red'></span></b><img width=116 height=166src="../png/0586-dict5-58.png"><b><spanstyle='color:red'>  </span></b></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Sometimes, you may prefer to let the component grow ratherthan rely on scrollbars:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img width=111 height=272src="../png/0586-dict5-59.png"> <b><span style='color:red'> </span></b><img width=112 height=291src="../png/0586-dict5-60.png"><b><spanstyle='color:red'>  </span></b></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>Not only does the omission of scrollbars result in lesscomplex looking components, it also uses more of the available space and allowsthe user to see the available options at a glance. See also the example files <ahref="../fla/fcomponentsetrowcount.fla">fcomponentsetrowcount.fla</a>and <ahref="../swf/fcomponentsetrowcount.swf">fcomponentsetrowcount.swf</a>.This shows a full list box and an empty combo box:</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><img border=0 width=308 height=270src="../png/0586-dict5-61.png"></p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>As you click on the labels in the list box, they areremoved form the list box and placed in the combo box. This emulates the wayyou would add/remove options if you were creating your content optionsdynamically. As you do this, the list box will shrink, and the combo boxdrop-down will grow, and you will never see a scrollbar appear on either.</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText>The code to do this is as shown (the function <spanclass=Code><span style='font-family:Courier'>transfer </span></span>is set upas the <span class=Code><span style='font-family:Courier'>onChange </span></span>handler of the combo box):</p><p class=MsoBodyText>&nbsp;</p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>functiontransfer() { </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    selected = listBox.removeItemAt(listBox.getSelectedIndex()); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    combo.addItem(selected.label,selected.data); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    rowCount++; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>    listBox.setRowCount(16-rowCount); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>} </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>rowCount= 0; </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>listBox.setRowCount(16); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>combo.setRowCount(16); </span></span></p><p class=MsoBodyText><span class=Code><span style='font-family:Courier'>listBox.setAutoHideScrollBar(true); </span></span></p><h3>Tips and precautions</h3><p class=MsoBodyText>There are a number of points to notice from the exampleabove, and all of them are important (but not obvious) in understanding how the<span class=Code><span style='font-family:Courier'>setRowCount </span></span>method works:</p><p class=MsoBodyText>&nbsp;</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Thelist box will grow to the actual row count you specify. You therefore have toconstantly increase/decrease it to accommodate the number of labels the listbox has to show.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Thecombo box will grow to show either the number of labels <i>or </i>the row count <i>whichever isthe lower. </i>This means that for a combo, the process is much easier. Simplyset <span class=Code><span style='font-family:Courier'>rowCount </span></span>to the maximum value, and the combo will take care of the rest.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Thescrollbar on a list box will be displayed even if it is not required <i>unless </i>you hide it explicitly with the <spanclass=ImportantWord><span style='font-family:Helvetica'>FComponent.setAutoHide </span></span>method.</p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Youneed to use additional methods to add/remove the labels. In this case, we haveused <span class=ImportantWord><span style='font-family:Helvetica'>FComponent.removeItemAt </span></span>and <span class=ImportantWord><spanstyle='font-family:Helvetica'>FComponent.addItem. </span></span></p><p class=Bullet-Level1><span style='font-family:Symbol'>·<spanstyle='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Theminimum row count for a list box is 2. For a combo it is zero (no drop-down).</p>